{    
	"button":{
		"code": "Button(Body: Create user, Class: btn btn-primary, Contract: NewUser)",
		"Menu": "default_menu",
		"content": ""
	},
	"buttonCompositeContract":{
		"code": "Button(Body: addpage).CompositeContract(NewPage, [{\"param1\": \"val1\"}])",
		"Menu": "default_menu",
		"content": [
			  {
				"tag": "button",
				"attr": {
				  "composite": [
					{
					  "name": "NewPage",
					  "data": [
						{
						  "param1": "val1"
						}
					  ]
					}
				  ]
				},
				"children": [
				  {
					"tag": "text",
					"text": "addpage"
				  }
				]
			  }
			]
	},
    "selectorFromDB":{
		"code": "DBFind(\"menu\", data) %n Select(MySelect, data, \"name\")",
		"menu": "default_menu",
		"content": ""
	},
	"selectorFromData":{
		"code": "Data(myData, \"gender\"){\"Men\", \"Women\", \"Between\"} %n Select(mySelect, myData, \"gender\")",
		"menu": "default_menu",
		"content": ""
	},
    "now":{
		"code": "P(Today is Now(DD.MM.YYYY)) %n P(Now: Now(datetime))",
		"menu": "default_menu",
		"content": ""
	},
	"divs":{
		"code": "Div(content-wrapper){ %n Div(panel panel-primary){ %n Div(panel-heading, Header) %n }}",
		"menu": "default_menu",
		"content": {
			"tag":"div",
			"attr": {
				"class": "content-wrapper"
			},
			"children":{
				"tag":"div",
				"attr": {
					"class": "panel panel-primary"
				},
				"children":{
					"tag":"div",
					"attr": {
						"class": "panel-heading"
					},
					"children": [
						{
							"text": "Header"
						}
					]
				}
			}
		}
	},
    "setVar":{
		"code": "SetVar(head, Header) Div(, #head#)",
		"menu": "default_menu",
		"content": {
			"tag": "div",
			"children": [
				{
					"text": "Header"
				}
			]
		}
	},
	"input":{
		"code": "Input(Class: form-control, Placeholder: text, Type: text, Name: name)",
		"menu": "default_menu",
		"content":  {
			"tag": "input",
			"attr": {
				"class": "form-control",
				"name": "name",
				"placeholder": "text",
				"type": "text"
			}
		}
	},
    "menuGroup":{
		"code": "MenuGroup(My Menu){ MenuItem(Dahsboard, dashboard_default) MenuItem(Main, default_page)}",
		"menu": "default_menu",
		"content": {
			  "tag": "menugroup",
			  "attr": {
				"name": "My Menu",
				"title": "My Menu"
			  },
			  "children": [
				{
				  "tag": "menuitem",
				  "attr": {
					"page": "dashboard_default",
					"title": "Dahsboard"
				  }
				},
				{
				  "tag": "menuitem",
				  "attr": {
					"page": "default_page",
					"title": "Main"
				  }
				}
			  ]
		}
	},
    "linkPage":{
		"code": "LinkPage(Show my wallet, default_page, mybtn_class)",
		"menu": "default_menu",
		"content": {
            "tag": "linkpage",
            "attr": {
              "class": "mybtn_class",
              "page": "default_page"
            },
            "children": [
              {
                "text": "Show my wallet"
              }
            ]
        }
	},
    "ecosysParam":{
		"code": "Span(EcosysParam(max_block_user_tx))",
		"menu": "default_menu",
		"content": {
            "tag": "span",
            "children": [
              {
                "text": "100"
              }
            ]
        }
	},
    "paragraph":{
		"code": "p(This is paragraph)",
		"menu": "default_menu",
		"content": {
            "tag": "text",
            "text": "p(This is paragraph)"
        }
	},
    "getVar":{
		"code": "SetVar(name, FullName) Span(GetVar(name))",
		"menu": "default_menu",
		"content": {
            "tag": "span",
            "children": [
              {
                "text": "FullName"
              }
            ]
        }
	},
    "iff":{
		"code":"If(1<5){5 bigger than 1}.Else{Error}",
		"menu": "default_menu",
		"content": {
            "tag": "text",
            "text": "5 bigger than 1"
        }
	},
    "orr":{
		"code": "If(Or(1>5,10>5), 1 or 10 bigger than 5)",
		"menu": "default_menu",
        "content": {
            "tag": "text",
            "text": "1 or 10 bigger than 5"
        }
	},
    "andd":{
		"code": "If(And(1>0,5>0), 1 and 5 bigger than 0)",
		"menu": "default_menu",
        "content": {
            "tag": "text",
            "text": "1 and 5 bigger than 0"
        }
	},
    "form":{
		"code": "Form(){Span(Test)}",
		"menu": "default_menu",
		"content": {
            "tag": "form",
            "children": [
              {
                "tag": "span",
                "children": [
                  {
                    "text": "Test"
                  }
                ]
              }
            ]
        }
	},
    "label":{
		"code": "Label(For: name)",
		"menu": "default_menu",
		"content": {
            "tag": "label",
            "attr": {
              "for": "name"
            }
        }
	},
    "span":{
		"code": "Span(Test)",
		"menu": "default_menu",
		"content": {
            "tag": "span",
            "children": [
              {
                "text": "Test"
              }
            ]
        }
	},
    "langRes":{
		"code": "",
		"menu": "default_menu",
		"content": [{"text": "Lang_enМир_ru"}]
	},
    "inputErr":{
		"code": "InputErr(Name: Login, minLength: Value is too short, maxLength: The length of the value must be less than 10 characters)Input(Name: Login, Type: text).Validate(minLength: 6, maxLength: 10)",
		"menu": "default_menu",
		"content":  {
			"tag": "inputerr",
			"attr": {
				"maxlength": "The length of the value must be less than 10 characters",
				"minlength": "Value is too short",
				"name": "Login"
			}
		}
	},
    "include":{
		"code": "",
		"menu": "default_menu",
		"content": [{"text": "Hello page!"}]
	},
    "image":{
		"code": "Image(avatar)",
		"menu": "default_menu",
		"content": ""
	},
    "inputImage":{
		"code": "ImageInput(avatar, 100, 2/1)",
		"menu": "default_menu",
		"content": [
			  {
				"tag": "imageinput",
				"attr": {
				  "name": "avatar",
				  "ratio": "2/1",
				  "width": "100"
				}
			  }
		]
	},
    "alert":{
		"code": "Button(Body: Create user, Class: btn btn-primary, Contract: NewUser).Alert(Text: Name, ConfirmButton: Ok, CancelButton: Cancel, Icon: question)",
		"menu": "default_menu",
		"content": {
			"tag": "button",
			"attr": {
				"alert": {
					"cancelbutton": "Cancel",
					"confirmbutton": "Ok",
					"icon": "question",
					"text": "Name"
				}
			}
		}
	},
    "table":{
		"code": "DBFind(\"menu\",mysrc) Table(mysrc,\"Name=name,Value=value,Conditions=conditions\")",
		"menu": "default_menu",
		"content": "[{'tag': 'dbfind', 'attr': {'columns': ['id', 'name', 'value', 'conditions'], 'data': [['1', 'Block1', 'Hello page!', 'true']], 'name': 'blocks', 'source': 'mysrc', 'types': ['text', 'text', 'text', 'text']}}, {'tag': 'table', 'attr': {'columns': [{'Name': 'name', 'Title': 'Name'}, {'Name': 'value', 'Title': 'Value'}, {'Name': 'conditions', 'Title': 'Conditions'}], 'source': 'mysrc'}}]"
	},
    "kurs":{
		"code": "Em(cursive)",
		"menu": "default_menu",
		"content": [
			  {
				"tag": "em",
				"children": [
				  {
					"text": "cursive"
				  }
				]
			  }
		]
	},
    "strong":{
		"code": "Strong(strong)",
		"menu": "default_menu",
		"content":  [
			  {
				"tag": "strong",
				"children": [
				  {
					"text": "strong"
				  }
				]
			  }
		]
	},
    "getColumnType":{
		"code": "GetColumnType(contracts, id)",
		"menu": "default_menu",
		"content": {"text": "number"}
    },
    "sys_var_isMobile":{
		"code": "Em(#isMobile#)",
		"menu": "default_menu",
		"content": [{"tag": "em", "children": [{"tag": "text", "text": "0"}]}]
	},
    "sys_var_roleID":{
		"code": "Em(#role_id#)",
		"menu": "default_menu",
		"content": [{"tag": "em", "children": [{"tag": "text", "text": "0"}]}]
	},
    "sys_var_ecosystemID":{
		"code": "Em(#ecosystem_id#)",
		"menu": "default_menu",
		"content": [{"tag": "em", "children": [{"tag": "text", "text": "1"}]}]
	},
    "sys_var_ecosystem_name":{
		"code": "Em(#ecosystem_name#)",
		"menu": "default_menu",
		"content": [{"tag": "em", "children": [{"tag": "text", "text": "new_ecosystem_name_Andromeda"}]}]
	},
    "sys_var_keyID":{
		"code": "Em(#key_id#)",
		"menu": "default_menu",
		"content": ""
	},
    "dbfindCount":{
		"code": "DBFind(Name: contracts, Source: con).Count(cnt) Em(#cnt#)",
		"menu": "default_menu",
		"content": ""
	},
    "dbfindWhereCount":{
		"code": "DBFind(Name: contracts, Source: con).Where(\"id>=1 and id<=3\").Count(cnt) Em(#cnt#)",
		"menu": "default_menu",
		"content": "3"
	},
    "dbfindWhereIdCount":{
		"code": "DBFind(Name: contracts, Source: con).WhereId(1).Count(cnt) Em(#cnt#)",
		"menu": "default_menu",
		"content": "1"
	},
    "address":{
		"code": "Span(Address(4202110198495717481))",
		"menu": "default_menu",
		"content": {
			  "tag": "span",
			  "children": [
				{
				  "tag": "text",
				  "text": "0420-2110-1984-9571-7481"
				}
			  ]
			}
	}
}