{
    "name": "Companies Registry",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "cr_pager",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(#this_table#).Where(#where#).Order({\"id\": 1}).Count(records_count)\r\n\r\nIf(#pager_limit# < #records_count#){\r\n    If(#page_par#==\"\"){\r\n        SetVar(page_par,)\r\n    }\r\n    SetVar(previous_page, Calculate(Exp: #current_page# - 1, Type: int))\r\n    SetVar(next_page, Calculate(Exp: #current_page# + 1, Type: int))\r\n\r\n    SetVar(count_div_limit_int, Calculate(Exp: (#records_count# / #pager_limit#), Type: int))\r\n    SetVar(remainder, Calculate(Exp: (#records_count# / #pager_limit#) - #count_div_limit_int#, Type: float))\r\n    If(#remainder# != 0){\r\n        SetVar(last_page, Calculate(Exp: #count_div_limit_int# + 1, Type: int))\r\n    }.Else{\r\n        SetVar(last_page, #count_div_limit_int#)\r\n    }\r\n\r\n    SetVar(last_page_plus_one, Calculate(Exp: #last_page# + 1, Type: int))\r\n    SetVar(last_page_minus_one, Calculate(Exp: #last_page# - 1, Type: int))\r\n    SetVar(delta_last_page, Calculate(Exp: #last_page# - #current_page#))\r\n    SetVar(range_l, Calculate(Exp: #current_page# - 1, Type: int))\r\n    SetVar(range_r, Calculate(Exp: #current_page# + 2, Type: int))\r\n    SetVar(range_l_max, Calculate(Exp: #last_page# - #pager_limit#, Type: int))\r\n    SetVar(last_page_min_set, Calculate(Exp: #last_page_plus_one# - 3, Type: int))\r\n\r\n    If(#current_page# < 2){\r\n        If(#last_page# >= 4){\r\n            Range(src_pages, 1, 4)\r\n        }.Else{\r\n            Range(src_pages, 1, #last_page_plus_one#)\r\n        }\r\n    }.ElseIf(#delta_last_page# < 2){\r\n        If(#range_l_max# > 0){\r\n            Range(src_pages, #last_page_min_set#, #last_page_plus_one#)\r\n        }.Else{\r\n            Range(src_pages, 1, #last_page_plus_one#)\r\n        }\r\n    }.Else{\r\n        Range(src_pages, #range_l#, #range_r#)\r\n    }\r\n\r\n    Div(){\r\n        Span(Class: pull-left){\r\n            If(#current_page# < 3){\r\n            }.Else{\r\n                Button(Body: 1, Class: btn btn-default btn-grey-mini, Page: #this_page#, PageParams: \"current_page=1,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#,wizard=#wizard#,fnew=#fnew#\").Popup(Header: \"APLA ™\", Width: 45)\r\n                Span(Class: h4 mr-sm ml-sm, Body: ...)\r\n            }\r\n        }\r\n        Span(Class: pull-left){\r\n            ForList(src_pages){\r\n                Span(){\r\n                    If(#id# == #current_page#){\r\n                        Button(Body: #id#, Class: btn btn-primary btn-blue-mini, Page: #this_page#, PageParams: \"current_page=#id#,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#,wizard=#wizard#,fnew=#fnew#\").Popup(Header: \"APLA ™\", Width: 45)\r\n                    }.Else{\r\n                        Button(Body: #id#, Class: btn btn-default btn-grey-mini, Page: #this_page#, PageParams: \"current_page=#id#,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#,wizard=#wizard#,fnew=#fnew#\").Popup(Header: \"APLA ™\", Width: 45)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Span(Class: pull-left){\r\n            If(#current_page# >= #last_page_minus_one#){\r\n            }.Else{\r\n                Span(Class: h4 mr-sm ml-sm, Body: ...)\r\n                Button(Body: #last_page#, Class: btn btn-default btn-grey-mini, Page: #this_page#, PageParams: \"current_page=#last_page#,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#,wizard=#wizard#,fnew=#fnew#\").Popup(Header: \"APLA ™\", Width: 45)\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "blocks"
        },
        {
            "Name": "cr_pager_header",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#pager_limit# == \"\"){\r\n    SetVar(pager_limit, 25)\r\n}\r\nIf(#current_page# == \"\"){\r\n    SetVar(current_page, 1)\r\n}\r\nSetVar(pager_offset, Calculate(Exp: (#current_page# - 1) * #pager_limit#, Type: int))\r\nSetVar(current_page, #current_page#)",
            "Type": "blocks"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Div(Class: pt-sm){\r\n    DBFind(roles).Where({\"ecosystem\": #ecosystem_id#}).Count(all_roles_count)\r\n    If(#all_roles_count# > 0){\r\n        DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\n        LinkPage(Class: nav-container, Page: default_page){\r\n            Div(Class: nav-icon fa icon-home)\r\n            Div(Class: nav-border)\r\n            Span(Class: nav-item){\r\n                Home page\r\n            }\r\n        }\r\n        If(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type#==6)){\r\n            LinkPage(Class: nav-container mt-lg, Page: co_view){\r\n                Div(Class: nav-icon fa icon-globe)\r\n                Div(Class: nav-border)\r\n                Span(Class: nav-item){\r\n                    Company Details\r\n                }\r\n            }\r\n        }\r\n        If(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n            LinkPage(Class: nav-container mt-lg, Page: co_securities_list){\r\n                Div(Class: nav-icon fa icon-layers)\r\n                Div(Class: nav-border)\r\n                Span(Class: nav-item){\r\n                    Register of Shareholders\r\n                }\r\n            }\r\n        }\r\n        If(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n            LinkPage(Class: nav-container mt-lg, Page: shareholder_meetings){\r\n                Div(Class: nav-icon fa icon-note)\r\n                Div(Class: nav-border)\r\n                Span(Class: nav-item){\r\n                    Meetings of Shareholders\r\n                }\r\n            }\r\n        }\r\n        If(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type#==6)){\r\n            LinkPage(Class: nav-container mt-lg, Page: shareholder_directors){\r\n                Div(Class: nav-icon fa icon-calendar)\r\n                Div(Class: nav-border)\r\n                Span(Class: nav-item){\r\n                    Board of Directors\r\n                }\r\n            }\r\n        }\r\n        LinkPage(Class: nav-container mt-lg, Page: shareholder_profile){\r\n            Div(Class: nav-icon fa icon-user)\r\n            Div(Class: nav-border)\r\n            Span(Class: nav-item){\r\n                Profile\r\n            }\r\n        }\r\n        If(Or(#filter_role_type#==3,#filter_role_type#==8)){\r\n            LinkPage(Class: nav-container mt-lg, Page: settings_sh_list){\r\n                Div(Class: nav-icon fa icon-settings)\r\n                Div(Class: nav-border)\r\n                Span(Class: nav-item){\r\n                    Control Panel\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        LinkPage(Class: nav-container mt-lg, Page: shareholder_settings){\r\n            Div(Class: nav-icon fa icon-social-dropbox)\r\n            Div(Class: nav-border)\r\n            Span(Class: nav-item){\r\n                Deploy\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    a {\r\n        color: #909fa7;\r\n        text-decoration: none;\r\n    }\r\n    a:hover {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    a:active {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    a:active {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    a:link {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    .nav-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position:relative;\r\n        height: 60px;\r\n    }\r\n    .nav-icon {\r\n        padding: 0 20px 0 20px;\r\n        font-size: 30px;\r\n        align-self: center;\r\n    }\r\n    .nav-border {\r\n        position:absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        top: 0;\r\n        margin-left: 70px!important;\r\n        width: 4px;\r\n        background-color: #0677FA;\r\n        display:none;\r\n    }\r\n    .nav-container:hover .nav-border {\r\n        display: block!important;\r\n    }\r\n    .nav-container:active .nav-border {\r\n        display: block!important;\r\n    }\r\n     .nav-item {\r\n        flex-grow: 1;\r\n        align-items: center;\r\n        width: 50px;\r\n        padding: 0 20px 0 20px;\r\n        font-size: 18px;\r\n    }\r\n)",
            "Type": "menu"
        },
        {
            "Name": "column_amount_not_found",
            "Trans": "{\"en\": \"Column Amount not found\", \"ru\": \"Колонка Amount не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "column_comments_not_found",
            "Trans": "{\"en\": \"Column Comments not found\", \"ru\": \"Колонка Comments не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "column_date_not_found",
            "Trans": "{\"en\": \"Column Date not found\", \"ru\": \"Колонка Date не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "column_wallet_not_found",
            "Trans": "{\"en\": \"Column Wallet not found\", \"ru\": \"Колонка Wallet не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "security_not_found",
            "Trans": "{\"en\": \" Data about the securities of the specified user not found\", \"ru\": \"Данные о ценных бумагах пользователя не найдены\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "sharholdes_different_address",
            "Trans": "{\"en\": \"Shareholder wallet address is different from the wallet address in the uploaded file\", \"ru\": \"Адрес кошелька акционера отличается от адреса кошелька в загруженном файле\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "co_shares_list",
            "Columns": "[\r\n    {\r\n        \"name\":\"amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"details\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"name\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"info\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"total_amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_list",
            "Columns": "[\r\n    {\r\n        \"name\":\"address\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"legal_form\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"license\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"name\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"registration\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"trader_name\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"settings\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_orders_securities",
            "Columns": "[\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"file_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"new_owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"order_amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_date\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_signs\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"previous_owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"shares_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"status\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_securities",
            "Columns": "[\r\n    {\r\n        \"name\":\"balance\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"info\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"share_percent\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"double\"\r\n    },\r\n    {\r\n        \"name\":\"shares_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_securities_history",
            "Columns": "[\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"history_balance\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_comments\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"order_date\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"security_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"transaction_type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"history_block\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"history_percent\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"double\"\r\n    },\r\n    {\r\n        \"name\":\"shares_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "meetings_list",
            "Columns": "[\r\n    {\r\n        \"name\":\"agenda\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"matters\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"meeting_bd\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"meeting_shareholders\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"meeting_type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"status\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"history_block\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "meetings_participants",
            "Columns": "[\r\n    {\r\n        \"name\":\"decision\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_decision\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"meeting_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"meeting_type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"participant\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"point_index\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"shares_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "poa_list",
            "Columns": "[\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_end\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_start\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"recipient\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"sender\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"status\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"file_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "security_intermediate_data",
            "Columns": "[\r\n    {\r\n        \"name\":\"amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"comments\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"manager\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"securities_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "settings_entity_edit",
            "Columns": "[\r\n  {\r\n    \"name\":\"approval_flags\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"json\"\r\n  },\r\n  {\r\n    \"name\":\"conditions\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  },\r\n  {\r\n    \"name\":\"date_created\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"info\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"json\"\r\n  },\r\n  {\r\n    \"name\":\"name\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  },\r\n  {\r\n    \"name\":\"sender\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"varchar\"\r\n  },\r\n  {\r\n    \"name\":\"type\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  },\r\n  {\r\n    \"name\":\"value\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "settings_support",
            "Columns": "[\r\n    {\r\n        \"name\":\"date_closed\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"inquiry_info\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"processing_info\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"role_recipient\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"sender\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"status\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "settings_support_messanges",
            "Columns": "[\r\n    {\r\n        \"name\":\"id_inquiry\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"messange_date\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"messange_text\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"sender\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "timer_test",
            "Columns": "[\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "voting_issues",
            "Columns": "[\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"name\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"description\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"settings\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"date_deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_legal_form",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Joint-Stock Company,Limited Liability Company",
            "Type": "app_params"
        },
        {
            "Name": "companies_shares_type",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Ordinary shares,Preference shares",
            "Type": "app_params"
        },
        {
            "Name": "roles_types",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "@1assigned_role,@1elective_role,@1system_role,Issuer,Shareholder,Board Member,Board of Directors",
            "Type": "app_params"
        },
        {
            "Name": "stylesheet",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "/*===============================POPUP============================================*/\r\n\r\n    /*-----------------------INPUT--------------------------------------------*/\r\n    .stl-input {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid #b7b7b7;\r\n        border-radius: 6px;\r\n        height: 40px;\r\n    }\r\n    .style-textarea {\r\n        font-size: 16px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid #b7b7b7;\r\n        border-radius: 6px;\r\n    }\r\n\r\n    /*-----------------------BUTTONS------------------------------------------*/\r\n    .btn-default-accept {\r\n        background-color: #26bc4a;\r\n        color: #ffffff;\r\n        height: 35px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #1d953a !important;\r\n    }\r\n    .btn-default-reject {\r\n        background-color: #f0645d;\r\n        color: #ffffff;\r\n        height: 35px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btn-accept:hover {\r\n        border-color: #1c8c36 !important;\r\n    }\r\n    .btn-reject:hover {\r\n        border-color: #a61717 !important;\r\n    }    \r\n.btn-grey-plus.btn-grey-plus {\r\n        height: 40px;\r\n        width: 60px!important;\r\n        border-radius: 6px;\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        border: 1px solid #b7b7b7;\r\n    }\r\n\r\n    .btn-blue-mini.btn-blue-mini {\r\n        height: 36px;\r\n        width: 60px!important;\r\n        border-radius: 6px;\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        border: 1px solid #4b7dbd;\r\n    }\r\n    .btn-grey-mini.btn-grey-mini {\r\n        height: 36px;\r\n        width: 60px!important;\r\n        border-radius: 6px;\r\n        margin-left: 2px;\r\n        margin-right: 2px;\r\n        border: 1px solid #b7b7b7;\r\n    }\r\n\r\n    .btn-blue.btn-blue {\r\n        height: 36px;\r\n        width: 100px!important;\r\n        border-radius: 6px;\r\n        border: 1px solid #4b7dbd;\r\n    }\r\n    .btn-grey.btn-grey {\r\n        height: 36px;\r\n        width: 100px!important;\r\n        border-radius: 6px;\r\n        border: 1px solid #b7b7b7;\r\n    }\r\n     .btn-grey-max.btn-grey-max {\r\n        height: 36px;\r\n        width: 130px!important;\r\n        border-radius: 6px;\r\n        border: 1px solid #b7b7b7;\r\n    }\r\n    \r\n    /*-----------------------FORM---------------------------------------------*/\r\n    .popup-min-width {\r\n        min-width: 400px!important;\r\n    }\r\n\r\n\r\n/*===============================FORMS============================================*/\r\n\r\n        /*-----------------------BUTTONS------------------------------------------*/\r\n        .btn-micro-default-red {\r\n                height: 42px;\r\n                font-weight: bold;\r\n                font-size: 18px;\r\n                color: #5d9cec;\r\n                padding: 6px 20px; 6px; 20px;\r\n                background-color: #fff;\r\n                border: 1px solid #5d9cec;\r\n                border-radius: 6px;\r\n                width: 130px!important;\r\n        }\r\n        .btn-micro-default-red:hover {\r\n                border: 1px solid #ff7675;\r\n                color: #ff7675;\r\n        }\r\n\r\n        .btn-mini-default-red {\r\n                color: #5d9cec;\r\n                font-size: 18px;\r\n                background-color: #fff;\r\n                border: 1px solid #5d9cec;\r\n                border-radius: 6px;\r\n                width: 140px!important;\r\n                height: 30px;\r\n        }\r\n        .btn-mini-default-red:hover {\r\n                border: 1px solid #ff7675;\r\n                color: #ff7675;\r\n        }\r\n\r\n        .btn-default-red {\r\n                height: 42px;\r\n                font-weight: bold;\r\n                font-size: 18px;\r\n                color: #5d9cec;\r\n                padding: 6px 20px; 6px; 20px;\r\n                background-color: #fff;\r\n                border: 1px solid #5d9cec;\r\n                border-radius: 6px;\r\n                width: 150px!important;\r\n        }\r\n        .btn-default-red:hover {\r\n                border: 1px solid #ff7675;\r\n                color: #ff7675;\r\n        }\r\n\r\n        /*-----------------------FORM---------------------------------------------*/\r\n        .form-min-width {\r\n                min-width: 850px!important;\r\n        }\r\n        .stl-form {\r\n                margin-right: 0!important;\r\n                margin-left: 0!important;\r\n                padding-left: 5px!important;\r\n                padding-right: 5px!important;\r\n        }\r\n\r\n        /*-----------------------TABLE--------------------------------------------*/\r\n        table > tbody > tr > td {\r\n                vertical-align : top!important;\r\n                font-size: 15px;\r\n                padding-left: 20px!important;\r\n                padding-right: 20px!important;\r\n                padding-top: 10px!important;\r\n                padding-bottom: 10px!important;\r\n        }\r\n        .table-noheader {\r\n                margin-top: -29px;\r\n        }\r\n\r\n        /*-----------------------SEARCH-------------------------------------------*/\r\n        .stl-group-search {\r\n                width: 420px!important;\r\n                margin-top:-4px;\r\n        }\r\n        .input-search {\r\n                font-size: 18px;\r\n                background-color: #fff;\r\n                border: 1px solid #e0e0e0;\r\n                border-radius: 6px;\r\n                height: 40px!important;\r\n        }\r\n        .btn-search.btn-search {\r\n                width: 60px!important;\r\n                border-radius: 6px;\r\n                border: 1px solid #e0e0e0;\r\n                background-color: #fff;\r\n                height: 40px!important;\r\n        }\r\n\r\n        /*-----------------------TEXT-COLOR---------------------------------------*/\r\n        .text-black {\r\n                color: #000000;\r\n        }\r\n\r\n        /*-----------------------TEXT-WRAP----------------------------------------*/\r\n        .txt-3-line {\r\n                max-height: 60px!important;\r\n        }\r\n        .txt-hidden {\r\n                text-overflow: ellipsis;\r\n                overflow: hidden;\r\n                white-space: normal;\r\n        }\r\n        .txt-nowrap {\r\n                text-overflow: ellipsis;\r\n                overflow: hidden;\r\n                white-space: nowrap;\r\n        }\r\n\r\n        /*-----------------------TEXT-STYLE---------------------------------------*/\r\n        .txt-hl-main {\r\n                color: #000000;\r\n                font-weight: bold;\r\n                font-size: 28px;\r\n        }\r\n        .txt-hl-navigation-blue {\r\n                color: #5d9cec;\r\n                font-weight: bold;\r\n                font-size: 24px;\r\n        }\r\n        .txt-hl-navigation {\r\n                color: #000000;\r\n                font-weight: bold;\r\n                font-size: 24px;\r\n        }\r\n        .txt-table-hl {\r\n                font-weight: bold;\r\n                color: #000000;\r\n                font-style: italic;\r\n                text-decoration: underline;\r\n                font-size: 16px;\r\n        }\r\n\r\n        .txt-review {\r\n                color: #f05077;\r\n                font-style: italic;\r\n                padding-left: 10px!important;\r\n        }\r\n        .txt-absent {\r\n                font-size: 20px;\r\n                color: #909fa7;\r\n                font-style: italic;\r\n                padding-top: 50px!important;\r\n                padding-bottom: 10px!important;\r\n        }\r\n        .txt-absent-p0 {\r\n                font-size: 20px;\r\n                color: #909fa7;\r\n                font-style: italic;\r\n        }\r\n\r\n        .p-00 {\r\n                max-height: 22px;\r\n                margin-top: 0px!important;\r\n                margin-left: 5px!important;\r\n                margin-bottom: 0px!important;\r\n                padding-top: 0px!important;\r\n                padding-bottom: 0px!important;\r\n        }\r\n        .p-10 {\r\n                max-height: 22px;\r\n                margin-top: 7px!important;\r\n                margin-left: 5px!important;\r\n                margin-bottom: 0px!important;\r\n                padding-top: 0px!important;\r\n                padding-bottom: 0px!important;\r\n        }\r\n        .p-20 {\r\n                max-height: 22px;\r\n                margin-top: 17px!important;\r\n                margin-left: 5px!important;\r\n                margin-bottom: 0px!important;\r\n                padding-top: 0px!important;\r\n                padding-bottom: 0px!important;\r\n        }\r\n        .p-30 {\r\n                font-size: 18px;\r\n                margin-top: 10px!important;\r\n                margin-bottom: 0px!important;\r\n                padding-top: 0px!important;\r\n                padding-bottom: 0px!important;\r\n        }\r\n        .p-30-m0 {\r\n                font-size: 18px;\r\n                margin-top: 0px!important;\r\n                margin-bottom: 0px!important;\r\n                padding-top: 0px!important;\r\n                padding-bottom: 0px!important;\r\n        }\r\n        .p-40 {\r\n                font-size: 24px;\r\n                margin-top: 20px!important;\r\n                margin-bottom: 0px!important;\r\n                padding-top: 0px!important;\r\n                padding-bottom: 0px!important;\r\n        }",
            "Type": "app_params"
        },
        {
            "Name": "voting_questions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Approval of priority areas of the company;\r\nApproval of the company's dividend policy;\r\nReorganization or liquidation of the company;\r\nIncrease or decrease in the authorized capital of the company;\r\nDecisions on the listing of shares of the company;\r\nDetermination of the price of significant transactions of the company;\r\nConsideration of recommendations on the amount of dividends;\r\nAnother question;",
            "Type": "app_params"
        },
        {
            "Name": "xreg_editing_entity",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "New Page,Edit Page,New Contract,Edit Contract,New AppParam,Edit AppParam,New Block,Edit Block,Edit Menu,New Param,Edit Param",
            "Type": "app_params"
        },
        {
            "Name": "bd_meeting_add",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(And(#filter_role_company_id#>0,Or(#filter_role_type#==5,#filter_role_type#==6))){\r\n    SetVar(filter_access, 1)\r\n}\r\n\r\nForm(){\r\n    Input(Name: MeetingType, Type: hidden, Value: #MeetingType#)\r\n    Div(row mt){\r\n        Div(col-md-8 col-md-offset-2){\r\n            Div(panel panel-primary popup-min-width){\r\n                Div(panel-body ml-lg mr-lg){\r\n                    If(#filter_access# == 1){\r\n\r\n                        DBFind(companies_list).Where({\"id\": #filter_role_company_id#}).Columns(\"id,name,address->country,address->city,address->postal_code,address->street,address->house_number\").Vars(view)\r\n                        SetVar(company_address, #view_address_city#, #view_address_street# #view_address_house_number#, #view_address_postal_code#, #view_address_country#)\r\n                        Input(Name: CompanyId, Type: hidden, Value: #filter_role_company_id#)\r\n\r\n                        If(Or(#MeetingType#==11,#MeetingType#==21)){\r\n                            DBFind(voting_issues, src_questions).Where({\"settings->participants\": \"Shareholder\", \"company_id\": #filter_role_company_id#, \"deleted\": 0}).Columns(\"settings->percentage,name,id\").Custom(_name){\r\n                                Span([#settings.percentage#%] #name#)\r\n                            }\r\n                        }\r\n                        If(#MeetingType#==22){\r\n                            DBFind(voting_issues, src_questions).Where({\"settings->participants\": \"Board Member\", \"company_id\": #filter_role_company_id#, \"deleted\": 0}).Columns(\"settings->percentage,name,id\").Custom(_name){\r\n                                Span([#settings.percentage#%] #name#)\r\n                            }\r\n                        }    \r\n\r\n                        If(Or(#MeetingType#==21,#MeetingType#==22)){\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Meeting of the Board of Directors).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting format Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDFormat, Class: stl-input mt-sm, Value: Electronic voting by the Board Members)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Agenda of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDAgenda, Class: stl-input mt-sm, Value: Conducting the meeting of the shareholders of the company)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDPlace, Class: stl-input mt-sm, Value: #company_address#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting has been initiated by Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDInitiated, Class: stl-input mt-sm, Value: #account_id#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Date of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: MeetingBDDateFromD, Class: stl-input mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingBDDateFromT, Class: stl-input mt-sm, Type: time, Value: 00:00).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: MeetingBDDateUntilD, Class: stl-input mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingBDDateUntilT, Class: stl-input mt-sm, Type: time, Value: 00:00).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm)\r\n                        }\r\n\r\n                        If(Or(#MeetingType#==11,#MeetingType#==21)){\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Meeting of the Shareholders).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Issuer Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHIssuer, Class: stl-input mt-sm, Value: #view_name#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Legal form of conducting the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHLegalForm, Class: style-textarea mt-sm, Type: textarea, Value: Distance voting with the use of the blockchain electronic voting system).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of calling the meeting and verification of the results Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHPlaceResults, Class: stl-input mt-sm, Value: #company_address#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting has been initiated by Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHInitiated, Class: stl-input mt-sm, Value: #account_id#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Timing for submitting votes by the shareholders on the points of the agenda of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: MeetingSHDateFromD, Class: stl-input mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingSHDateFromT, Class: stl-input mt-sm, Type: time, Value: 00:00).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: MeetingSHDateUntilD, Class: stl-input mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingSHDateUntilT, Class: stl-input mt-sm, Type: time, Value: 00:00).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm)\r\n                        }\r\n\r\n                        If(Or(#MeetingType#==11,#MeetingType#==21,#MeetingType#==22)){\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Agenda of the meeting).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    If(#cs#==\"\"){\r\n                                        SetVar(cs,0)\r\n                                    }\r\n                                    If(#del# == 1){\r\n                                        SetVar(cs,Calculate(#cs# - 1))\r\n                                    }.Else{\r\n                                        SetVar(cs,Calculate(#cs# + 1))\r\n                                    }\r\n                                    Range(params_range, 0, #cs#)\r\n                                    ForList(Source: params_range){\r\n                                        Div(Class: pb-lg){\r\n                                            Div(input-group){\r\n                                                Select(Name: AgendaIdArr, Class: stl-input, Source: src_questions, NameColumn: _name, ValueColumn: id)\r\n                                                Div(input-group-btn){\r\n                                                    If(And(#cs#==#params_range_index#,#cs#>1)){\r\n                                                        Button(Class: btn btn-default fa fa-plus btn-grey-plus fa fa-trash, PageParams: \"cs=#cs#,del=1,MeetingType=#MeetingType#\", Page: bd_meeting_add)\r\n                                                    }.Else{\r\n                                                        Button(Class: btn btn-default fa fa-plus btn-grey-plus fa fa-ellipsis-h)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            Input(Name: AgendaDesArr, Class: style-textarea, Type: textarea, Value: \"Description\").Style(\r\n                                                resize: vertical; \r\n                                                min-height: 6em;\r\n                                                margin-top: 4px;\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                    Div(text-center){\r\n                                        Button(Class: btn btn-link, Body: Add point, PageParams: \"cs=#cs#,MeetingType=#MeetingType#\", Page: bd_meeting_add).Style(\r\n                                            margin-top: -20px;\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        If(Or(#MeetingType#==11,#MeetingType#==21,#MeetingType#==22)){\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Other matters).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Input(Name: Matters, Class: style-textarea, Type: textarea, Value: Engage the Law Firm to prepare the bulletin for voting and make the other necessary arrangements for conducting the meeting via the Apla electronic voting system.).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        If(#MeetingType#==11){  \r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: MeetingEdit, Page: shareholder_meetings)\r\n                                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_meetings)\r\n                                }\r\n                            }\r\n                        }\r\n                        If(Or(#MeetingType#==21,#MeetingType#==22)){  \r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: MeetingEdit, Page: shareholder_directors)\r\n                                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_directors)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "bd_meeting_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#meeting_id# > 0){\r\n    DBFind(meetings_list, src).Where({\"id\": #meeting_id#}).Columns(\"company_id,meeting_type,date_created,status,meeting_bd->format,meeting_bd->agenda,meeting_bd->place,meeting_bd->initiated,meeting_bd->date_from,meeting_bd->date_until,meeting_shareholders->issuer,meeting_shareholders->legal_form,meeting_shareholders->place_results,meeting_shareholders->initiated,meeting_shareholders->date_from,meeting_shareholders->date_until,agenda,matters\").Vars(view)\r\n    \r\n    DBFind(companies_list).Where({\"id\": #view_company_id#}).Columns(\"address->timezone\").Vars(c)\r\n    If(#c_address_timezone# != \"\"){\r\n        SetVar(timezone, #c_address_timezone#)\r\n    }.Else{\r\n        SetVar(timezone, \"America/Danmarkshavn\")\r\n    }\r\n}\r\n\r\nIf(#view_status#==1){\r\n    If(#view_meeting_type#==11){\r\n        SetVar(creator, #view_meeting_shareholders_initiated#)\r\n    }.ElseIf(Or(#view_meeting_type#==21,#view_meeting_type#==22)){\r\n        SetVar(creator, #view_meeting_bd_initiated#)\r\n    }\r\n    If(#creator#==#account_id#){\r\n        SetVar(filter_access, 1)\r\n    }\r\n}\r\n\r\nForm(){\r\n    Input(Name: MeetingType, Type: hidden, Value: #view_meeting_type#)\r\n    Div(row mt){\r\n        Div(col-md-8 col-md-offset-2){\r\n            Div(panel panel-primary popup-min-width){\r\n                Div(panel-body ml-lg mr-lg){\r\n                    If(#filter_access# == 1){\r\n\r\n                        Input(Name: Id, Type: hidden, Value: #meeting_id#)\r\n                        If(Or(#view_meeting_type#==11,#view_meeting_type#==21)){\r\n                            DBFind(voting_issues, src_questions).Where({\"settings->participants\": \"Shareholder\", \"company_id\": #view_company_id#, \"deleted\": 0}).Columns(\"settings->percentage,name,id\").Custom(_name){\r\n                                Span([#settings.percentage#%] #name#)\r\n                            }\r\n                        }\r\n                        If(#view_meeting_type#==22){\r\n                            DBFind(voting_issues, src_questions).Where({\"settings->participants\": \"Board Member\", \"company_id\": #view_company_id#, \"deleted\": 0}).Columns(\"settings->percentage,name,id\").Custom(_name){\r\n                                Span([#settings.percentage#%] #name#)\r\n                            }\r\n                        }                        \r\n\r\n                        If(Or(#view_meeting_type#==21,#view_meeting_type#==22)){\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Meeting of the Board of Directors).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting format Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDFormat, Class: stl-input mt-sm, Value: #view_meeting_bd_format#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Agenda of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDAgenda, Class: stl-input mt-sm, Value: #view_meeting_bd_agenda#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDPlace, Class: stl-input mt-sm, Value: #view_meeting_bd_place#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting has been initiated by Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingBDInitiated, Class: stl-input mt-sm, Value: #view_meeting_bd_initiated#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Date of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(MeetingDateFrom_dt, DateTime(DateTime: #view_meeting_bd_date_from#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                                                SetVar(MeetingDateFrom_tm, DateTime(DateTime: #view_meeting_bd_date_from#, Format: \"HH:MI\", Location: #timezone#))\r\n                                                Input(Name: MeetingBDDateFromD, Class: stl-input mt-sm, Type: date, Value: #MeetingDateFrom_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingBDDateFromT, Class: stl-input mt-sm, Type: time, Value: #MeetingDateFrom_tm#).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(MeetingDateUntil_dt, DateTime(DateTime: #view_meeting_bd_date_until#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                                                SetVar(MeetingDateUntil_tm, DateTime(DateTime: #view_meeting_bd_date_until#, Format: \"HH:MI\", Location: #timezone#))\r\n                                                Input(Name: MeetingBDDateUntilD, Class: stl-input mt-sm, Type: date, Value: #MeetingDateUntil_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingBDDateUntilT, Class: stl-input mt-sm, Type: time, Value: #MeetingDateUntil_tm#).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm)\r\n                        }\r\n\r\n                        If(Or(#view_meeting_type#==11,#view_meeting_type#==21)){\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Meeting of the Shareholders).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Issuer Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHIssuer, Class: stl-input mt-sm, Value: #view_meeting_shareholders_issuer#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Legal form of conducting the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHLegalForm, Class: style-textarea mt-sm, Type: textarea, Value: #view_meeting_shareholders_legal_form#).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of calling the meeting and verification of the results Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHPlaceResults, Class: stl-input mt-sm, Value: #view_meeting_shareholders_place_results#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting has been initiated by Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingSHInitiated, Class: stl-input mt-sm, Value: #view_meeting_shareholders_initiated#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Timing for submitting votes by the shareholders on the points of the agenda of the meeting [in the period from / until] (#timezone#) Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(AgendaDateFrom_dt, DateTime(DateTime: #view_meeting_shareholders_date_from#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                                                SetVar(AgendaDateFrom_tm, DateTime(DateTime: #view_meeting_shareholders_date_from#, Format: \"HH:MI\", Location: #timezone#))\r\n                                                Input(Name: MeetingSHDateFromD, Class: stl-input mt-sm, Type: date, Value: #AgendaDateFrom_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingSHDateFromT, Class: stl-input mt-sm, Type: time, Value: #AgendaDateFrom_tm#).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(AgendaDateUntil_dt, DateTime(DateTime: #view_meeting_shareholders_date_until#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                                                SetVar(AgendaDateUntil_tm, DateTime(DateTime: #view_meeting_shareholders_date_until#, Format: \"HH:MI\", Location: #timezone#))\r\n                                                Input(Name: MeetingSHDateUntilD, Class: stl-input mt-sm, Type: date, Value: #AgendaDateUntil_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingSHDateUntilT, Class: stl-input mt-sm, Type: time, Value: #AgendaDateUntil_tm#).Style(\r\n                                                        border-top-right-radius: 6px!important;\r\n                                                        border-bottom-right-radius: 6px!important;\r\n                                                    )\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm)\r\n                        }\r\n\r\n                        If(Or(#view_meeting_type#==11,#view_meeting_type#==21,#view_meeting_type#==22)){\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Agenda of the meeting).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    ArrayToSource(pv, #view_agenda#)\r\n                                    ForList(Source: pv, Index: s_ind){\r\n                                        SetVar(max_sec, #s_ind#)\r\n                                    }\r\n                                    If(#cs#==\"\"){\r\n                                        SetVar(cs, #max_sec#)\r\n                                    }\r\n                                    If(Or(#del_flag#==1,#del_data#>0)){\r\n                                        SetVar(cs, Calculate(Exp:#cs#-1, Type: int))\r\n                                    }\r\n\r\n                                    SetVar(next_sec, Calculate(Exp:#cs#+1, Type: int))\r\n                                    SetVar(data_sec, Calculate(Exp:#cs#-#max_sec#, Type: int))\r\n\r\n                                    ForList(Source: pv, Index: s_ind){\r\n                                        If(#s_ind#>#cs#){\r\n                                        }.Else{\r\n                                            Div(Class: pb-lg){\r\n                                                JsonToSource(map_points, #value#, map)\r\n                                                ForList(map_points){\r\n                                                    If(#map_key#==\"agenda_id\"){\r\n                                                        Div(input-group){\r\n                                                            Select(Name: AgendaIdArr, Class: stl-input, Source: src_questions, NameColumn: _name, ValueColumn: id, Value: #map_value#)\r\n                                                            Div(input-group-btn){\r\n                                                                If(And(#s_ind#>1,#s_ind#==#cs#)){\r\n                                                                    Button(Class: btn btn-default fa fa-plus btn-grey-plus fa fa-trash, PageParams: \"meeting_id=#meeting_id#,cs=#cs#,del_data=#s_ind#\", Page: bd_meeting_edit)\r\n                                                                }.Else{\r\n                                                                    Button(Class: btn btn-default fa fa-plus btn-grey-plus fa fa-ellipsis-h)\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                ForList(map_points){\r\n                                                    If(#map_key#==\"description\"){\r\n                                                        Input(Name: AgendaDesArr, Class: style-textarea, Type: textarea, Value: #map_value#).Style(\r\n                                                            resize: vertical; \r\n                                                            min-height: 6em;\r\n                                                            margin-top: 4px;\r\n                                                        )\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    Range(params_range, #max_sec#, #cs#)\r\n                                    ForList(Source: params_range, Index:s_ind){\r\n                                        Div(Class: pb-lg){\r\n                                            Div(input-group){\r\n                                                Select(Name: AgendaIdArr, Class: stl-input, Source: src_questions, NameColumn: _name, ValueColumn: id)\r\n                                                Div(input-group-btn){\r\n                                                    If(#s_ind#==#data_sec#){\r\n                                                        Button(Class: btn btn-default fa fa-plus btn-grey-plus fa fa-trash, PageParams: \"meeting_id=#meeting_id#,cs=#cs#,del_data=#s_ind#\", Page: bd_meeting_edit)\r\n                                                    }.Else{\r\n                                                        Button(Class: btn btn-default fa fa-plus btn-grey-plus fa fa-ellipsis-h)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            Input(Name: AgendaDesArr, Class: style-textarea, Type: textarea, Value: \"Description\").Style(\r\n                                                resize: vertical; \r\n                                                min-height: 6em;\r\n                                                margin-top: 4px;\r\n                                            )\r\n                                        }\r\n                                    }\r\n\r\n                                    Div(text-center){\r\n                                        Button(Class: btn btn-link, Body: Add point, PageParams: \"meeting_id=#meeting_id#,cs=#next_sec#\", Page: bd_meeting_edit).Style(\r\n                                            margin-top: -20px;\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        If(Or(#view_meeting_type#==11,#view_meeting_type#==21,#view_meeting_type#==22)){\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Other matters).Style(text-decoration: underline;)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Input(Name: Matters, Class: style-textarea, Type: textarea, Value: #view_matters#).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        If(#view_meeting_type#==11){  \r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: MeetingEdit, Params: \"CompanyId=#view_company_id#\", Page: shareholder_meetings)\r\n                                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_meetings)\r\n                                }\r\n                            }\r\n                        }\r\n                        If(Or(#view_meeting_type#==21,#view_meeting_type#==22)){  \r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: MeetingEdit, Params: \"CompanyId=#view_company_id#\", Page: shareholder_directors)\r\n                                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_directors)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "bd_meeting_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(notifications).Where({\"ecosystem\": #ecosystem_id#, \"id\": #notific_id#}).Columns(\"page_params->meeting_id\").Vars(message)\r\n    If(#message_page_params_meeting_id#){\r\n        SetVar(meeting_id, #message_page_params_meeting_id#)\r\n    }\r\n}\r\nDBFind(meetings_list).Where({\"id\": #meeting_id#}).Columns(\"company_id,meeting_type,date_created,status,meeting_bd->format,meeting_bd->agenda,meeting_bd->place,meeting_bd->initiated,meeting_bd->date_from,meeting_bd->date_until,meeting_shareholders->issuer,meeting_shareholders->legal_form,meeting_shareholders->place_results,meeting_shareholders->initiated,meeting_shareholders->date_from,meeting_shareholders->date_until,agenda,matters\").Vars(view)\r\n\r\nDBFind(companies_list).Where({\"id\": #view_company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(#filter_role_type#==4){\r\n    If(#filter_role_company_id# == #view_company_id#){\r\n        SetVar(filter_access, 1)\r\n    }\r\n}.ElseIf(#filter_role_type#==5){\r\n    If(#filter_role_company_id# == #view_company_id#){\r\n        If(Or(#view_meeting_type#==11,#view_meeting_type#==12)){\r\n            SetVar(filter_access, 1)\r\n        }\r\n        SetVar(ImShareholder, 1)\r\n    }\r\n}.ElseIf(#filter_role_type#==6){\r\n    If(#filter_role_company_id# == #view_company_id#){\r\n        SetVar(filter_access, 1)\r\n        SetVar(ImBoardMember, 1)\r\n    }\r\n}.ElseIf(#filter_role_type#==7){\r\n    If(#filter_role_company_id# == #view_company_id#){\r\n        If(Or(#view_meeting_type#==11,#view_meeting_type#==12)){\r\n            SetVar(filter_access, 1)\r\n        }\r\n        SetVar(ImAgent, 1)\r\n    }\r\n}\r\n\r\nForm(){\r\n    Div(row mt){\r\n        Div(col-md-10 col-md-offset-1){\r\n            Div(panel panel-primary){\r\n                Div(panel-body m0){\r\n                    If(#filter_access# == 1){\r\n                        Div(){\r\n                            Span(Class: pr-xl pb-lg fullscreen){\r\n                                If(Or(#view_meeting_type#==21,#view_meeting_type#==22)){\r\n                                    Div(bb pb-lg mt-lg){\r\n                                        Div(pl-lg pb pt-sm text-center){\r\n                                            Span(Class: h3 text-bold text-black, Body: Meeting of the Board of Directors).Style(text-decoration: underline;)\r\n                                        }\r\n                                        If(#view_meeting_bd_format# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(The meeting format))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_bd_format#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_bd_agenda# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Agenda of the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_bd_agenda#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_bd_place# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Place of the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_bd_place#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_bd_initiated# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0, Body: Strong(The meeting has been initiated by))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_bd_initiated#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_bd_date_from# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Date of the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: In the period from DateTime(DateTime: #view_meeting_bd_date_from#, Format: \"DD.MM.YYYY HH:MI\", Location: #timezone#) / until DateTime(DateTime: #view_meeting_bd_date_until#, Format: \"DD.MM.YYYY HH:MI\", Location: #timezone#))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                If(Or(#view_meeting_type#==11,#view_meeting_type#==12,#view_meeting_type#==21)){\r\n                                    Div(bb pb-lg mt-lg){\r\n                                        Div(pl-lg pb pt-sm text-center){\r\n                                            Span(Class: h3 text-bold text-black, Body: Meeting of Shareholders).Style(text-decoration: underline;)\r\n                                        }\r\n                                        If(#view_meeting_shareholders_issuer# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Issuer))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_shareholders_issuer#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_shareholders_legal_form# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Legal form of conducting))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_shareholders_legal_form#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_shareholders_place_results# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Place of calling the meeting and))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(verification of the results))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_shareholders_place_results#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_shareholders_initiated# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(The meeting has been initiated by))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_meeting_shareholders_initiated#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_meeting_shareholders_date_from# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Timing for submitting votes by the))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(shareholders on the points of))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(the agenda of the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: In the period from DateTime(DateTime: #view_meeting_shareholders_date_from#, Format: \"DD.MM.YYYY HH:MI\", Location: #timezone#) / until DateTime(DateTime: #view_meeting_shareholders_date_until#, Format: \"DD.MM.YYYY HH:MI\", Location: #timezone#))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                If(Or(#view_meeting_type#==11,#view_meeting_type#==12,#view_meeting_type#==21,#view_meeting_type#==22)){\r\n                                    Div(bb pb-lg mt-lg){\r\n                                        Div(pl-lg pb pt-sm text-center){\r\n                                            Span(Class: h3 text-bold text-black, Body: Agenda of the meeting).Style(text-decoration: underline;)\r\n                                        }\r\n                                        Div(pl-lg pb pt-sm text-center){\r\n                                            If(#view_meeting_type#==11){\r\n                                                If(#view_status#==2){\r\n                                                    Span(Class: h4 text-black, Body: You can vote to add these issues to the shareholders agenda:).Style(text-decoration: underline;)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_type#==12){\r\n                                                If(#view_status#==1){\r\n                                                    Span(Class: h4 text-black, Body: Waiting for a start for these issues:).Style(text-decoration: underline;)\r\n                                                }.ElseIf(#view_status#==2){\r\n                                                    Span(Class: h4 text-black, Body: You can vote to decide on these issues:).Style(text-decoration: underline;)\r\n                                                }.ElseIf(#view_status#==3){\r\n                                                    Span(Class: h4 text-black, Body: Voting to decide on these issues is over:).Style(text-decoration: underline;)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_type#==21){\r\n                                                If(#view_status#==1){\r\n                                                    Span(Class: h4 text-black, Body: Waiting for a start for these issues:).Style(text-decoration: underline;)\r\n                                                }.ElseIf(#view_status#==2){\r\n                                                    Span(Class: h4 text-black, Body: You can vote to decide on these issues:).Style(text-decoration: underline;)\r\n                                                }.ElseIf(#view_status#==3){\r\n                                                    Span(Class: h4 text-black, Body: Voting to decide on these issues is over:).Style(text-decoration: underline;)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_type#==22){\r\n                                                If(#view_status#==1){\r\n                                                    Span(Class: h4 text-black, Body: Waiting for a start for these issues:).Style(text-decoration: underline;)\r\n                                                }.ElseIf(#view_status#==2){\r\n                                                    Span(Class: h4 text-black, Body: You can vote to decide on these issues:).Style(text-decoration: underline;)\r\n                                                }.ElseIf(#view_status#==3){\r\n                                                    Span(Class: h4 text-black, Body: Voting to decide on these issues is over:).Style(text-decoration: underline;)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        If(Or(#view_meeting_type#==11,#view_meeting_type#==12)){\r\n                                            If(#view_status#==2){\r\n                                                If(#ImAgent# == 1){\r\n                                                    Div(row pt){\r\n                                                        Div(col-md-3){}\r\n                                                        Div(col-md-6 text-center){\r\n                                                            Div(input-group){\r\n                                                                Div(input-group-addon){\r\n                                                                    PoA:\r\n                                                                }.Style(\r\n                                                                    && {\r\n                                                                        width: 60px!important;\r\n                                                                        border-radius: 6px;\r\n                                                                        background-color: #fff;\r\n                                                                        height: 40px!important;\r\n                                                                        border: 1px solid #e0e0e0;\r\n                                                                    }\r\n                                                                )\r\n                                                                DBFind(poa_list, src_list).Where({\"company_id\": #filter_role_company_id#, \"recipient\": #account_id#, \"status\": {\"$neq\": 4}, \"flags->meeting\": 1}).Columns(\"sender\")\r\n                                                                Select(Name: Poa, Class: input-search, Source: src_list, NameColumn: sender, ValueColumn: sender)\r\n                                                                Div(input-group-btn){\r\n                                                                    Button(Class: btn bg-gray-lighter btn-search, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#,poa=Val(Poa)\"){\r\n                                                                        If(#poa#){\r\n                                                                            Em(Class: text-success fa fa-refresh)\r\n                                                                        }.Else{\r\n                                                                            Em(Class: text-normal fa fa-refresh)\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                        Div(col-md-3){}\r\n                                                    }\r\n                                                }\r\n                                                If(#ImShareholder# == 1){\r\n                                                    DBFind(poa_list).Where({\"company_id\": #filter_role_company_id#, \"sender\": #account_id#, \"status\": {\"$neq\": 4}, \"flags->meeting\": 1}).Columns(\"id\").Vars(p_check)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(row pt){\r\n                                            Div(col-md-2){}\r\n                                            Div(col-md-8){\r\n                                                ArrayToSource(array_points, #view_agenda#, array)\r\n                                                ForList(array_points){\r\n                                                    SetVar(p_agenda_id, \"\").(p_description, \"\").(p_votes_total, \"\").(p_result_agenda, \"\")\r\n                                                    SetVar(p_votes_accepted, \"\").(p_votes_rejected, \"\").(p_percent_accepted, \"\").(p_percent_rejected, \"\")\r\n                                                    SetVar(p_result_agenda, \"\").(p_result_point, \"\")\r\n                                                    JsonToSource(map_points, #array_value#, map)\r\n                                                    ForList(map_points){\r\n                                                        If(#map_key#==\"agenda_id\"){\r\n                                                            SetVar(p_agenda_id, #map_value#)\r\n                                                        }\r\n                                                        If(And(#map_key#==\"description\",#map_value#!=\"Description\")){\r\n                                                            SetVar(p_description, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"votes_total\"){\r\n                                                            SetVar(p_votes_total, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"result_agenda\"){\r\n                                                            SetVar(p_result_agenda, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"votes_accepted\"){\r\n                                                            SetVar(p_votes_accepted, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"votes_rejected\"){\r\n                                                            SetVar(p_votes_rejected, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"percent_accepted\"){\r\n                                                            SetVar(p_percent_accepted, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"percent_rejected\"){\r\n                                                            SetVar(p_percent_rejected, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"result_agenda\"){\r\n                                                            SetVar(p_result_agenda, #map_value#)\r\n                                                        }\r\n                                                        If(#map_key#==\"result_point\"){\r\n                                                            SetVar(p_result_point, #map_value#)\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    DBFind(\"voting_issues\").Columns(\"name\").Where({\"id\": #p_agenda_id#}).Vars(issue)\r\n\r\n                                                    If(Or(#ImShareholder#==1,#ImBoardMember#==1)){\r\n                                                        DBFind(\"meetings_participants\").Columns(\"decision\").Where({\"meeting_id\": #meeting_id#, \"meeting_type\": #view_meeting_type#, \"participant\": #account_id#, \"point_index\": #array_key#}).Vars(current_point)\r\n                                                    }\r\n                                                    If(#ImAgent#==1){\r\n                                                        If(#poa#){\r\n                                                            DBFind(\"meetings_participants\").Columns(\"decision\").Where({\"meeting_id\": #meeting_id#, \"meeting_type\": #view_meeting_type#, \"participant\": #poa#, \"point_index\": #array_key#}).Vars(current_point)\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    Div(list-group-item mb){\r\n\r\n                                                        If(#view_meeting_type#==11){\r\n                                                            Div(Class: text-black text-center text-bold h4, Body: Point Calculate(1+#array_key#): #issue_name#)\r\n                                                            Div(Class: text-black text-center h4, Body: #p_description#)\r\n                                                            If(#view_status#==2){\r\n                                                                If(#current_point_decision# == \"\"){\r\n                                                                    If(#ImShareholder# == 1){\r\n                                                                        If(#p_check_id# > 0){\r\n                                                                            Div(text-center pt-lg pb-lg){\r\n                                                                                Span(Class: h4 text-bold text-primary, Body: Your decision has been delegated to a Power of Attorney)\r\n                                                                            }\r\n                                                                        }.Else{\r\n                                                                            Button(Class: btn btn-reject text-bold ml-xl mt, Body: Disclaim, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                            Button(Class: btn btn-accept text-bold pull-right mr-xl mt, Body: Support, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#ImAgent# == 1){\r\n                                                                        If(#poa#){\r\n                                                                            Button(Class: btn btn-reject text-bold ml-xl mt, Body: Disclaim, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#,poa=#poa#\", Contract: MeetingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#,PoA=#poa#\")\r\n                                                                            Button(Class: btn btn-accept text-bold pull-right mr-xl mt, Body: Support, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#,poa=#poa#\", Contract: MeetingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#,PoA=#poa#\")\r\n                                                                        }\r\n                                                                    }\r\n                                                                }.Else{\r\n                                                                    If(#current_point_decision# == 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-yellow, Body: You do not have shares to vote on this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#current_point_decision# > 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-green, Body: I SUPPORT this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#current_point_decision# < 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-red, Body: I DISCLAIM this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n\r\n                                                        If(#view_meeting_type#==12){\r\n                                                            If(#p_result_agenda# == 1){\r\n                                                                Div(Class: text-black text-center text-bold h4, Body: Point Calculate(1+#array_key#): #issue_name#)\r\n                                                                Div(Class: text-black text-center h4, Body: #p_description#)\r\n                                                            }.Else{\r\n                                                                Div(Class: text-muted text-center text-bold h4, Body: Point Calculate(1+#array_key#): #issue_name#)\r\n                                                                Div(Class: text-muted text-center h4, Body: #p_description#)\r\n                                                            }\r\n                                                            If(#view_status#==1){\r\n                                                                If(#p_result_agenda# == -1){\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-muted, Body: This point is not on the agenda)\r\n                                                                    }\r\n                                                                }\r\n                                                            }.ElseIf(#view_status#==2){\r\n                                                                If(#current_point_decision# == \"\"){\r\n                                                                    If(#p_result_agenda# == 1){\r\n                                                                        If(#ImShareholder# == 1){\r\n                                                                            If(#p_check_id# > 0){\r\n                                                                                Div(text-center pt-lg pb-lg){\r\n                                                                                    Span(Class: h4 text-bold text-primary, Body: Your decision has been delegated to a Power of Attorney)\r\n                                                                                }\r\n                                                                            }.Else{\r\n                                                                                Button(Class: btn btn-reject text-bold ml-xl mt, Body: Reject, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                                Button(Class: btn btn-accept text-bold pull-right mr-xl mt, Body: Accept, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                            }\r\n                                                                        }\r\n                                                                        If(#ImAgent# == 1){\r\n                                                                            If(#poa#){\r\n                                                                                Button(Class: btn btn-reject text-bold ml-xl mt, Body: Reject, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#,poa=#poa#\", Contract: MeetingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#,PoA=#poa#\")\r\n                                                                                Button(Class: btn btn-accept text-bold pull-right mr-xl mt, Body: Accept, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#,poa=#poa#\", Contract: MeetingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#,PoA=#poa#\")\r\n                                                                            }\r\n                                                                        }\r\n                                                                    }.Else{\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-muted, Body: This point is not on the agenda)\r\n                                                                        }\r\n                                                                    }\r\n                                                                }.Else{\r\n                                                                    If(#current_point_decision# == 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-yellow, Body: You do not have shares to vote on this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#current_point_decision# > 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-green, Body: I ACCEPTED this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#current_point_decision# < 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-red, Body: I REJECTED this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }.ElseIf(#view_status#==3){\r\n                                                                If(#p_result_agenda# == -1){\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-muted, Body: This point is not on the agenda)\r\n                                                                    }\r\n                                                                }.Else{\r\n                                                                    If(#p_result_point# == 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-muted, Body: Quorum was not obtained for a decision on this point)\r\n                                                                        }\r\n                                                                        Div(ml-lg){\r\n                                                                            Span(Class: h4 text-muted, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# shares)\r\n                                                                        }.Style(\r\n                                                                            display: inline-block;\r\n                                                                        )\r\n                                                                        Div(mr-lg pull-right){\r\n                                                                            Span(Class: h4 text-muted, Body: shares #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                        }.Style(\r\n                                                                            display: inline-block;\r\n                                                                        )\r\n                                                                    }\r\n                                                                    If(#p_result_point# == 1){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-green, Body: ACCEPTED)\r\n                                                                        }\r\n                                                                        Div(ml-lg){\r\n                                                                            Span(Class: h4 text-red, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# shares)\r\n                                                                        }.Style(\r\n                                                                            display: inline-block;\r\n                                                                        )\r\n                                                                        Div(mr-lg pull-right){\r\n                                                                            Span(Class: h4 text-green, Body: shares #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                        }.Style(\r\n                                                                            display: inline-block;\r\n                                                                        )\r\n                                                                    }\r\n                                                                    If(#p_result_point# == -1){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-red, Body: REJECTED)\r\n                                                                        }\r\n                                                                        Div(ml-lg){\r\n                                                                            Span(Class: h4 text-red, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# shares)\r\n                                                                        }.Style(\r\n                                                                            display: inline-block;\r\n                                                                        )\r\n                                                                        Div(mr-lg pull-right){\r\n                                                                            Span(Class: h4 text-green, Body: shares #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                        }.Style(\r\n                                                                            display: inline-block;\r\n                                                                        )\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n\r\n                                                        If(#view_meeting_type#==21){\r\n                                                            Div(Class: text-black text-center text-bold h4, Body: Point Calculate(1+#array_key#): #issue_name#)\r\n                                                            Div(Class: text-black text-center h4, Body: #p_description#)\r\n                                                            If(#view_status#==1){\r\n                                                            }.ElseIf(#view_status#==2){\r\n                                                                If(#current_point_decision# == \"\"){\r\n                                                                    If(#ImBoardMember# == 1){\r\n                                                                        Button(Class: btn btn-reject text-bold ml-xl mt, Body: Disclaim, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                        Button(Class: btn btn-accept text-bold pull-right mr-xl mt, Body: Support, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                    }\r\n                                                                }.Else{\r\n                                                                    If(#current_point_decision# > 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-green, Body: I SUPPORT this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#current_point_decision# < 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-red, Body: I DISCLAIM this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }.ElseIf(#view_status#==3){\r\n                                                                If(#p_result_agenda# == 1){\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-green, Body: This point has been added to agenda)\r\n                                                                    }\r\n                                                                    Div(ml-lg){\r\n                                                                        Span(Class: h4 text-red, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# voices)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                    Div(mr-lg pull-right){\r\n                                                                        Span(Class: h4 text-green, Body: voices #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }.Else{\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-muted, Body: This point is not on the agenda)\r\n                                                                    }\r\n                                                                    Div(ml-lg){\r\n                                                                        Span(Class: h4 text-muted, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# voices)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                    Div(mr-lg pull-right){\r\n                                                                        Span(Class: h4 text-muted, Body: voices #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n\r\n                                                        If(#view_meeting_type#==22){\r\n                                                            Div(Class: text-black text-center text-bold h4, Body: Point Calculate(1+#array_key#): #issue_name#)\r\n                                                            Div(Class: text-black text-center h4, Body: #p_description#)\r\n                                                            If(#view_status#==1){\r\n                                                            }.ElseIf(#view_status#==2){\r\n                                                                If(#current_point_decision# == \"\"){\r\n                                                                    If(#ImBoardMember# == 1){\r\n                                                                        Button(Class: btn btn-reject text-bold ml-xl mt, Body: Reject, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                        Button(Class: btn btn-accept text-bold pull-right mr-xl mt, Body: Accept, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: MeetingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                    }\r\n                                                                }.Else{\r\n                                                                    If(#current_point_decision# > 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-green, Body: I ACCEPTED this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                    If(#current_point_decision# < 0){\r\n                                                                        Div(text-center pt-lg pb-lg){\r\n                                                                            Span(Class: h4 text-bold text-red, Body: I REJECTED this point)\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }.ElseIf(#view_status#==3){\r\n                                                                If(#p_result_point# == 0){\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-muted, Body: Quorum was not obtained for a decision on this point)\r\n                                                                    }\r\n                                                                    Div(ml-lg){\r\n                                                                        Span(Class: h4 text-muted, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# voices)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                    Div(mr-lg pull-right){\r\n                                                                        Span(Class: h4 text-muted, Body: voices #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                                If(#p_result_point# == 1){\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-green, Body: ACCEPTED)\r\n                                                                    }\r\n                                                                    Div(ml-lg){\r\n                                                                        Span(Class: h4 text-red, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# voices)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                    Div(mr-lg pull-right){\r\n                                                                        Span(Class: h4 text-green, Body: voices #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                                If(#p_result_point# == -1){\r\n                                                                    Div(text-center pt-lg pb-lg){\r\n                                                                        Span(Class: h4 text-bold text-red, Body: REJECTED)\r\n                                                                    }\r\n                                                                    Div(ml-lg){\r\n                                                                        Span(Class: h4 text-red, Body: (Calculate(Exp: #p_percent_rejected#, Type: float, Prec: 2)%) #p_votes_rejected# voices)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                    Div(mr-lg pull-right){\r\n                                                                        Span(Class: h4 text-green, Body: voices #p_votes_accepted# (Calculate(Exp: #p_percent_accepted#, Type: float, Prec: 2)%) )\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            Div(col-md-2){}\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                If(Or(#view_meeting_type#==11,#view_meeting_type#==12,#view_meeting_type#==21,#view_meeting_type#==22)){\r\n                                    Div(mt-lg){\r\n                                        Div(pl-lg pb pt-sm text-center){\r\n                                            Span(Class: h3 text-bold text-black, Body: Other matters).Style(text-decoration: underline;)\r\n                                        }\r\n                                        Div(row){\r\n                                            Div(col-md-1){}\r\n                                            Div(col-md-10 text-center){\r\n                                                Div(mt){\r\n                                                    Span(Class: text-black h4, Body: #view_matters#)\r\n                                                }\r\n                                            }\r\n                                            Div(col-md-1){}\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.Style(display:flex; align-items:center;)\r\n                    }.Else{\r\n                        Div(row mt popup-min-width){\r\n                            Div(col-md-12 text-center){\r\n                                Span(Class: h3 text-bold text-black, Body: This information is hidden for your role)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .text-yellow {\r\n        color: #deb905;\r\n    }\r\n    .text-green {\r\n        color: #26bc4a;\r\n    }\r\n    .text-red {\r\n        color: #f0645d;\r\n    }\r\n    .btn-accept {\r\n        background-color: #26bc4a;\r\n        color: #ffffff;\r\n        height: 35px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #1d953a !important;\r\n    }\r\n    .btn-reject {\r\n        background-color: #f0645d;\r\n        color: #ffffff;\r\n        height: 35px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btn-accept:hover {\r\n        border-color: #1c8c36 !important;\r\n    }\r\n    .btn-reject:hover {\r\n        border-color: #a61717 !important;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_address",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(companies_list).Where({\"name\": \"#cpname#\"}).Columns(\"id\").Vars(company)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }.Else{\r\n            DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone,address->country,address->city,address->postal_code,address->street,address->house_number\").Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Time Zone Em(Class: fa fa-caret-down pl-sm))\r\n                DBFind(\"time_zones\", src_zones).Columns(\"name,offset\").Limit(500).Custom(title){\r\n                    Span(#name# (#offset#))\r\n                }\r\n                If(#request_address_country#){\r\n                    Select(Name: TimeZone, Class: stl-input mt-sm, Source: src_zones, NameColumn: title, ValueColumn: name, Value: #request_address_timezone#)\r\n                }.Else{\r\n                    Select(Name: TimeZone, Class: stl-input mt-sm, Source: src_zones, NameColumn: title, ValueColumn: name)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Country Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_address_country#){\r\n                    Input(Name: AddressCountry, Class: stl-input mt-sm, Value: #request_address_country#)\r\n                }.Else{\r\n                    Input(Name: AddressCountry, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: City name Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_address_city#){\r\n                    Input(Name: AddressCity, Class: stl-input mt-sm, Value: #request_address_city#)\r\n                }.Else{\r\n                    Input(Name: AddressCity, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Postal code Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_address_postal_code#){\r\n                    Input(Name: AddressPostalCode, Class: stl-input mt-sm, Value: #request_address_postal_code#)\r\n                }.Else{\r\n                    Input(Name: AddressPostalCode, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Street Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_address_street#){\r\n                    Input(Name: AddressStreet, Class: stl-input mt-sm, Value: #request_address_street#)\r\n                }.Else{\r\n                    Input(Name: AddressStreet, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: House number Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_address_house_number#){\r\n                    Input(Name: AddressHouseNumber, Class: stl-input mt-sm, Value: #request_address_house_number#)\r\n                }.Else{\r\n                    Input(Name: AddressHouseNumber, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: CompanyEdit, Params: \"Step=3\", Page: co_edit_registration, PageParams: \"fnew=1,cpname=#cpname#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=3\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_legform",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(companies_list).Where({\"name\": \"#cpname#\"}).Columns(\"id\").Vars(company)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }.Else{\r\n            DBFind(companies_list).Where({\"id\": #company_id#}).Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Legal form Em(Class: fa fa-caret-down pl-sm))\r\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: companies_legal_form, Source: src_legal_form)\r\n                Div(mt h4){\r\n                    If(#request_legal_form#){\r\n                        RadioGroup(Name: LegalForm, Source: src_legal_form, NameColumn: name, ValueColumn: name, Value: #request_legal_form#)\r\n                    }.Else{\r\n                        RadioGroup(Name: LegalForm, Source: src_legal_form, NameColumn: name, ValueColumn: name)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: CompanyEdit, Params: \"Step=2\", Page: co_edit_address, PageParams: \"fnew=1,cpname=#cpname#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=2\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_license",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(companies_list).Where({\"name\": \"#cpname#\"}).Columns(\"id\").Vars(company)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }.Else{\r\n            DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone,license->number,license->activity,license->authority,license->issue_date,license->valid_until\").Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Span(Class: text-muted h4){\r\n                    Div(pull-left){\r\n                        Span(Body: Business license)\r\n                    }.Show(\"FlagLicense=false\")\r\n                    Div(pull-left){\r\n                        Span(Body: License number Em(Class: fa fa-caret-down pl-sm))\r\n                    }.Show(\"FlagLicense=true\")\r\n                }\r\n                Span(Class: pull-right){\r\n                    Div(input-group){\r\n                        Span(Class: h4 mr text-muted, Body: License)\r\n                        Div(input-group-btn){\r\n                            If(#request_license_number#){\r\n                                Input(Name: FlagLicense, Type: \"checkbox\", Value: \"true\", Class: m0)\r\n                            }.Else{\r\n                                Input(Name: FlagLicense, Type: \"checkbox\", Value: \"false\", Class: m0)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                If(#request_license_number#){\r\n                    Input(Name: LicenseNumber, Class: stl-input mt-sm, Value: #request_license_number#)\r\n                }.Else{\r\n                    Input(Name: LicenseNumber, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Licensing authority Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_authority#){\r\n                    Input(Name: LicenseAuthority, Class: stl-input mt-sm, Value: #request_license_authority#)\r\n                }.Else{\r\n                    Input(Name: LicenseAuthority, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: License activity Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_activity#){\r\n                    Input(Name: LicenseActivity, Class: stl-input mt-sm, Value: #request_license_activity#)\r\n                }.Else{\r\n                    Input(Name: LicenseActivity, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Issue date Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_issue_date#){\r\n                    SetVar(issue_dt, DateTime(DateTime: #request_license_issue_date#, Format: \"YYYY-MM-DD\", Location: #request_address_timezone#))\r\n                    Input(Name: LicenseIssueDate, Class: stl-input mt-sm, Type: date, Value: #issue_dt#)\r\n                }.Else{\r\n                    Input(Name: LicenseIssueDate, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Valid until Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_valid_until#){\r\n                    SetVar(valid_dt, DateTime(DateTime: #request_license_valid_until#, Format: \"YYYY-MM-DD\", Location: #request_address_timezone#))\r\n                    Input(Name: LicenseValidUntil, Class: stl-input mt-sm, Type: date, Value: #valid_dt#)\r\n                }.Else{\r\n                    Input(Name: LicenseValidUntil, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Finish\", Contract: CompanyEdit, Params: \"Step=5\", Page: co_shares_edit_name, PageParams: \"company_id=#company_id#,fnew=1\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=5\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_name",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n        }.Else{\r\n            DBFind(companies_list).Where({\"id\": #company_id#}).Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_name#){\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #request_name#)\r\n                }.Else{\r\n                    Input(Name: Name, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Trader name Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_trader_name#){\r\n                    Input(Name: TraderName, Class: stl-input mt-sm, Value: #request_trader_name#)\r\n                }.Else{\r\n                    Input(Name: TraderName, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Start\", Contract: CompanyEdit, Params: \"Step=1\", Page: co_edit_legform, PageParams: \"fnew=1,cpname=Val(Name)\").Popup(45, \"APLA ™\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=1\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_registration",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(companies_list).Where({\"name\": \"#cpname#\"}).Columns(\"id\").Vars(company)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }.Else{\r\n            DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone,registration->number,registration->authority,registration->date,registration->duration\").Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Registration number Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_registration_number#){\r\n                    Input(Name: RegistrationNumber, Class: stl-input mt-sm, Value: #request_registration_number#)\r\n                }.Else{\r\n                    Input(Name: RegistrationNumber, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Registration authority Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_registration_authority#){\r\n                    Input(Name: RegistrationAuthority, Class: stl-input mt-sm, Value: #request_registration_authority#)\r\n                }.Else{\r\n                    Input(Name: RegistrationAuthority, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Registration date Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_registration_date#){\r\n                        SetVar(reg_dt, DateTime(DateTime: #request_registration_date#, Format: \"YYYY-MM-DD\", Location: #request_address_timezone#)))\r\n                        Input(Name: RegistrationDate, Class: stl-input mt-sm, Type: date, Value: #reg_dt#)\r\n                    }.Else{\r\n                        Input(Name: RegistrationDate, Class: stl-input mt-sm, Type: date)\r\n                    }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Span(Class: text-muted h4){\r\n                    Div(pull-left){\r\n                        Span(Body: Duration until)\r\n                    }.Show(\"FlagUnlimited=true\")\r\n                    Div(pull-left){\r\n                        Span(Body: Duration until)\r\n                        Em(Class: fa fa-caret-down pl)\r\n                    }.Show(\"FlagUnlimited=false\")\r\n                }\r\n                Span(Class: pull-right){\r\n                    Div(input-group){\r\n                        Span(Class: h4 mr text-muted, Body: Unlimited)\r\n                        Div(input-group-btn){\r\n                            If(#request_registration_duration# > 0){\r\n                                Input(Name: FlagUnlimited, Type: \"checkbox\", Value: \"false\", Class: m0)\r\n                            }.Else{\r\n                                Input(Name: FlagUnlimited, Type: \"checkbox\", Value: \"true\", Class: m0)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(col-md-12 mt-sm){\r\n                If(#request_registration_duration#){\r\n                    SetVar(reg_dur, DateTime(DateTime: #request_registration_duration#, Format: \"YYYY-MM-DD\", Location: #request_address_timezone#)))\r\n                    Input(Name: RegistrationDuration, Class: stl-input, Type: date, Value: #reg_dur#)\r\n                }.Else{\r\n                    Input(Name: RegistrationDuration, Class: stl-input, Type: date)\r\n                } \r\n            }.Show(\"FlagUnlimited=false\")\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: CompanyEdit, Params: \"Step=4\", Page: co_edit_license, PageParams: \"fnew=1,cpname=#cpname#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=4\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_settings",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\nSetVar(company_id, #buffer_value#)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"settings->percentage_shares,settings->quorum_shares,settings->percentage_boardmembers,settings->quorum_boardmembers\").Vars(request)\r\n        Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Meetings Settings)\r\n            }\r\n        }\r\n        Div(list-group-item mt-lg){\r\n            Div(row popup-min-width){\r\n                Div(col-md-12 text-center){\r\n                    Span(Class: h4 text-bold text-black, Body: Shareholders)\r\n                }\r\n            }\r\n            Div(row mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    P(Class: text-muted h4 m0, Body: Percentage of shares sufficient to place issue on the agenda)\r\n                    P(Class: text-muted h4 m0, Body: (percentage of total shares) Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_settings_percentage_shares#){\r\n                        Input(Name: PercentageShares, Class: stl-input mt-sm, Value: #request_settings_percentage_shares#)\r\n                    }.Else{\r\n                        Input(Name: PercentageShares, Class: stl-input mt-sm)\r\n                    }\r\n                }\r\n            }\r\n            Div(row mt-lg popup-min-width mb){\r\n                Div(col-md-12){\r\n                    P(Class: text-muted h4 m0, Body: Quorum of shares to recognize meeting as held)\r\n                    P(Class: text-muted h4 m0, Body: (percentage of total shares) Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_settings_quorum_shares#){\r\n                        Input(Name: QuorumShares, Class: stl-input mt-sm, Value: #request_settings_quorum_shares#)\r\n                    }.Else{\r\n                        Input(Name: QuorumShares, Class: stl-input mt-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(list-group-item){\r\n            Div(row popup-min-width){\r\n                Div(col-md-12 text-center){\r\n                    Span(Class: h4 text-bold text-black, Body: Board of Members)\r\n                }\r\n            }\r\n            Div(row mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    P(Class: text-muted h4 m0, Body: Percentage of votes for the inclusion of the issue in the agenda)\r\n                    P(Class: text-muted h4 m0, Body: (percentage of those present) Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_settings_percentage_boardmembers#){\r\n                        Input(Name: PercentageBoardMembers, Class: stl-input mt-sm, Value: #request_settings_percentage_boardmembers#)\r\n                    }.Else{\r\n                        Input(Name: PercentageBoardMembers, Class: stl-input mt-sm)\r\n                    }\r\n                }\r\n            }\r\n            Div(row mt-lg popup-min-width mb){\r\n                Div(col-md-12){\r\n                    P(Class: text-muted h4 m0, Body: Quorum of votes to recognize meeting as held)\r\n                    P(Class: text-muted h4 m0, Body: (percentage of total voters) Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_settings_quorum_boardmembers#){\r\n                        Input(Name: QuorumBoardMembers, Class: stl-input mt-sm, Value: #request_settings_quorum_boardmembers#)\r\n                    }.Else{\r\n                        Input(Name: QuorumBoardMembers, Class: stl-input mt-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=6\", Page: #back_page#)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: #back_page#)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_issues_des_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(voting_issues).Where({\"name\": \"#name#\", \"company_id\": #company_id#, \"deleted\": 0}).Columns(\"id\").Vars(issue)\r\n            Input(Name: Id, Type: hidden, Value: #issue_id#)\r\n        }.Else{\r\n            DBFind(voting_issues).Where({\"id\": #issue_id#}).Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #issue_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Voting Issue Details) \r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Description Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_description#){\r\n                    Input(Name: Description, Class: style-textarea mt-sm, Type: textarea, Value: #request_description#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Description, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: IssuesEdit, Params: \"Step=2\", Page: co_issues_settings_edit, PageParams: \"fnew=1,name=#name#,company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: IssuesEdit, Params: \"Step=2\", Page: co_issues_list)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_issues_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_issues_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_issues_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"@1notifications\").Columns(\"id,page_params,page_params->company_id\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(company_id,#notific_page_params_company_id#)\r\n}.Else{\r\n    DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n    SetVar(company_id, #buffer_value#)\r\n}\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": #company_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"deleted\": 0})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(voting_issues, src).Columns(\"id,name,description,settings,settings->participants,settings->percentage,settings->shares,approval_flags->name,approval_flags->description,approval_flags->settings\").Where(#where#).Order({\"id\": 1}).Custom(_name){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NAME:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_issues_name_edit, PageParams: \"company_id=#company_id#,issue_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.name# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_issues_list, Contract: IssuesApprov, Params: \"Id=#id#,Step=1\")\r\n            }\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(row){\r\n            Div(col-md-1){\r\n                Span(Em(Class: mr fa icon-info)).Style(font-size: 22px;)\r\n            }.Style(\r\n                width: 35px!important;\r\n            )\r\n            Div(col-md-10){\r\n                Span(Class: h4 text-bold, Body: #name#)\r\n            }\r\n        }.Style(\r\n            margin-top: 25px;\r\n        )\r\n    }\r\n}.Custom(_description){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DETAILS:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_issues_des_edit, PageParams: \"company_id=#company_id#,issue_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.description# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_issues_list, Contract: IssuesApprov, Params: \"Id=#id#,Step=2\")\r\n            }\r\n        }\r\n    }\r\n    If(#description# != NULL){\r\n        P(Class: p-10 txt-hidden txt-3-line, Body: #description#).Style(max-width: 500px;)\r\n    }\r\n}.Custom(_settings){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: SETTINGS:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_issues_settings_edit, PageParams: \"company_id=#company_id#,issue_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.settings# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_issues_list, Contract: IssuesApprov, Params: \"Id=#id#,Step=3\")\r\n            }\r\n        }\r\n    }\r\n    If(#settings# != NULL){\r\n        P(Class: txt-hidden p-10, Body: [#settings.percentage# %] - #settings.participants#)\r\n        If(And(#settings.shares#!=\"NULL\",#settings.shares# != \"\",#settings.shares#!=[],#settings.shares#!=[0])){\r\n            ArrayToSource(array_shares, #settings.shares#, array)\r\n            ForList(array_shares){\r\n                DBFind(co_shares_list).Where({\"id\": #array_value#}).Columns(\"name\").Vars(sh)\r\n                P(Class: txt-hidden p-00, Body: Shares: #sh_name#)\r\n            }\r\n        }\r\n    }\r\n}.Custom(actions){\r\n    If(#junior_access_id# > 0){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: co_issues_list, Contract: IssuesDel, Params: \"IssueId=#id#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you really want to delete this issue?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Company Details\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_issues_name_edit, PageParams: \"fnew=1,company_id=#company_id#\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Add).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: co_view){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                    Span(Body: Information)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            LinkPage(Page: co_roles_list){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Body: Roles)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            Span(Class: txt-hl-navigation){\r\n                                Span(Body: Issues).Style(text-decoration: underline;)\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_name,=_description,=_settings,=actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 120px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_issues_name_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            Input(Name: CompanyId, Type: hidden, Value: #company_id#)\r\n        }.Else{\r\n            DBFind(voting_issues).Where({\"id\": #issue_id#}).Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #issue_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Voting Issue Details) \r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_name#){\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #request_name#)\r\n                }.Else{\r\n                    Input(Name: Name, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Start\", Contract: IssuesEdit, Params: \"Step=1\", Page: co_issues_des_edit, PageParams: \"fnew=1,name=Val(Name),company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_issues_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: IssuesEdit, Params: \"Step=1\", Page: co_issues_list)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_issues_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_issues_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_issues_settings_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(voting_issues).Where({\"name\": \"#name#\", \"company_id\": #company_id#, \"deleted\": 0}).Columns(\"id\").Vars(issue)\r\n            Input(Name: Id, Type: hidden, Value: #issue_id#)\r\n        }.Else{\r\n            DBFind(voting_issues).Where({\"id\": #issue_id#}).Columns(\"settings->percentage,settings->participants,settings->shares\").Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #issue_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Voting Issue Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Percentage of votes to endorse this decision Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_settings_percentage#){\r\n                    Input(Name: Percentage, Class: stl-input mt-sm, Value: #request_settings_percentage#)\r\n                }.Else{\r\n                    Input(Name: Percentage, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Voting participants Em(Class: fa fa-caret-down pl-sm))\r\n                Data(src_participants, \"id,name\"){\r\n                    1,Shareholder\r\n                    2,Board Member\r\n                }\r\n                Div(mt ml-lg h4){\r\n                    If(#request_settings_participants#){\r\n                        RadioGroup(Name: Participants, Source: src_participants, NameColumn: name, ValueColumn: name, Value: #request_settings_participants#)\r\n                    }.Else{\r\n                        RadioGroup(Name: Participants, Source: src_participants, NameColumn: name, ValueColumn: name)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Type of shares Em(Class: fa fa-caret-down pl-sm))\r\n\r\n                If(#isBuffer# == 1){\r\n                    SetVar(NeedRefresh, 0)\r\n                    DBFind(buffer_data).Columns(\"value\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"shares_select\", \"account\": #account_id#}).Vars(buffer)\r\n                    If(Or(#buffer_value#==\"NULL\",#buffer_value#==\"\",#buffer_value#==\"[]\")){\r\n                        SetVar(buffer_value, \"[0]\")\r\n                    }\r\n                }.Else{\r\n                    SetVar(NeedRefresh, 1)\r\n                    If(And(#request_settings_shares#!=\"NULL\",#request_settings_shares#!=\"\",#request_settings_shares#!=\"[]\")){\r\n                        SetVar(buffer_value, #request_settings_shares#)\r\n                    }.Else{\r\n                        SetVar(buffer_value, \"[0]\")\r\n                    }\r\n                }\r\n\r\n                DBFind(co_shares_list, src_current_list).Where({\"id\": {\"$in\": #buffer_value#}}).Columns(\"id,name\").Count(shares_count)\r\n                DBFind(co_shares_list, src_full_list).Where({\"id\": {\"$nin\": #buffer_value#}, \"company_id\": #company_id#, \"deleted\": 0}).Columns(\"id,name\").Order(id)\r\n\r\n                Div(mt-sm){\r\n                    Div(input-group){\r\n                        Select(Name: ShareSelect, Source: src_full_list, NameColumn: name, ValueColumn: id, Class: stl-input)\r\n                        Div(input-group-btn){\r\n                            Button(Class: btn btn-default fa fa-plus btn-grey-plus, Page: co_issues_settings_edit, PageParams: \"isBuffer=1,company_id=#company_id#,issue_id=#issue_id#,name=#name#,fnew=#fnew#\", Contract: IssuesSharesManager, Params: \"NeedRefresh=#NeedRefresh#,CurrentValue=#buffer_value#,ShareId=Val(ShareSelect),Action=add\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }.Style(\r\n                        margin-bottom: 20px!important; \r\n                    )\r\n                    If(#shares_count#>0){\r\n                        ForList(src_current_list){\r\n                            Div(){\r\n                                Button(Class: btn btn-link, Page: co_issues_settings_edit, PageParams: \"isBuffer=1,company_id=#company_id#,issue_id=#issue_id#,name=#name#,fnew=#fnew#\", Contract: IssuesSharesManager, Params: \"NeedRefresh=#NeedRefresh#,CurrentValue=#buffer_value#,ShareId=#id#,Action=remove\"){\r\n                                    Span(Body: Em(Class: fa fa-check-square-o)).Style(font-size: 20px;)\r\n                                }.Style(\r\n                                    margin-left: -2px!important; \r\n                                    margin-top: -2px!important; \r\n                                    margin-right: -10px!important; \r\n                                ).Popup(45, \"APLA ™\")\r\n                                Span(Body: #name#).Style(\r\n                                    font-size: 18px;\r\n                                )\r\n                            }.Style(\r\n                                margin-top: -12px!important; \r\n                            )\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.Show(\"Participants=Shareholder\")\r\n        Div(row popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Finish\", Contract: IssuesEdit, Params: \"Step=3,Shares=#buffer_value#\", Page: co_issues_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: IssuesEdit, Params: \"Step=3,Shares=#buffer_value#\", Page: co_issues_list)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_issues_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_issues_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_roles_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\nSetVar(company_id, #buffer_value#)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"id\": #role_id#})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\r\nDBFind(\"companies_list\").Where({\"id\": #company_id#}).Columns(\"id,name,address->timezone\").Vars(view)\r\n\r\nDBFind(roles, src).Columns(\"id,role_name,date_created,role_type\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_name){ \r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ROLE:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            LinkPage(Class: preview-nowrap text-primary h5 text-bold, Page: co_roles_participants, PageParams: \"r_id=#id#,company_id=#company_id#\"){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: mr fa icon-settings fa-3x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: #role_name#)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 7px;\r\n                    padding-left: 4px;\r\n                )\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(custom_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFORMATION:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Type: AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #role_type#))\r\n    P(Class: txt-hidden p-00, Body: Owner: #view_name#)\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\", Location: #view_address_timezone#))\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Company Details\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: co_view){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                    Span(Body: Information)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            Span(Class: txt-hl-navigation){\r\n                                Span(Body: Roles).Style(text-decoration: underline;)\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            LinkPage(Page: co_issues_list){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Body: Issues)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_name,=custom_info\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 130px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_roles_participants",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"role->id\": #r_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"member->account\": #account_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"deleted\": 0})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"member->account\": #account_id#, \"deleted\": 0})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(roles).Columns(\"role_name,company_id\").Where({\"id\": #r_id#}).Vars(r)\r\n\r\nDBFind(companies_list).Where({\"id\": #r_company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nIf(#r_role_name# != \"\"){\r\n    DBFind(roles_participants, src).Columns(\"id,member->account,member->member_name,member->image_id,appointed->account,appointed->member_name,appointed->voting_id,appointed->voting_name,date_created,date_deleted,deleted\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_id){\r\n        Div(txt-nowrap){\r\n            DBFind(members).Where({\"account\": #member.account#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            If(#m_member_info_is_company# == \"true\"){\r\n                Span(Class: txt-table-hl, Body: COMPANY:)\r\n            }.Else{\r\n                Span(Class: txt-table-hl, Body: MEMBER:)\r\n            }\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold preview-nowrap, Body: #m_member_name#)\r\n                    \r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }.Custom(custom_info){\r\n        Div(txt-nowrap){\r\n            Span(Class: txt-table-hl, Body: INFORMATION:)\r\n        }\r\n        P(Class: txt-hidden p-20, Body: Status: Active)\r\n        P(Class: txt-hidden p-00, Body: Appointed: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\", Location: #timezone#))\r\n    }.Custom(actions){\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right mt, Page: co_roles_participants, PageParams: \"company_id=#company_id#,r_id=#r_id#\", Contract: RolesUnassign, Params: \"RowId=#id#\"){\r\n                Div(mt-xl){\r\n                    Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n            }.Alert(Text: \"Do you really want to delete this member?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n        }\r\n    }.Count(count)\r\n}\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Company Details\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: roles_participants_select, PageParams: \"fnew=1,company_id=#company_id#,p1=#r_id#,back_page=co_roles_participants\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Add).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: co_roles_list){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Roles)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: #r_role_name#)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_id,=custom_info,=actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_details",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(companies_securities).Where({\"company_id\": #company_id#, \"owner\": #owner#}).Vars(securities)\r\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\r\n        }.Else{\r\n            DBFind(companies_securities).Where({\"id\": #securities_id#}).Columns(\"details->type,details->other,details->nominal\").Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\r\n        }\r\n        \r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Security Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Type of securities Em(Class: fa fa-caret-down pl-sm))\r\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: companies_security_type, Source: src_security_type)\r\n                Div(mt h4){\r\n                    If(#request_details_type#){\r\n                        RadioGroup(Name: SecType, Source: src_security_type, NameColumn: name, ValueColumn: name, Value: #request_details_type#)\r\n                    }.Else{\r\n                        RadioGroup(Name: SecType, Source: src_security_type, NameColumn: name, ValueColumn: name)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Nominal value Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_details_nominal#){\r\n                    Input(Name: Nominal, Class: stl-input mt-sm, Value: #request_details_nominal#)\r\n                }.Else{\r\n                    Input(Name: Nominal, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Other details Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_details_other#){\r\n                    Input(Name: Other, Class: style-textarea mt-sm, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Other, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: SecuritiesEdit, Params: \"Step=2\", Page: co_se_edit_info, PageParams: \"fnew=1,company_id=#company_id#,securities_id=#securities_id#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SecuritiesEdit, Params: \"Step=2\", Page: co_securities_list)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_info",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\r\n        }.Else{\r\n            DBFind(companies_securities).Where({\"id\": #securities_id#}).Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\r\n        }\r\n\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Securities Information)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Information Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_info#){\r\n                    Input(Name: Info, Class: style-textarea mt-sm, Type: textarea, Value: #request_info#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Info, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Contract: SecuritiesEdit, Params: \"Step=3\", Body: \"Distribute\", Page: co_securities_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SecuritiesEdit, Params: \"Step=3\", Page: co_securities_list)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_number",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#wizard#==new_stakeholder){\r\n    DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n    SetVar(company_id, #buffer_value#)\r\n    SetVar(fnew, 1) \r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            Input(Name: CompanyId, Type: hidden, Value: #company_id#)\r\n        }\r\n\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Transfer of Securities)\r\n            }\r\n        }\r\n        If(#fnew# == 1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Owner Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_owner#){\r\n                        SetVar(OwnerId, #request_owner#)\r\n                    }.Else{\r\n                        SetVar(OwnerId, #owner_id#)\r\n                    }\r\n                    Input(Name: Owner, Class: stl-input mt-sm, Disabled: true, Value: #OwnerId#)\r\n                }\r\n                Div(col-md-12 mt-lg){\r\n                    DBFind(\"co_shares_list\", src_shares).Columns(\"id,name,company_id,deleted,approval_flags,approval_flags->total_approval\").Where({\"company_id\":#company_id#,\"deleted\":0,\"approval_flags->total_approval\":1})\r\n                    Span(Class: text-muted h4, Body: Shares Em(Class: fa fa-caret-down pl-sm))\r\n                    Select(Name: SharesId, Class: stl-input mt-sm, Source: src_shares, NameColumn: name, ValueColumn: id)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    If(Or(#wizard#==new_member,#wizard#==new_stakeholder)){\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Distribute\", Contract: SecuritiesEdit, Page: co_securities_history_edit, Params: \"Wizard=1\", PageParams: \"company_id=#company_id#,wizard=#wizard#,type=buy\").Popup(45, \"APLA ™\")\r\n                        If(#wizard#==new_member){\r\n                            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n                        }\r\n                        If(#wizard#==new_stakeholder){\r\n                            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n                        }\r\n                    }.Else{\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Distribute\", Contract: SecuritiesEdit, Page: co_securities_list)\r\n                        Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n                        Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                            Span(Class: text-muted mr-lg h4, Body: Step)\r\n                            Em(Class: fa fa-dot-circle-o mr-sm)\r\n                            Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btnDefault, Body: \"Back\", Page: co_securities_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_owner",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nSetVar(this_page, co_se_edit_owner).(this_table, members).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Owner of Securities) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Form(){\r\n                Div(Class: pl-lg mr-lg){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            Account\r\n                        }.Style(\r\n                            && {\r\n                                width: 100px!important;\r\n                                border-radius: 6px;\r\n                                background-color: #fff;\r\n                                height: 40px!important;\r\n                                border: 1px solid #e0e0e0;\r\n                            }\r\n                        )\r\n                        Input(Name: search, Value: #search#, Class: input-search)\r\n                        Div(input-group-btn){\r\n                            If(#search#){\r\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"company_id=#company_id#,fnew=#fnew#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                            Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),company_id=#company_id#,fnew=#fnew#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        If(#search#){\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"account\": {\"$neq\": #guest_account#}, {\"member_name\": #search#}})\r\n        }.Else{\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"account\": {\"$neq\": #guest_account#}})\r\n        }\r\n\r\n        DBFind(#this_table#, src).Columns(\"account,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n            Button(Class: btn-xs btn-link pull-right mt-lg, Page: co_se_edit_number, PageParams: \"company_id=#company_id#,owner_id=#account#,fnew=1,wizard=#wizard#\"){\r\n                Div(txt-nowrap){\r\n                    Div(Class: text-primary){\r\n                        Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                    }.Style(\r\n                        display: inline-block;\r\n                    )\r\n                    Span(Class: btn-link text-bold pb-sm){\r\n                        Span(Class: text-primary h3 text-bold, Body: Select)\r\n                    }.Style(\r\n                        display: inline-block;\r\n                        vertical-align: top;\r\n                        padding-top: 4px;\r\n                        padding-left: 7px;\r\n                    )\r\n                }\r\n            }.Popup(45, \"APLA ™\")\r\n        }.Custom(custom_id){\r\n            Div(h4 text-bold){\r\n                Div(){\r\n                    If(#image_id#>0){\r\n                        Image(Src: Binary().ById(#image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                    }.Else{\r\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                    }\r\n                    Span(){\r\n                        Div(Class: h4 m0 text-bold, Body: #member_name#)\r\n\r\n                        If(#member_info.is_company# == \"true\"){\r\n                            If(#member_info.company_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_name#)\r\n                            }\r\n                            If(#member_info.company_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_address#)\r\n                            }\r\n                        }.Else{\r\n                            If(#member_info.personal_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_name#)\r\n                            }\r\n                            If(#member_info.personal_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_address#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(display:flex; align-items:center;)\r\n            }.Style(\r\n                .fsize {\r\n                    padding-top: 4px;\r\n                    font-size: 15px;\r\n                }\r\n            )\r\n        }.Count(count)\r\n\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                Table(src, \"=custom_id,=check\")\r\n            }\r\n        }.Style(\r\n            min-height: 360px!important;\r\n            margin-top: -10px;\r\n            thead > tr > th {\r\n                border : none!important;\r\n            }\r\n            td {\r\n                border: none!important;\r\n            }\r\n        )\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_list)\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_new_owner",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Shareholders)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Public Key Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewPubkey, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: If you want to choose an existing member, then)\r\n                Button(Class: btn-link, Page: co_se_edit_owner, PageParams: \"fnew=1,company_id=#company_id#,wizard=new_stakeholder\"){\r\n                    Span(Class: h4, Body: click here.)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Page: settings_sh_edit, PageParams: \"wizard=new_stakeholder\", Contract: NewUser).Popup(45, \"APLA ™\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_info",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\nIf(#order_id# > 0){\r\n    DBFind(\"companies_orders_securities\").WhereId(#order_id#).Vars(edit)\r\n    SetVar(prew_owner, #edit_previous_owner#)\r\n    SetVar(new_owner,#edit_new_owner#)\r\n}.Else{\r\n    DBFind(\"buffer_data\", src_mem).Columns(\"id,key,ecosystem,value,value->new_owner,value->previous_owner\").Where({\"key\": \"orders_info\", \"ecosystem\": #ecosystem_id#, \"account\": #account_id#}).Vars(owners)\r\n    SetVar(prew_owner, #owners_value_previous_owner#)\r\n    SetVar(new_owner, #owners_value_new_owner#)\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Input(Name: SecuritiesId, Type: hidden, Value: #securities_id#)\r\n\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Transfer the Shares)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Previous Owner Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: PreviousOwnerView, Class: stl-input mt-sm, Disabled: \"true\", Value: #prew_owner#)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Number of the Shares to be transferred  Em(Class: fa fa-caret-down pl-sm))\r\n                Div(input-group){\r\n                    If(#order_id# > 0){\r\n                        Input(Name: Amount, Class: styleInputRed mt-sm, Value: #edit_order_amount#)\r\n                    }.Else{\r\n                        Input(Name: Amount, Class: styleInputRed mt-sm)\r\n                    }\r\n                    Div(input-group-btn){\r\n                        Button(Class: btn btnOrderSell mt-sm, Body: Em(Class: fa fa-long-arrow-down) Sell)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: New Owner Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewOwnerView, Class: stl-input mt-sm, Disabled: \"true\", Value: #new_owner#)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Transaction date Em(Class: fa fa-caret-down pl-sm))\r\n                If(#order_id# > 0){\r\n                    SetVar(reg_dt, DateTime(DateTime: #edit_order_date#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date, Value: #reg_dt#)\r\n                }.Else{\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                If(#order_id# > 0){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Edit\", Contract: SecuritiesOrderTransferEdit, Params: \"OrderId=#order_id#,CompanyId=#company_id#\", Page: co_securities_orders_list)\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Transfer\", Contract: SecuritiesOrderTransfer, Params: \"SharesId=#shares_id#,CompanyId=#company_id#,PreviousOwner=#owners_value_previous_owner#,NewOwner=#owners_value_new_owner#\", Page: co_securities_orders_list)\r\n                }\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: co_securities_orders_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: co_securities_orders_list)\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .styleInputRed {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderSell {\r\n        background-color: #f05050;\r\n        color: #ffffff !important;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_new_owner",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#p1#){\r\n    SetVar(order_id, #p1#)\r\n}.Else{\r\n    SetVar(p1, #order_id#)\r\n}\r\n\r\nIf(#p2#){\r\n    SetVar(shares_id, #p2#)\r\n}.Else{\r\n    SetVar(p2, #shares_id#)\r\n}\r\n\r\nSetVar(this_page, co_se_order_edit_new_owner).(this_table, companies_securities).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nIf(#search#){\r\n    SetVar(where, {\"company_id\":#company_id#, \"shares_id\":#shares_id#, \"owner\": {\"$like\": \"#search#\"}, \"deleted\": 0})\r\n}.Else{\r\n    SetVar(where, {\"company_id\":#company_id#, \"shares_id\":#shares_id#, \"deleted\": 0})\r\n}\r\n\r\nDBFind(#this_table#, src).Columns(\"id,shares_id,owner,deleted\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n    If(#order_id# > 0){\r\n        Button(Class: btn-xs btn-link pull-right mt-lg, Contract: SecuritiesOrderTransferEdit, Params: \"NewOwner=#owner#,OrderId=#order_id#,CompanyId=#company_id#\", Page: co_securities_orders_list){\r\n            Div(txt-nowrap){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: Select)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 4px;\r\n                    padding-left: 7px;\r\n                )\r\n            }\r\n        }\r\n    }.Else{\r\n        Button(Class: btn-xs btn-link pull-right mt-lg, Contract: BufferOrders, Params: \"NewOwner=#owner#,CompanyId=#company_id#\", Page: co_se_order_edit_info, PageParams: \"shares_id=#shares_id#,company_id=#company_id#\"){\r\n            Div(txt-nowrap){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: Select)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 4px;\r\n                    padding-left: 7px;\r\n                )\r\n            }\r\n        }.Popup(45, \"APLA ™\")\r\n    }\r\n}.Custom(custom_id){\r\n    Div(h4 text-bold){\r\n        Div(){\r\n            DBFind(members).Where({\"account\": #owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold, Body: #m_member_name#)\r\n                \r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Count(count)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Owner of Securities) \r\n            }\r\n        }\r\n        If(#count# > 0){\r\n            Div(row mt-xl popup-min-width){\r\n                Form(){\r\n                    Div(Class: pl-lg mr-lg){\r\n                        Div(input-group){\r\n                            Div(input-group-addon){\r\n                                Account\r\n                            }.Style(\r\n                                && {\r\n                                    width: 100px!important;\r\n                                    border-radius: 6px;\r\n                                    background-color: #fff;\r\n                                    height: 40px!important;\r\n                                    border: 1px solid #e0e0e0;\r\n                                }\r\n                            )\r\n                            Input(Name: search, Value: #search#, Class: input-search)\r\n                            Div(input-group-btn){\r\n                                If(#search#){\r\n                                    Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"p1=#p1#,p2=#p2#,shares_id=#shares_id#,company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                }\r\n                                Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"p1=#p1#,p2=#p2#,shares_id=#shares_id#,search=Val(search),company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(row popup-min-width){\r\n                Div(col-md-12){\r\n                    Table(src, \"=custom_id,=check\")\r\n                }\r\n            }.Style(\r\n                min-height: 360px!important;\r\n                margin-top: -10px;\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                td {\r\n                    border: none!important;\r\n                }\r\n            )\r\n        }.Else{\r\n            Div(Class: text-center txt-absent-p0 mt-lg, Body: Sharholders not found) \r\n        }\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_orders_list)\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_previous_owner",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#p1#){\r\n    SetVar(order_id, #p1#)\r\n}.Else{\r\n    SetVar(p1, #order_id#)\r\n}\r\n\r\nIf(#p2#){\r\n    SetVar(shares_id, #p2#)\r\n}.Else{\r\n    SetVar(p2, #shares_id#)\r\n}\r\n\r\nSetVar(this_page, co_se_order_edit_previous_owner).(this_table, companies_securities).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nIf(#search#){\r\n    SetVar(where, {\"company_id\":#company_id#, \"shares_id\":#shares_id#, \"owner\": {\"$like\": \"#search#\"}, \"deleted\": 0})\r\n}.Else{\r\n    SetVar(where, {\"company_id\":#company_id#, \"shares_id\":#shares_id#, \"deleted\": 0})\r\n}\r\n\r\nDBFind(#this_table#, src).Columns(\"id,shares_id,owner,deleted\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n    If(#order_id# > 0){\r\n        Button(Class: btn-xs btn-link pull-right mt-lg, Contract: SecuritiesOrderTransferEdit, Params: \"PreviousOwner=#owner#,OrderId=#order_id#,CompanyId=#company_id#\", Page: co_securities_orders_list){\r\n            Div(txt-nowrap){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: Select)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 4px;\r\n                    padding-left: 7px;\r\n                )\r\n            }\r\n        }\r\n    }.Else{\r\n        Button(Class: btn-xs btn-link pull-right mt-lg, Contract: BufferOrders, Params: \"PreviousOwner=#owner#,CompanyId=#company_id#\", Page: co_se_order_edit_new_owner, PageParams: \"shares_id=#shares_id#,company_id=#company_id#\"){\r\n            Div(txt-nowrap){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: Select)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 4px;\r\n                    padding-left: 7px;\r\n                )\r\n            }\r\n        }.Popup(45, \"APLA ™\")\r\n    }\r\n}.Custom(custom_id){\r\n    Div(h4 text-bold){\r\n        Div(){\r\n            DBFind(members).Where({\"account\": #owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold, Body: #m_member_name#)\r\n                \r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Count(count)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Previous Owner of Securities) \r\n            }\r\n        }\r\n        If(#count# > 0){\r\n            Div(row mt-xl popup-min-width){\r\n                Form(){\r\n                    Div(Class: pl-lg mr-lg){\r\n                        Div(input-group){\r\n                            Div(input-group-addon){\r\n                                Account\r\n                            }.Style(\r\n                                && {\r\n                                    width: 100px!important;\r\n                                    border-radius: 6px;\r\n                                    background-color: #fff;\r\n                                    height: 40px!important;\r\n                                    border: 1px solid #e0e0e0;\r\n                                }\r\n                            )\r\n                            Input(Name: search, Value: #search#, Class: input-search)\r\n                            Div(input-group-btn){\r\n                                If(#search#){\r\n                                    Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"p1=#p1#,p2=#p2#,shares_id=#shares_id#,company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                }\r\n                                Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"p1=#p1#,p2=#p2#,shares_id=#shares_id#,search=Val(search),company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Div(row popup-min-width){\r\n                Div(col-md-12){\r\n                    Table(src, \"=custom_id,=check\")\r\n                }\r\n            }.Style(\r\n                min-height: 360px!important;\r\n                margin-top: -10px;\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                td {\r\n                    border: none!important;\r\n                }\r\n            )\r\n        }.Else{\r\n            Div(Class: text-center txt-absent-p0 mt-lg, Body: Sharholders not found)  \r\n        }\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_orders_list)\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_upload_doc",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Columns(\"name,id\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Enclose a copy of the transaction ) \r\n            }\r\n        }\r\n        If(#upload#==1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"order_doc\", \"account\": #account_id#}).Vars(buffer)\r\n                    DBFind(binaries).Columns(\"name\").Where({\"id\": #buffer_value_binary_id#}).Vars(binaries)\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #binaries_name#, Disabled: \"true\")\r\n                }\r\n            }\r\n        }.Else{\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Input(Name: FileData, Type: file)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#upload#==1){\r\n                    Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: SecuritiesOrderTransferEdit, Params: \"OrderId=#order_id#,DOCBinaryId=#buffer_value_binary_id#\", Page: co_securities_orders_list)\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_orders_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=order_doc\", Page: co_se_order_edit_upload_doc, PageParams: \"upload=1,company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_orders_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_orders_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_select_shares",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        DBFind(\"co_shares_list\", src_shares).Columns(\"id,name,company_id,deleted,approval_flags,approval_flags->total_approval\").Where({\"company_id\":#company_id#,\"deleted\":0,\"approval_flags->total_approval\":1}).Count(count)\r\n        If(#count# > 0){\r\n            Div(row mt popup-min-width){\r\n                Div(col-md-12 text-center){\r\n                    Span(Class: h2 text-bold text-black, Body: \"Select of Shares\")\r\n                }\r\n            }\r\n            If(#fnew# == 1){\r\n                Div(row mt-lg popup-min-width){\r\n                    Div(col-md-12 mt-lg){\r\n                        Span(Class: text-muted h4, Body: Shares Em(Class: fa fa-caret-down pl-sm))\r\n                        Select(Name: SharesId, Class: stl-input mt-sm, Source: src_shares, NameColumn: name, ValueColumn: id)\r\n                    }\r\n                }\r\n            }\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12 mt){\r\n                    If(#fnew# == 1){\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Page: co_se_order_edit_previous_owner, PageParams: \"fnew=1,shares_id=Val(SharesId),company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                        Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: co_securities_orders_list)\r\n                    }\r\n                }\r\n            }\r\n        }.Else{\r\n             Div(Class: text-center txt-absent, Body: Shares not found)\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btnDefault, Body: \"Close\", Page: co_securities_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_sign",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"notifications\").Columns(\"id,page_params,page_params->order_id,page_params->step,closed\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(order_id,#notific_page_params_order_id#)\r\n}\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(Or(#filter_role_type# == 3,#filter_role_type# == 4)){\r\n    SetVar(where, {\"id\": #order_id#})\r\n}.ElseIf(#filter_role_type# == 7){\r\n\r\n    DBFind(\"companies_orders_securities\").Where({\"id\":#order_id#,\"deleted\":0}).Columns(\"id,new_owner,previous_owner,deleted\").Vars(agent_check)\r\n    DBFind(poa_list).Where({\"company_id\": #filter_role_company_id#, \"recipient\": #account_id#, \"status\": {\"$neq\": 4}, \"flags->bidding\": 1, \"sender\":#agent_check_new_owner#}).Columns(\"id\").Vars(agent_n_check)\r\n    DBFind(poa_list).Where({\"company_id\": #filter_role_company_id#, \"recipient\": #account_id#, \"status\": {\"$neq\": 4}, \"flags->bidding\": 1, \"sender\":#agent_check_previous_owner#}).Columns(\"id\").Vars(agent_p_check)\r\n    If(Or(#agent_n_check_id# > 0,#agent_p_check_id# > 0)){\r\n        SetVar(where, {\"id\": #order_id#})\r\n        SetVar(ImAgent, 1)\r\n    }.Else{\r\n        SetVar(where, {\"id\": 0})\r\n    }\r\n}.Else{\r\n    SetVar(where, {\"id\": #order_id#, \"$or\":[\"new_owner\": #account_id#,\"previous_owner\": #account_id#]})\r\n    SetVar(ImShareholder, 1)\r\n}\r\nDBFind(companies_orders_securities).Columns(\"id,company_id,date_created,order_amount,order_date,file_id,previous_owner,new_owner,approval_flags,shares_id,status,order_signs,order_signs->previous_owner_sign,order_signs->previous_owner_sign_time,order_signs->new_owner_sign,order_signs->new_owner_sign_time,order_signs->issuer_sign,order_signs->issuer_sign_time,order_signs->reject_step,order_signs->comments\").Where(#where#).Vars(order)\r\n\r\nDBFind(co_shares_list).WhereId(#order_shares_id#).Vars(shar)\r\n\r\nDBFind(members).Where({\"account\": #order_previous_owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(view_prev)\r\nDBFind(members).Where({\"account\": #order_new_owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(view_new)\r\n\r\nDBFind(companies_list).Where({\"id\": #order_company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nForm(){\r\n    Div(row){\r\n        Div(pt-lg col-xs-10 col-xs-offset-1 text-center){\r\n            Div(panel panel-primary form-min-width text-center){\r\n                Span(Class: h1 text-bold text-black){\r\n                    Register of Shareholders\r\n                }\r\n            }.Style(\r\n                background-color:transparent!important;\r\n                border-color:transparent!important;\r\n            )\r\n        }\r\n        Div(row){\r\n            Div(col-xs-10 col-xs-offset-1 text-center){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body m0){\r\n                        Div(bb pb){\r\n                            Div(pl-lg pb pt-sm text-center txt-nowrap){\r\n                                Span(Class: h2 text-bold text-black, Body: Transaction Information)\r\n                            }\r\n                        }\r\n                        Div(mt-sm){\r\n                            Div(){\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Amount))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: #order_order_amount#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Div(Class: text-black h4 m0 text-right, Body: Strong(Order Date))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: DateTime(DateTime: #order_order_date#, Format: \"HH:MI DD.MM.YYYY\", Location: #timezone#))\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Created))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: DateTime(DateTime: #order_date_created#, Format: \"HH:MI DD.MM.YYYY\", Location: #timezone#))\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Shares))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: #shar_name#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Type))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: Transaction)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Status))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            If(#order_status# == -1){\r\n                                                If(#order_order_signs_reject_step# == 1){\r\n                                                    Span(Class: h4 text-danger, Body: Rejected by Previous Owner)\r\n                                                }.ElseIf(#order_order_signs_reject_step# == 2){\r\n                                                    Span(Class: h4 text-danger, Body: Rejected by New Owner)\r\n                                                }.Else{\r\n                                                    Span(Class: h4 text-danger, Body: Rejected by the Issuer Company)\r\n                                                }\r\n                                            }.Else{\r\n                                                If(#order_status# == 0){\r\n                                                    Span(Class: h4 text-warning, Body: Pending)\r\n                                                }.ElseIf(#order_status# == 1){\r\n                                                    Span(Class: h4 text-primary, Body: Sign by the owners)\r\n                                                }.ElseIf(#order_status# == 2){\r\n                                                    Span(Class: h4 text-primary, Body: Sign by the Issuer Company)\r\n                                                }.Else{\r\n                                                    Span(Class: h4 text-success, Body: Done)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                If(#order_status# == -1){\r\n                                    Div(row){\r\n                                        Div(col-xs-5){\r\n                                            Div(mt pull-right){\r\n                                                Span(Class: text-black h4, Body: Strong(Rejection Reason))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-2 text-center){\r\n                                            Div(mt){\r\n                                                Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-5){\r\n                                            Div(mt pull-left){\r\n                                                Span(Class: text-black h4, Body: #order_order_signs_comments#)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                If(#order_file_id# > 0){\r\n                                    Div(row){\r\n                                        Div(col-xs-5){\r\n                                            Div(mt-lg pull-right){\r\n                                                Span(Class: text-black h4, Body: Strong(Documents))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-2 text-center){\r\n                                            Div(mt-lg){\r\n                                                Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-5 txt-nowrap){\r\n                                            Div(pull-left){\r\n                                                DBFind(binaries, src_binaries).Where({\"id\": #order_file_id#})\r\n                                                Table(src_binaries, \"=data\").Style(\r\n                                                    thead {\r\n                                                        background-color: #ffffff;\r\n                                                    }\r\n                                                    tbody {\r\n                                                        background-color: #ffffff;\r\n                                                    }\r\n                                                    tbody > tr > td  {\r\n                                                        border: 1px solid #eeeeee;\r\n                                                    }\r\n                                                    width: 10px!important;\r\n                                                )\r\n                                            }.Style(margin-top:-20px;)\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                Div(row pt-xl mb-lg){\r\n                                    Div(col-xs-1)\r\n                                    Div(col-xs-10 text-center){\r\n                                        Div(Class: col-xs-6 list-group-item txt-nowrap){\r\n                                            Div(row ml-xl){\r\n                                                P(Class: text-muted, Body: PREVIOUS OWNER Em(Class: fa fa-caret-down faSize16 pl-sm))\r\n                                                Div(col-xs-2 mt-sm mr-lg){\r\n                                                    If(#view_prev_image_id#>0){\r\n                                                        Image(Src: Binary().ById(#view_prev_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                                                    }.Else{\r\n                                                        Span(Em(Class: text-muted mr fa icon-user fa-4x)).Style(margin-right:12px;)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-9 mt-sm text-left mb-sm){\r\n                                                    If(#view_prev_member_name# != \"\"){\r\n                                                        Span(Class: h4 m0 text-bold, Body: #view_prev_member_name#)\r\n                                                    }\r\n                                                    If(#view_prev_member_info_is_company# == \"true\"){\r\n                                                        If(#view_prev_member_info_company_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_company_name#)\r\n                                                        }\r\n                                                        If(#view_prev_member_info_company_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_company_address#)\r\n                                                        }\r\n                                                    }.Else{\r\n                                                        If(#view_prev_member_info_personal_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_personal_name#)\r\n                                                        }\r\n                                                        If(#view_prev_member_info_personal_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_personal_address#)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }.Style(\r\n                                            min-height: 150px!important;\r\n                                            min-width: 380px;\r\n                                            margin-top: 2px;\r\n                                        )\r\n                                        Div(Class: col-xs-6 list-group-item txt-nowrap){\r\n                                            Div(row ml-xl){\r\n                                                P(Class: ml-lg text-muted, Body: NEW OWNER Em(Class: fa fa-caret-down faSize16 pl-sm))\r\n                                                Div(col-xs-2 mt-sm mr-lg){\r\n                                                    If(#view_new_image_id#>0){\r\n                                                        Image(Src: Binary().ById(#view_new_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                                                    }.Else{\r\n                                                        Span(Em(Class: text-muted mr fa icon-user fa-4x)).Style(margin-right:12px;)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-9 mt-sm text-left mb-sm){\r\n                                                    If(#view_new_member_name# != \"\"){\r\n                                                        Span(Class: h4 m0 text-bold, Body: #view_new_member_name#)\r\n                                                    }\r\n                                                    If(#view_new_member_info_is_company# == \"true\"){\r\n                                                        If(#view_new_member_info_company_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_company_name#)\r\n                                                        }\r\n                                                        If(#view_new_member_info_company_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_company_address#)\r\n                                                        }\r\n                                                    }.Else{\r\n                                                        If(#view_new_member_info_personal_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_personal_name#)\r\n                                                        }\r\n                                                        If(#view_new_member_info_personal_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_personal_address#)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }.Style(\r\n                                            min-height: 150px!important;\r\n                                            min-width: 380px;\r\n                                            margin-top: 2px;\r\n                                        )\r\n                                    }\r\n                                    Div(col-xs-1)\r\n                                }\r\n\r\n                                If(#order_order_signs_previous_owner_sign# != \"\"){\r\n                                    Div(row txt-hidden){\r\n                                        Div(row){\r\n                                            Div(col-xs-5){\r\n                                                Div(mt-lg pull-right){\r\n                                                    Span(Class: text-black h4, Body: Strong(Signature of the previous owner))\r\n                                                }\r\n                                            }\r\n                                            Div(col-xs-1 text-center)\r\n                                            Div(col-xs-6){\r\n                                                Div(mt-lg pull-left){\r\n                                                    Span(Class: text-black h5 ml-lg, Body: #order_order_signs_previous_owner_sign#)\r\n                                                    P(Class: h5 m0, Body: Date: DateTime(DateTime: #order_order_signs_previous_owner_sign_time#, Format: \"HH:MI DD.MM.YYYY\", Location: #timezone#))\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    If(#order_order_signs_new_owner_sign# != \"\"){\r\n                                        Div(row txt-hidden){\r\n                                            Div(row){\r\n                                                Div(col-xs-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Signature of the new owner))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-1 text-center)\r\n                                                Div(col-xs-6){\r\n                                                    Div(mt-lg pull-left){\r\n                                                        Span(Class: text-black h5 ml-lg, Body: #order_order_signs_new_owner_sign#)\r\n                                                        P(Class: h5 m0, Body: Date: DateTime(DateTime: #order_order_signs_new_owner_sign_time#, Format: \"HH:MI DD.MM.YYYY\", Location: #timezone#))\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    If(#order_order_signs_issuer_sign# != \"\"){\r\n                                        Div(row txt-hidden){\r\n                                            Div(row){\r\n                                                Div(col-xs-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Signature of the company))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-1 text-center)\r\n                                                Div(col-xs-6){\r\n                                                    Div(mt-lg pull-left){\r\n                                                        Span(Class: text-black h5 ml-lg, Body: #order_order_signs_issuer_sign#)\r\n                                                        P(Class: h5 m0, Body: Date: DateTime(DateTime: #order_order_signs_issuer_sign_time#, Format: \"HH:MI DD.MM.YYYY\", Location: #timezone#))\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.Style(align-items:center;)\r\n                        If(#ImShareholder# == 1){\r\n                            DBFind(poa_list).Where({\"company_id\": #filter_role_company_id#, \"sender\": #account_id#, \"status\": {\"$neq\": 4}, \"flags->bidding\": 1}).Columns(\"id\").Vars(p_check)\r\n                        }\r\n                        If(And(#order_order_signs_previous_owner_sign# == \"\",#order_status# > 0)){\r\n                            If(And(#account_id#=#order_previous_owner#,#filter_role_type# ==5)){\r\n                                Div(mt-lg bb)\r\n                                Div(pb pt-lg){\r\n                                    Div(row pt){\r\n                                        If(#p_check_id# > 0){\r\n                                            Div(text-center pt-lg pb-lg){\r\n                                                Span(Class: h4 text-bold text-primary, Body: Your decision has been delegated to a Power of Attorney)\r\n                                            }\r\n                                        }.Else{\r\n                                            Div(col-xs-2)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-reject text-bold, Body: Reject, Page: co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                            }\r\n                                            Div(col-xs-4)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-accept text-bold, Body: Accept, Page: co_se_order_sign, Contract: SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                            }\r\n                                            Div(col-xs-2)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }.ElseIf(#ImAgent# == 1){\r\n                                If(#agent_p_check_id# > 0){\r\n                                    Div(mt-lg bb)\r\n                                    Div(pb pt-lg){\r\n                                        Div(row pt){\r\n                                            Div(col-xs-2)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-reject text-bold, Body: Reject, Page: co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                            }\r\n                                            Div(col-xs-4)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-accept text-bold, Body: Accept, Page: co_se_order_sign, Contract: SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                            }\r\n                                            Div(col-xs-2)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.ElseIf(And(#order_order_signs_previous_owner_sign# != \"\",#order_order_signs_new_owner_sign# == \"\",#order_status# > 0)){\r\n                            If(And(#account_id#==#order_new_owner#,#filter_role_type#==5)){\r\n                                Div(mt-lg bb)\r\n                                Div(pb pt-lg){\r\n                                    Div(row pt){\r\n                                        If(#p_check_id# > 0){\r\n                                            Div(text-center pt-lg pb-lg){\r\n                                                Span(Class: h4 text-bold text-primary, Body: Your decision has been delegated to a Power of Attorney)\r\n                                            }\r\n                                        }.Else{\r\n                                            Div(col-xs-2)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-reject text-bold, Body: Reject, Page: co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                            }\r\n                                            Div(col-xs-4)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-accept text-bold, Body: Accept, Page: co_se_order_sign, Contract: SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                            }\r\n                                            Div(col-xs-2)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }.ElseIf(#ImAgent# == 1){\r\n                                If(#agent_n_check_id# > 0){\r\n                                    Div(mt-lg bb)\r\n                                    Div(pb pt-lg){\r\n                                        Div(row pt){\r\n                                            Div(col-xs-2)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-reject text-bold, Body: Reject, Page: co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                            }\r\n                                            Div(col-xs-4)\r\n                                            Div(col-xs-2 text-center){\r\n                                                Button(Class: btn btn-default-accept text-bold, Body: Accept, Page: co_se_order_sign, Contract: SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                            }\r\n                                            Div(col-xs-2)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.ElseIf(And(#order_order_signs_previous_owner_sign# != \"\",#order_order_signs_new_owner_sign# != \"\",#order_order_signs_issuer_sign# == \"\",#order_status# > 0)){\r\n                            DBFind(\"roles_participants\").Columns(\"id,role,role->company_id,role->type,ecosystem,role->id,deleted\").Where({\"role->company_id\":#order_company_id#, \"ecosystem\": #ecosystem_id#, \"role->type\": 4, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter_access)\r\n                            If(#filter_access_id# > 0){\r\n                                Div(mt-lg bb)\r\n                                Div(pb pt-lg){\r\n                                    Div(row pt){\r\n                                        Div(col-xs-2)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btn-default-reject text-bold, Body: Reject, Page: co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                        }\r\n                                        Div(col-xs-4)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btn-default-accept text-bold, Body: Accept, Page: co_se_order_sign, Contract: SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                        }\r\n                                        Div(col-xs-2)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_sign_reject",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#order_id# > 0){\r\n    Form(ml-lg mr-lg){\r\n        Div(row mt minForm){\r\n            Div(col-md-12){\r\n                Span(Class: h2 text-bold text-black, Body: Specify a Reason for the Rejection)\r\n            }\r\n        }\r\n        Div(row mt-lg minForm){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Comments Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_order_comments#){\r\n                    Input(Name: Comments, Class: styleInputTextArea mt-sm, Type: textarea, Value: #request_order_comments#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Comments, Class: styleInputTextArea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl minForm){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-primary pull-right btnPrimary, Body: \"Reject\", Contract: SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=reject\", Page: co_se_order_sign,PageParams: \"order_id=#order_id#\")\r\n                Button(Class: btn btn-default pull-right btnDefault mr-sm, Body: \"Back\", Page: co_se_order_sign, PageParams: \"order_id=#order_id#\")\r\n            }\r\n        }\r\n    }.Style(\r\n        .text-black {\r\n            color: #222f3e;\r\n        }\r\n        .styleInputTextArea {\r\n            font-size: 16px;\r\n            background-color: #fff;\r\n            padding: 6px 20px; 6px; 20px;\r\n            border: 2px solid rgba(0, 0, 0, 0.12);\r\n            border-radius: 6px;\r\n        }\r\n        .btnPrimary {\r\n            height: 36px;\r\n            width: 100px!important;\r\n            border-radius: 6px;\r\n            border: 2px solid #5c9ae9;\r\n        }\r\n        .btnDefault {\r\n            height: 36px;\r\n            width: 100px!important;\r\n            border-radius: 6px;\r\n            border: 2px solid #777777;\r\n        }\r\n        .minForm {\r\n            min-width: 400px!important;\r\n        }\r\n    )\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_filter",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black, Body: Shares Filter) \r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12){\r\n            Span(Class: text-muted h4, Body: Type of shares Em(Class: fa fa-caret-down pl-sm))\r\n            Data(src_shares_type,\"name,filter\"){\r\n                All shares,1\r\n                Ordinary shares,2\r\n                Preference shares,3\r\n            }\r\n            Div(mt h4){\r\n                RadioGroup(Name: SharesType, Source: src_shares_type, NameColumn: name, ValueColumn: filter, Value: #filter#)\r\n            }\r\n        }\r\n    }\r\n    Div(row mt-lg popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Apply\", Page: co_securities_list, PageParams: \"filter=Val(SharesType)\")\r\n            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: co_securities_list) \r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_history_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(Or(#wizard#==new_member,#wizard#==new_stakeholder)){\r\n    DBFind(\"buffer_data\").Columns(\"value->add_member,value->securities_id\").Where({\"key\": \"new_user_reg\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(wiz)\r\n    SetVar(securities_id,#wiz_value_securities_id#)\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#history_id# > 0){\r\n            DBFind(companies_securities_history).Where({\"id\": #history_id#}).Columns(\"id,order_date,order_type,order_comments,order_amount\").Vars(request)\r\n            If(And(#type#!=sell,#type#!=buy)){\r\n                If(#request_order_type# == 1){\r\n                    SetVar(type, buy)\r\n                }.Else{\r\n                    SetVar(type, sell)\r\n                }\r\n            }\r\n            Input(Name: Id, Type: hidden, Value: #history_id#)\r\n        }.Else{\r\n            If(And(#type#!=sell,#type#!=buy)){\r\n                SetVar(type, buy)\r\n            }\r\n            Input(Name: SecuritiesId, Type: hidden, Value: #securities_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                If(#history_id# > 0){\r\n                    If(#type#==sell){\r\n                        Span(Class: h2 text-bold text-black, Body: Edit historical Sale)\r\n                    }\r\n                    If(#type#==buy){\r\n                        Span(Class: h2 text-bold text-black, Body: Edit historical Purchase)\r\n                    }\r\n                }.Else{\r\n                    If(#type#==sell){\r\n                        Span(Class: h2 text-bold text-black, Body: Add historical Sale)\r\n                    }\r\n                    If(#type#==buy){\r\n                        Span(Class: h2 text-bold text-black, Body: Add historical Purchase)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Number Em(Class: fa fa-caret-down pl-sm))\r\n                Div(input-group mt-sm){\r\n                    If(#type#==sell){\r\n                        If(#request_order_amount#){\r\n                            Input(Name: Amount, Class: styleInputRed, Type:number, Value: #request_order_amount#)\r\n                        }.Else{\r\n                            Input(Name: Amount, Class: styleInputRed, Type:number)\r\n                        }\r\n                        Div(input-group-btn){\r\n                            Button(Class: btn btnOrderSell, Body: Em(Class: fa fa-long-arrow-down) Sale)\r\n                            Button(Class: btn btnOrderDefaultRed, Body: Em(Class: fa fa-long-arrow-up) Purchase, Page: co_securities_history_edit, PageParams: \"type=buy,company_id=#company_id#,securities_id=#securities_id#,history_id=#history_id#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                    If(#type#==buy){\r\n                        If(#request_order_amount#){\r\n                            Input(Name: Amount, Class: styleInputGreen, Type:number, Value: #request_order_amount#)\r\n                        }.Else{\r\n                            Input(Name: Amount, Class: styleInputGreen, Type:number)\r\n                        }\r\n                        Div(input-group-btn){\r\n                            Button(Class: btn btnOrderDefaultGreen, Body: Em(Class: fa fa-long-arrow-down) Sale, Page: co_securities_history_edit, PageParams: \"type=sell,company_id=#company_id#,securities_id=#securities_id#,history_id=#history_id#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                            Button(Class: btn btnOrderBuy, Body: Em(Class: fa fa-long-arrow-up) Purchase)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Order date Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_order_date#){\r\n                    SetVar(order_date, DateTime(DateTime: #request_order_date#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date, Value: #order_date#)\r\n                }.Else{\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Comments Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_order_comments#){\r\n                    Input(Name: Comments, Class: style-textarea mt-sm, Type: textarea, Value: #request_order_comments#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Comments, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                If(#type#==sell){\r\n                    If(#wizard#==new_member){\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Sale\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=-1\", Page: settings_sh_list)\r\n                    }.ElseIf(#wizard#==new_stakeholder){\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Sale\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=-1\", Page: co_securities_list)\r\n                    }.Else{\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Sale\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=-1\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n                    }\r\n                }\r\n                If(#type#==buy){\r\n                    If(#wizard#==new_member){\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Purchase\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=1\", Page: settings_sh_list)\r\n                    }.ElseIf(#wizard#==new_stakeholder){\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Purchase\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=1\", Page: co_securities_list)\r\n                    }.Else{\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Purchase\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=1\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n                    }\r\n                }\r\n                If(#wizard#==new_member){\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n                }.ElseIf(#wizard#==new_stakeholder){\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list)\r\n                }.Else{\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .btnOrderBuy {\r\n        background-color: #27c24c;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #1e983b !important;\r\n    }\r\n    .btnOrderSell {\r\n        background-color: #f05050;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderDefaultGreen {\r\n        background-color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #1e983b !important;\r\n    }\r\n    .btnOrderDefaultRed {\r\n        background-color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .styleInputGreen {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px;\r\n        border-color: #1e983b !important;\r\n    }\r\n    .styleInputRed {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderBuy:hover{\r\n        color: #ffffff !important;\r\n    }\r\n    .btnOrderSell:hover{\r\n        color: #ffffff !important;\r\n    }\r\n    .btnOrderDefaultGreen:hover{\r\n        color: #f05050;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderDefaultRed:hover{\r\n        color: #27c24c;\r\n        border-color: #1e983b !important;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_history_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"@1notifications\").Columns(\"id,page_params,page_params->company_id,page_params->securities_id\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(company_id,#notific_page_params_company_id#)\r\n    SetVar(securities_id,#notific_page_params_securities_id#)\r\n}\r\nDBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": #company_id#, \"security_id\": #securities_id#})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"security_id\": #securities_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"security_id\": #securities_id#, \"owner\": #account_id#})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(where, {\"company_id\": #filter_role_company_id#, \"security_id\": #securities_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    DBFind(\"companies_securities\").Columns(\"owner\").Where({\"id\": #securities_id#}).Vars(srt)\r\n    DBFind(\"poa_list\").Columns(\"id\").Where({\"sender\": #srt_owner#, \"recipient\": #account_id#}).Vars(poa)\r\n    If(#poa_id# > 0){\r\n        SetVar(where, {\"company_id\": #filter_role_company_id#, \"security_id\": #securities_id#})\r\n    }.Else{\r\n        SetVar(where, {\"id\": \"0\"})\r\n    }\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nDBFind(companies_securities_history, src).Columns(\"id,order_date,order_amount,order_type,order_comments,history_balance,history_percent,date_created,owner,approval_flags->order,approval_flags->comment,transaction_type\").Where(#where#).Order({\"id\": -1}).Custom(custom_owner){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold preview-nowrap, Body: #m_member_name#)\r\n\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(custom_order){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ORDER:)\r\n            If(And(#junior_access_id# > 0,#transaction_type# != 1)){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_securities_history_edit, PageParams: \"company_id=#company_id#,securities_id=#securities_id#,history_id=#id#\").Popup(45, \"APLA ™\")\r\n            }\r\n        If(#approval_flags.order# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\", Contract: SecuritiesHistoryApprov, Params: \"Id=#id#,Step=1\")\r\n            }\r\n        }\r\n    }\r\n    If(#order_type# == \"1\"){\r\n        P(Class: txt-hidden p-10){\r\n            Span(Amount:)\r\n            Span(Class: pl text-success, Body: + #order_amount#)\r\n        }\r\n    }.Else{\r\n        P(Class: txt-hidden p-10){\r\n            Span(Amount:)\r\n            Span(Class: pl text-danger, Body: - #order_amount#)\r\n        }\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Order date: DateTime(DateTime: #order_date#, Format: \"DD.MM.YYYY\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YY HH:MI\", Location: #timezone#))\r\n    If(#transaction_type# == 1){\r\n        P(Class: txt-hidden p-00, Body: Type: Transaction)\r\n    }.Else{\r\n        P(Class: txt-hidden p-00, Body: Type: Historical)\r\n    }\r\n}.Custom(custom_comments){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: COMMENTS:)\r\n            If(And(#junior_access_id# > 0,#transaction_type# != 1)){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note faSize16), Page: co_securities_history_edit, PageParams: \"company_id=#company_id#,securities_id=#securities_id#,history_id=#id#\").Popup(45, \"APLA ™\")\r\n            }\r\n        If(#approval_flags.comment# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like faSize16), Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\", Contract: SecuritiesHistoryApprov, Params: \"Id=#id#,Step=2\")\r\n            }\r\n        }\r\n    }\r\n    If(#order_comments# != \"\"){\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: #order_comments#)\r\n    }.Else{\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: No)\r\n    }\r\n}.Custom(custom_balance){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: BALANCE:)\r\n    }\r\n    Div(text-center){\r\n        P(Class: txt-hidden p-40, Body: Shares: #history_balance# (Calculate(Exp: #history_percent#, Type: float, Prec: 2)%))\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_securities_history_edit, PageParams: \"company_id=#company_id#,securities_id=#securities_id#,type=buy\"){\r\n                        Span(Em(Class: icon-shuffle)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Order).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: upload_excel, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\"){\r\n                        Span(Em(Class: icon-cloud-upload)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Upload).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: co_securities_list){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Sharers)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: History)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_owner,=custom_order,=custom_comments,=custom_balance\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\nSetVar(company_id, #buffer_value#)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    If(#search#){\r\n        SetVar(w_search, {\"owner\": {\"$like\": \"#search#\"}})\r\n    }\r\n    If(#filter# > 1){\r\n        If(#filter# == 2){\r\n            SetVar(w_type, {\"info\": \"Ordinary shares\"})\r\n        }.ElseIf(#filter# == 3){\r\n            SetVar(w_type, {\"info\": \"Preference shares\"})\r\n        }\r\n    }\r\n    SetVar(where, {{\"company_id\": #company_id#, \"deleted\": 0}, {#w_search#}, {#w_type#}})\r\n}.ElseIf(#filter_role_type#==4){\r\n    If(#search#){\r\n        SetVar(w_search, {\"owner\": {\"$like\": \"#search#\"}})\r\n    }\r\n    If(#filter# > 1){\r\n        If(#filter# == 2){\r\n            SetVar(w_type, {\"info\": \"Ordinary shares\"})\r\n        }.ElseIf(#filter# == 3){\r\n            SetVar(w_type, {\"info\": \"Preference shares\"})\r\n        }\r\n    }\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\": 0}, {#w_search#}, {#w_type#}})\r\n}.ElseIf(#filter_role_type#==5){\r\n    If(#search#){\r\n        SetVar(w_search, {\"$and\": [\"owner\": {\"$like\": \"#search#\"}, \"owner\": #account_id#]})\r\n    }.Else{\r\n        SetVar(w_search, {\"owner\": #account_id#})\r\n    }\r\n    If(#filter# > 1){\r\n        If(#filter# == 2){\r\n            SetVar(w_type, {\"info\": \"Ordinary shares\"})\r\n        }.ElseIf(#filter# == 3){\r\n            SetVar(w_type, {\"info\": \"Preference shares\"})\r\n        }\r\n    }\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\": 0}, {#w_search#}, {#w_type#}})\r\n}.ElseIf(#filter_role_type#==6){\r\n    If(#search#){\r\n        SetVar(w_search, {\"owner\": {\"$like\": \"#search#\"}})\r\n    }\r\n    If(#filter# > 1){\r\n        If(#filter# == 2){\r\n            SetVar(w_type, {\"info\": \"Ordinary shares\"})\r\n        }.ElseIf(#filter# == 3){\r\n            SetVar(w_type, {\"info\": \"Preference shares\"})\r\n        }\r\n    }\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\": 0}, {#w_search#}, {#w_type#}})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\": 0}, {\"owner\": #poa#}})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nDBFind(companies_securities, src).Columns(\"id,owner,share_percent,balance,shares_id,deleted,date_created\").Where(#where#).Order({\"id\": 1}).Custom(_owner){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_balance){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: BALANCE:)\r\n    }\r\n    Div(text-center){\r\n        If(#share_percent# > 0){\r\n            P(Class: txt-hidden p-30, Body: Shares: #balance# (Calculate(Exp: #share_percent#, Type: float, Prec: 2)%))\r\n        }.Else{\r\n            P(Class: txt-hidden p-30, Body: Shares: #balance#)\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: co_securities_history_list, PageParams: \"securities_id=#id#,company_id=#company_id#\", Body: View history)\r\n    }\r\n}.Custom(_shares){\r\n    DBFind(\"co_shares_list\").Columns(\"id,name,info,details,details->other,details->type,details->nominal\").WhereId(#shares_id#).Vars(sh)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: SHARES:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            Div(Class: preview-nowrap h5 text-bold){\r\n                Div(){\r\n                    Span(Em(Class: mr fa icon-layers fa-3x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: text-bold pb-sm){\r\n                    Span(Class: h3 text-bold, Body: #sh_name#)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 7px;\r\n                    padding-left: 4px;\r\n                )\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(_info){\r\n    DBFind(\"co_shares_list\").Columns(\"id,name,info,details,details->other,details->type,details->nominal\").WhereId(#shares_id#).Vars(sh_info)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO)\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Created: DateTime(DateTime: #date_created#, Format: \"HH:MI DD.MM.YY\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00, Body: Shares type: #sh_info_details_type#)\r\n    P(Class: txt-hidden p-00, Body: Shares nominal: #sh_info_details_nominal#)\r\n}.Custom(_actions){\r\n    DBFind(\"companies_securities_history\").Where({\"security_id\":#id#,\"owner\":#owner#}).Count(history_data)\r\n    If(And(#junior_access_id# > 0,#history_data# == 0)){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: co_securities_list, Contract: SecuritiesEdit, Params: \"SharesId=#shares_id#,Id=#id#,Owner=#owner#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to delete this securities?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                DBFind(\"co_shares_list\").Columns(\"id,company_id,deleted,approval_flags,approval_flags->total_approval\").Where({\"company_id\":#company_id#,\"deleted\":0,\"approval_flags->total_approval\":1}).Count(\"shares_count\")\r\n                If(#shares_count# > 0){\r\n                    Div(pull-right pt-sm pr-lg){\r\n                        Button(Class: btn-xs btn-link pull-right, Page: co_se_new_owner, PageParams: \"fnew=1,company_id=#company_id#\"){\r\n                            Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                            Span(Class: ml-sm, Body: Add shareholder).Style(font-size: 21px;)\r\n                        }.Popup(45, \"APLA ™\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg){\r\n                                Span(Body: Sharers).Style(text-decoration: underline;)\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            LinkPage(Page: co_securities_orders_list){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Body: Orders)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            LinkPage(Page: poa_list){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Body: PoA)\r\n                                }\r\n                            }\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    If(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6)){\r\n                                        Input(Name: search, Value: #search#, Class: input-search)\r\n                                        Div(input-group-btn){\r\n                                            If(#search#){\r\n                                                Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: co_securities_list, PageParams: \"filter=#filter#\")\r\n                                            }\r\n                                            Button(Class: btn bg-gray-lighter btn-search, Page: co_securities_filter, PageParams: \"company_id=#company_id#,filter=#filter#\"){\r\n                                                If(#filter# > 1){\r\n                                                    Em(Class: text-success fa fa-filter)\r\n                                                }.Else{\r\n                                                    Em(Class: text-normal fa fa-filter)\r\n                                                }\r\n                                            }.Popup(45, \"APLA ™\")\r\n                                            Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: co_securities_list, PageParams: \"search=Val(search),filter=#filter#\")\r\n                                        }\r\n                                    }.ElseIf(#filter_role_type#==7){\r\n                                        Div(input-group-addon){\r\n                                            PoA:\r\n                                        }.Style(\r\n                                            && {\r\n                                                width: 60px!important;\r\n                                                border-radius: 6px;\r\n                                                background-color: #fff;\r\n                                                height: 40px!important;\r\n                                                border: 1px solid #e0e0e0;\r\n                                            }\r\n                                        )\r\n                                        DBFind(poa_list, src_list).Where({\"company_id\": #filter_role_company_id#, \"recipient\": #account_id#, \"status\": {\"$neq\": 4}}).Columns(\"sender\")\r\n                                        Select(Name: Poa, Class: input-search, Source: src_list, NameColumn: sender, ValueColumn: sender)\r\n                                        Div(input-group-btn){\r\n                                            Button(Class: btn bg-gray-lighter btn-search, Page: co_securities_list, PageParams: \"poa=Val(Poa)\"){\r\n                                                If(#poa#){\r\n                                                    Em(Class: text-success fa fa-refresh)\r\n                                                }.Else{\r\n                                                    Em(Class: text-normal fa fa-refresh)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_owner,=_shares,=_info,=_balance,=_actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                If(And(#junior_access_id# > 0,#shares_count# == 0)){\r\n                                    Div(Class: text-center txt-absent, Body: The company has no existing shares)\r\n                                }.Else{\r\n                                    Div(Class: text-center txt-absent, Body: Information is absent)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_orders_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"@1notifications\").Columns(\"id,page_params,page_params->company_id\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(company_id,#notific_page_params_company_id#)\r\n}.Else(\r\n    DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n    SetVar(company_id, #buffer_value#)\r\n)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    If(#search#){\r\n        SetVar(w_search, {\"$or\": [\"new_owner\": {\"$like\": \"#search#\"}, \"previous_owner\": {\"$like\": \"#search#\"}]})\r\n    }\r\n    SetVar(where, {{\"company_id\": #company_id#, \"deleted\":0}, {#w_search#}})\r\n}.ElseIf(#filter_role_type#==4){\r\n    If(#search#){\r\n        SetVar(w_search, {\"$or\": [\"new_owner\": {\"$like\": \"#search#\"}, \"previous_owner\": {\"$like\": \"#search#\"}]})\r\n    }\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\":0}, {#w_search#}})\r\n}.ElseIf(#filter_role_type#==5){\r\n    If(#search#){\r\n        SetVar(w_search, {\"$and\": [\"$or\": [\"new_owner\": {\"$like\": \"#search#\"}, \"previous_owner\": {\"$like\": \"#search#\"}], \"$or\": [\"new_owner\": #account_id#, \"previous_owner\": #account_id#]]}\r\n    }.Else{\r\n        SetVar(w_search, {\"$or\": [\"new_owner\": #account_id#, \"previous_owner\": #account_id#]})\r\n    }\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\":0}, {#w_search#}})\r\n}.ElseIf(#filter_role_type#==6){\r\n    If(#search#){\r\n        SetVar(w_search, {\"$or\": [\"new_owner\": {\"$like\": \"#search#\"}, \"previous_owner\": {\"$like\": \"#search#\"}]})\r\n    }\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\":0}, {#w_search#}})\r\n}.ElseIf(#filter_role_type#==7){\r\n    If(#poa#){}.Else{SetVar(poa, 0)}\r\n    SetVar(w_search, {\"$or\": [\"new_owner\": #poa#, \"previous_owner\": #poa#]})\r\n    SetVar(where, {{\"company_id\": #filter_role_company_id#, \"deleted\":0}, {#w_search#}})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nDBFind(companies_orders_securities, src).Columns(\"id,deleted,date_created,order_amount,order_date,file_id,previous_owner,new_owner,approval_flags,shares_id,status,order_signs,order_signs->new_owner_sign,order_signs->previous_owner_sign\").Where(#where#).Order({\"id\": -1}).Custom(custom_owner){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #previous_owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: PREVIOUS OWNER:)\r\n        If(#status# != 0){\r\n            If(#order_signs.previous_owner_sign# == \"\"){\r\n                Span(Class: pl text-danger, Body: (pending sign))\r\n            }.Else {\r\n                Span(Class: pl text-success, Body: (signed))\r\n            }\r\n        }\r\n        If(And(#approval_flags# != 1, #junior_access_id# > 0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_previous_owner, PageParams: \"shares_id=#shares_id#,company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(new_order_owner){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #new_owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: NEW OWNER:)\r\n        If(#status# != 0){\r\n            If(#order_signs.new_owner_sign# == \"\"){\r\n                Span(Class: pl text-danger, Body: (pending sign))\r\n            }.Else{\r\n                Span(Class: pl text-success, Body: (signed))\r\n            }\r\n        }\r\n        If(And(#approval_flags# != 1, #junior_access_id# > 0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_new_owner, PageParams: \"shares_id=#shares_id#,company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_amount){\r\n    DBFind(\"co_shares_list\").WhereId(#shares_id#).Vars(shar)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ORDER:)\r\n        If(And(#approval_flags# != 1, #junior_access_id# > 0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_info, PageParams: \"company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Amount: #order_amount#)\r\n    P(Class: txt-hidden p-10, Body: Order date: DateTime(DateTime: #order_date#, Format: \"DD.MM.YYYY\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YY HH:MI\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00, Body: Shares: #shar_name#)\r\n}.Custom(custom_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    Div(text-center){\r\n        If(#status# == 0){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-warning, Body: Pending))\r\n        }\r\n        If(#status# == 1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-primary, Body: Signing))\r\n        }\r\n        If(#status# == 2){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-primary, Body: Signing Issuer))\r\n        }\r\n        If(#status# == 3){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-success, Body: Done))\r\n        }\r\n        If(#status# == -1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-danger, Body: Rejected))\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: co_se_order_sign, PageParams: \"order_id=#id#,company_id=#company_id#\", Body: View order)\r\n    }\r\n}.Custom(custom_doc){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DOCUMENTS:)\r\n        If(And(#approval_flags#!=1,#junior_access_id#>0,#file_id#>0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_upload_doc, PageParams: \"company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(text-center mt-lg){\r\n        If(#file_id# > 0){\r\n            DBFind(binaries, src_binaries).Where({\"id\": #file_id#})\r\n            Table(src_binaries, \"=data\").Style(\r\n                margin-top:-20px;\r\n                thead {\r\n                    background-color: #ffffff;\r\n                }\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                tbody {\r\n                    background-color: #ffffff;\r\n                }\r\n                tbody > tr > td  {\r\n                    border: none!important;\r\n                    height: 10px!important;\r\n                    width: 10px!important;\r\n                }\r\n            )\r\n        }\r\n        If(And(#approval_flags#!=1,#junior_access_id#>0,#file_id#==0)){\r\n            Button(Class: btn-xs btn-link mt-lg, Page: co_se_order_edit_upload_doc, PageParams: \"company_id=#company_id#,order_id=#id#\"){\r\n                Span(Em(Class: icon-cloud-upload)).Style(font-size: 20px;)\r\n                Span(Class: ml-sm, Body: Upload).Style(font-size: 22px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n}.Custom(custom_actions){\r\n    If(And(#approval_flags# != 1, #partner_access_id# > 0)){\r\n        Button(Class: btn-link pull-right pt-xl, Body: Em(Class: pt-lg fa fa-2x icon-like), Page: co_securities_orders_list, Contract: SecuritiesOrderTransferEdit, Params: \"OrderId=#id#,ApprovalFlag=1\")\r\n    }\r\n    If(And(#junior_access_id# > 0,#approval_flags# != 1)){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: co_securities_orders_list, Contract: SecuritiesOrderTransferEdit, Params: \"OrderId=#id#,Del=1\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to delete this order?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_se_order_select_shares, PageParams: \"fnew=1,company_id=#company_id#\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: New order).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: co_securities_list){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                    Span(Body: Sharers)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            Span(Class: txt-hl-navigation){\r\n                                Span(Body: Orders).Style(text-decoration: underline;)\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            LinkPage(Page: poa_list){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Body: PoA)\r\n                                }\r\n                            }\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    If(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6)){\r\n                                        Input(Name: search, Value: #search#, Class: input-search)\r\n                                        Div(input-group-btn){\r\n                                            If(#search#){\r\n                                                Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: co_securities_orders_list)\r\n                                            }\r\n                                            Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: co_securities_orders_list, PageParams: \"search=Val(search)\")\r\n                                        }\r\n                                    }.ElseIf(#filter_role_type#==7){\r\n                                        Div(input-group-addon){\r\n                                            PoA:\r\n                                        }.Style(\r\n                                            && {\r\n                                                width: 60px!important;\r\n                                                border-radius: 6px;\r\n                                                background-color: #fff;\r\n                                                height: 40px!important;\r\n                                                border: 1px solid #e0e0e0;\r\n                                            }\r\n                                        )\r\n                                        DBFind(poa_list, src_list).Where({\"company_id\": #filter_role_company_id#, \"recipient\": #account_id#, \"status\": {\"$neq\": 4}}).Columns(\"sender\")\r\n                                        Select(Name: Poa, Class: input-search, Source: src_list, NameColumn: sender, ValueColumn: sender)\r\n                                        Div(input-group-btn){\r\n                                            Button(Class: btn bg-gray-lighter btn-search, Page: co_securities_orders_list, PageParams: \"poa=Val(Poa)\"){\r\n                                                If(#poa#){\r\n                                                    Em(Class: text-success fa fa-refresh)\r\n                                                }.Else{\r\n                                                    Em(Class: text-normal fa fa-refresh)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_owner,=custom_arrow,=new_order_owner,=custom_amount,=custom_doc,=custom_status,=custom_actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_shares_edit_amount",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(co_shares_list).Where({\"company_id\": #company_id#, \"name\": #shares_name#}).Vars(shares)\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }.Else{\r\n            DBFind(co_shares_list).Where({\"id\": #shares_id#}).Columns(\"id,total_amount\").Vars(request)\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Shares Amount) \r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Total Shares Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_total_amount#){\r\n                    Input(Name: TotalAmount, Class: stl-input mt-sm, Value: #request_total_amount#, Type: number)\r\n                }.Else{\r\n                    Input(Name: TotalAmount, Class: stl-input mt-sm, Type: number)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Distribute\", Contract: SharesEdit, Params: \"Step=4\", Page: co_view)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SharesEdit, Params: \"Step=4\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_shares_edit_details",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(co_shares_list).Where({\"company_id\": #company_id#, \"name\": \"#shares_name#\"}).Vars(shares)\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }.Else{\r\n            DBFind(co_shares_list).Where({\"id\": #shares_id#}).Columns(\"details->type,details->other,details->nominal\").Vars(request)\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }\r\n        \r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Shares Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Type of securities Em(Class: fa fa-caret-down pl-sm))\r\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: companies_shares_type, Source: src_shares_type)\r\n                Div(mt h4){\r\n                    If(#request_details_type#){\r\n                        RadioGroup(Name: SharesType, Source: src_shares_type, NameColumn: name, ValueColumn: name, Value: #request_details_type#)\r\n                    }.Else{\r\n                        RadioGroup(Name: SharesType, Source: src_shares_type, NameColumn: name, ValueColumn: name)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Nominal value Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_details_nominal#){\r\n                    Input(Name: Nominal, Class: stl-input mt-sm, Value: #request_details_nominal#)\r\n                }.Else{\r\n                    Input(Name: Nominal, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Other details Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_details_other#){\r\n                    Input(Name: Other, Class: style-textarea mt-sm, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Other, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: SharesEdit, Params: \"Step=2\", Page: co_shares_edit_info, PageParams: \"fnew=1,company_id=#company_id#,shares_id=#shares_id#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SharesEdit, Params: \"Step=2\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_shares_edit_info",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }.Else{\r\n            DBFind(co_shares_list).WhereId(#shares_id#).Vars(request)\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }\r\n\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Shares Information)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Information Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_info#){\r\n                    Input(Name: Info, Class: style-textarea mt-sm, Type: textarea, Value: #request_info#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Info, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Contract: SharesEdit, Params: \"Step=3\", Body: \"Next\", Page: co_shares_edit_amount, PageParams: \"fnew=1,company_id=#company_id#,shares_id=#shares_id#\").Popup(45, \"APLA ™\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SharesEdit, Params: \"Step=3\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_shares_edit_name",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\nSetVar(company_id,#company_id#)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n        }.Else{\r\n            DBFind(co_shares_list).WhereId(#shares_id#).Vars(request)\r\n            Input(Name: SharesId, Type: hidden, Value: #shares_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Shares Registration Name) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_name#){\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #request_name#)\r\n                }.Else{\r\n                    Input(Name: Name, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Start\", Contract: SharesEdit, Params: \"Step=1,CompanyId=#company_id#\", Page: co_shares_edit_details, PageParams: \"fnew=1,shares_name=Val(Name),company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                    If(#req# == 1){\r\n                        Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: co_view)\r\n                    }.Else{\r\n                        Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: co_view)\r\n                    }\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SharesEdit, Params: \"Step=1\", Page: co_view)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"@1notifications\").Columns(\"id,page_params,page_params->company_id\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(company_id, #notific_page_params_company_id#)\r\n}.Else{\r\n    DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n    SetVar(company_id, #buffer_value#)\r\n}\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"id\": #company_id#})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_list, src).Where(#where#).Columns(\"name,trader_name,legal_form,address->timezone,address->city,address->street,address->country,address->postal_code,address->house_number,registration->date,registration->number,registration->duration,registration->authority,license->number,license->activity,license->authority,license->issue_date,license->valid_until,approval_flags->name,approval_flags->legal,approval_flags->address,approval_flags->registration,approval_flags->license\").Order({\"deleted\": 1, \"name\": 1}).Custom(_name){ \r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NAME:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_name, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.name# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=1\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#name# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #name#)\r\n    }\r\n    If(#trader_name# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Trader name: #trader_name#)\r\n    }\r\n    Div(txt-nowrap pt-lg){\r\n        Span(Class: txt-table-hl, Body: LEGAL FORM:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_legform, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.legal# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=2\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#legal_form# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #legal_form#)\r\n    }\r\n}.Custom(_adress){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ADDRESS:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_address, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.address# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=3\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(And(#address.house_number# != NULL,#address.street# != NULL)){\r\n        P(Class: txt-hidden p-10, Body: #address.house_number# #address.street#)\r\n    }\r\n    If(#address.city# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.city#)\r\n    }\r\n    If(#address.postal_code# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.postal_code#)\r\n    }\r\n    If(#address.country#!= NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.country#)\r\n    }\r\n    If(#address.timezone#!= NULL){\r\n        P(Class: txt-hidden p-00, Body: Time Zone: #address.timezone#)\r\n    }\r\n}.Custom(_registration){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: REGISTRATION:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_registration, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.registration# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=4\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#registration.number# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #registration.number#)\r\n    }\r\n    If(#registration.authority# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #registration.authority#)\r\n    }\r\n    If(#registration.date# > 0){\r\n        P(Class: txt-hidden p-10, Body: Date: DateTime(DateTime: #registration.date#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n    }\r\n    If(#registration.duration# > 0){\r\n        P(Class: txt-hidden p-00, Body: Duration: DateTime(DateTime: #registration.duration#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n    }.Else{\r\n        P(Class: txt-hidden p-00, Body: Duration: unlimited)\r\n    }\r\n}.Custom(_license){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: LICENSE:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_license, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.license# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=5\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#license.number# != NULL){\r\n        If(#license.number# != NULL){\r\n            P(Class: txt-hidden p-10, Body: #license.number#)\r\n        }\r\n        If(#license.activity# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.activity#)\r\n        }\r\n        If(#license.authority# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.authority#)\r\n        }\r\n        If(#license.issue_date#> 0){\r\n            P(Class: txt-hidden p-10, Body: Issue: DateTime(DateTime: #license.issue_date#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n        }\r\n        If(#license.valid_until# > 0){\r\n            P(Class: txt-hidden p-00, Body: Valid: DateTime(DateTime: #license.valid_until#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n        }\r\n    }.Else{\r\n        P(Class: txt-hidden, Body: No)\r\n    }\r\n}.Count(count)\r\n\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where2, {\"company_id\": #company_id#, \"deleted\":0})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where2, {\"company_id\": #filter_role_company_id#, \"deleted\":0})\r\n}.Else{\r\n    SetVar(where2, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(co_shares_list, src2).Columns(\"id,name,amount,info,details,details->other,details->type,details->nominal,approval_flags,approval_flags->total_amount,approval_flags->name,approval_flags->information,approval_flags->total_approval,approval_flags->details,total_amount,date_created,deleted\").Where(#where2#).Order({\"id\": 1}).Custom(_name){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NAME:)\r\n        If(And(#junior_access_id# > 0,#approval_flags.total_approval# != 1)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_shares_edit_name, PageParams: \"company_id=#company_id#,shares_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.name# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, Contract: SharesApprov, Params: \"Id=#id#,Step=1\")\r\n            }\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            Div(Class: preview-nowrap h5 text-bold){\r\n                Div(){\r\n                    Span(Em(Class: mr fa icon-layers fa-3x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: text-bold pb-sm){\r\n                    Span(Class: h3 text-bold, Body: #name#)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 7px;\r\n                    padding-left: 4px;\r\n                )\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(_total_balance){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: SHARES:)\r\n        If(And(#junior_access_id# > 0,#approval_flags.total_approval# != 1)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_shares_edit_amount, PageParams: \"company_id=#company_id#,shares_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.total_amount# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, Contract: SharesApprov, Params: \"Id=#id#,Step=4\")\r\n            }\r\n        }\r\n    }\r\n    P(Class: txt-hidden p-30, Body: Issued: #total_amount#)\r\n    P(Class: txt-hidden p-30, Body: Distributed: #amount#)\r\n}.Custom(_details){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NOMINAL VALUE:)\r\n        If(And(#junior_access_id# > 0,#approval_flags.total_approval# != 1)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_shares_edit_details, PageParams: \"company_id=#company_id#,shares_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.details# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, Contract: SharesApprov, Params: \"Id=#id#,Step=2\")\r\n            }\r\n        }\r\n    }\r\n    If(#details.nominal# != NULL){\r\n        P(Class: txt-hidden p-20, Body: Nominal value: #details.nominal#)\r\n    }\r\n    If(#details.type# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #details.type#)  \r\n    }\r\n    If(#details.other# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #details.other#)\r\n    }\r\n}.Custom(_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DETAILS:)\r\n        If(And(#junior_access_id# > 0,#approval_flags.total_approval# != 1)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_shares_edit_info, PageParams: \"company_id=#company_id#,shares_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.information# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, Contract: SharesApprov, Params: \"Id=#id#,Step=3\")\r\n            }\r\n        }\r\n    }\r\n    If(#info# != \"\"){\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: #info#)\r\n    }.Else{\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: No)\r\n    }\r\n}.Custom(_actions){\r\n    If(And(#junior_access_id# > 0,#approval_flags.total_approval# != 1)){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: co_view, Contract: SharesEdit, Params: \"SharesId=#id#,Step=5\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to delete this shares?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count2)\r\n\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Company Details\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_edit_name, PageParams: \"fnew=1\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: New company).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        If(#count# != 0){\r\n                            Div(bb pb){\r\n                                Span(Class: txt-hl-navigation ml-lg){\r\n                                    Span(Body: Information).Style(text-decoration: underline;)\r\n                                }\r\n                                Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                LinkPage(Page: co_roles_list){\r\n                                    Span(Class: txt-hl-navigation-blue){\r\n                                        Span(Body: Roles)\r\n                                    }\r\n                                }\r\n                                Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                LinkPage(Page: co_issues_list){\r\n                                    Span(Class: txt-hl-navigation-blue){\r\n                                        Span(Body: Issues)\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(table-responsive){\r\n                                Div(table-noheader){\r\n                                    Table(Source: src, Columns: \"=_name,=_adress,=_registration,=_license\").Style(\r\n                                        tbody > tr > td {\r\n                                            height: 165px;\r\n                                        }\r\n                                    )\r\n                                }\r\n                            }.Style(\r\n                                height: 170px;\r\n                            )\r\n                        }.Else{\r\n                            Div(bb pb){\r\n                                Span(Class: txt-hl-navigation ml-lg, Body: Information).Style(text-decoration: underline;)\r\n                            }\r\n                            Div(table-responsive){\r\n                                Div(table-noheader){\r\n                                }\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Div(row){\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: Company Shares).Style(text-decoration: underline;)\r\n                            If(#junior_access_id# > 0){\r\n                                If(#count# != 0){\r\n                                    Div(pull-right pr-lg){\r\n                                        Button(Class: btn-xs btn-link pull-right, Page: co_shares_edit_name, PageParams: \"company_id=#company_id#,fnew=1\"){\r\n                                            Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                                            Span(Class: ml-sm, Body: New Class).Style(font-size: 21px;)\r\n                                        }.Popup(45, \"APLA ™\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src2, Columns: \"=_name,=_details,=_info,=_total_balance,=_actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count2# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "default_page",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nDBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n\r\nDBFind(notifications, src_notifications).Where({\"ecosystem\": #ecosystem_id#, {\"$or\": [\"recipient->role_id\": #role_id#, \"recipient->account\": #account_id#]}, \"closed\":0}).Order({id:\"-1\"}).Columns(\"id,recipient->account,recipient->member_name,recipient->role_id,recipient->role_name,recipient->image_id,sender->type,sender->account,sender->member_name,sender->role_id,sender->role_name,notification->type,notification->icon,notification->popup,page_name,page_params,date_created,date_closed,date_start_processing,processing_info->member_name,closed\").Custom(custom_recipient){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: RECIPIENT:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        If(#notification.type#==1){\r\n            DBFind(members).Where({\"account\": #recipient.account#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }\r\n        If(#notification.type#==2){\r\n            Div(ml mt-lg mb){\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #recipient.role_name#)\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm mr-xl){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(custom_sender){\r\n    If(#sender.type#==1){\r\n        Div(txt-nowrap){\r\n            DBFind(members).Where({\"account\": #sender.account#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            Span(Class: txt-table-hl, Body: SENDER:)\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }\r\n    If(#sender.type#==2){\r\n        Div(txt-nowrap){\r\n            Span(Class: txt-table-hl, Body: SENDER:)\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #sender.role_name#)\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }\r\n}.Custom(custom_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Sent: DateTime(DateTime: #date_created#, Format: \"DD.MM HH:MI\"))\r\n    P(Class: txt-hidden p-10, Body: Status: Span(Class: text-success, Body: Active))\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: PAGE:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"notific_id=#id#\", Page: #page_name#, Body: View notice)\r\n    }\r\n}.Custom(actions){\r\n    If(#notification.type#==1){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: notifications_list, Contract: NotificationsClose, Params: \"NotificId=#id#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to close this notification?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count_notifications)\r\n\r\n\r\nDBFind(companies_list, src_list).Where({\"id\": {\"$gt\": 0}}).Columns(\"name,trader_name,legal_form,address->timezone,address->city,address->street,address->country,address->postal_code,address->house_number,registration->date,registration->number,registration->duration,registration->authority,license->number,license->activity,license->authority,license->issue_date,license->valid_until,approval_flags->name,approval_flags->legal,approval_flags->address,approval_flags->registration,approval_flags->license\").Order({\"deleted\": 1, \"name\": 1}).Custom(_name){\r\n    Button(Class: btn-link preview-nowrap text-primary h5 text-bold pt-sm, Page: co_view, Contract: @1BufferManager, Params: \"Action=set,Key=company_id,Val=#id#\"){\r\n        Div(Class: text-primary){\r\n            If(#buffer_value#==#id#){\r\n                Span(Em(Class: fa fa-check-square-o)).Style(font-size: 25px; margin-right: 3px;)\r\n            }.Else{\r\n                Span(Em(Class: fa fa-square-o)).Style(font-size: 25px; margin-right: 3px;)\r\n            }\r\n        }.Style(\r\n            display: inline-block;\r\n        )\r\n        Span(Class: btn-link text-bold){\r\n            Span(Class: text-primary h3 text-bold, Body: #name#)\r\n        }.Style(\r\n            display: inline-block;\r\n            vertical-align: top;\r\n            padding-left: 10px;\r\n        )\r\n    }\r\n}.Custom(_legform){ \r\n    Div(txt-nowrap pt-sm){\r\n        Span(Class: txt-table-hl, Body: LEGAL FORM:)\r\n    }\r\n    If(#legal_form# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #legal_form#)\r\n    }\r\n}.Custom(_tradername){\r\n    Div(txt-nowrap pt-sm){\r\n        Span(Class: txt-table-hl, Body: TRADER NAME:)\r\n    }\r\n    If(#trader_name# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #trader_name#)\r\n    }\r\n}.Count(count_list)\r\n\r\n\r\nIf(Or(#filter_role_type#==4,#filter_role_type#==6)){\r\n    SetVar(where_comp_info, {\"id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(where_comp_info, {\"id\": \"0\"})\r\n}\r\nDBFind(companies_list, src_comp_info).Where(#where_comp_info#).Columns(\"name,trader_name,legal_form,address->timezone,address->city,address->street,address->country,address->postal_code,address->house_number,registration->date,registration->number,registration->duration,registration->authority,license->number,license->activity,license->authority,license->issue_date,license->valid_until,approval_flags->name,approval_flags->legal,approval_flags->address,approval_flags->registration,approval_flags->license\").Order({\"deleted\": 1, \"name\": 1}).Custom(_name){ \r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NAME:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_name, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.name# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=1\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#name# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #name#)\r\n    }\r\n    If(#trader_name# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Trader name: #trader_name#)\r\n    }\r\n    Div(txt-nowrap pt-lg){\r\n        Span(Class: txt-table-hl, Body: LEGAL FORM:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_legform, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.legal# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=2\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#legal_form# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #legal_form#)\r\n    }\r\n}.Custom(_adress){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ADDRESS:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_address, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.address# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=3\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(And(#address.house_number# != NULL,#address.street# != NULL)){\r\n        P(Class: txt-hidden p-10, Body: #address.house_number# #address.street#)\r\n    }\r\n    If(#address.city# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.city#)\r\n    }\r\n    If(#address.postal_code# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.postal_code#)\r\n    }\r\n    If(#address.country#!= NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.country#)\r\n    }\r\n    If(#address.timezone#!= NULL){\r\n        P(Class: txt-hidden p-00, Body: Time Zone: #address.timezone#)\r\n    }\r\n}.Custom(_registration){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: REGISTRATION:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_registration, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.registration# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=4\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#registration.number# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #registration.number#)\r\n    }\r\n    If(#registration.authority# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #registration.authority#)\r\n    }\r\n    If(#registration.date# > 0){\r\n        P(Class: txt-hidden p-10, Body: Date: DateTime(DateTime: #registration.date#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n    }\r\n    If(#registration.duration# > 0){\r\n        P(Class: txt-hidden p-00, Body: Duration: DateTime(DateTime: #registration.duration#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n    }.Else{\r\n        P(Class: txt-hidden p-00, Body: Duration: unlimited)\r\n    }\r\n}.Custom(_license){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: LICENSE:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Page: co_edit_license, PageParams: \"company_id=#company_id#\"){\r\n                Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.license# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: co_view, Contract: CompanyApprov, Params: \"Id=#company_id#,Step=5\"){\r\n                    Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#license.number# != NULL){\r\n        If(#license.number# != NULL){\r\n            P(Class: txt-hidden p-10, Body: #license.number#)\r\n        }\r\n        If(#license.activity# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.activity#)\r\n        }\r\n        If(#license.authority# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.authority#)\r\n        }\r\n        If(#license.issue_date#> 0){\r\n            P(Class: txt-hidden p-10, Body: Issue: DateTime(DateTime: #license.issue_date#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n        }\r\n        If(#license.valid_until# > 0){\r\n            P(Class: txt-hidden p-00, Body: Valid: DateTime(DateTime: #license.valid_until#, Format: \"DD.MM.YYYY\", Location: #address.timezone#))\r\n        }\r\n    }.Else{\r\n        P(Class: txt-hidden, Body: No)\r\n    }\r\n}\r\n\r\nIf(#filter_role_type#==5){\r\n    SetVar(where_sharers, {\"owner\": #account_id#})\r\n}.Else{\r\n    SetVar(where_sharers, {\"id\": \"0\"})\r\n}\r\nDBFind(companies_securities, src_sharers).Columns(\"id,owner,share_percent,balance,shares_id,deleted,date_created\").Where(#where_sharers#).Order({\"id\": 1}).Custom(_owner){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #owner#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_balance){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: BALANCE:)\r\n    }\r\n    Div(text-center){\r\n        If(#share_percent# > 0){\r\n            P(Class: txt-hidden p-30, Body: Shares: #balance# (Calculate(Exp: #share_percent#, Type: float, Prec: 2)%))\r\n        }.Else{\r\n            P(Class: txt-hidden p-30, Body: Shares: #balance#)\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: co_securities_history_list, PageParams: \"securities_id=#id#,company_id=#filter_role_type#\", Body: View history)\r\n    }\r\n}.Custom(_shares){\r\n    DBFind(\"co_shares_list\").Columns(\"id,name,info,details,details->other,details->type,details->nominal\").WhereId(#shares_id#).Vars(sh)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: SHARES:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            Div(Class: preview-nowrap h5 text-bold){\r\n                Div(){\r\n                    Span(Em(Class: mr fa icon-layers fa-3x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: text-bold pb-sm){\r\n                    Span(Class: h3 text-bold, Body: #sh_name#)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 7px;\r\n                    padding-left: 4px;\r\n                )\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(_info){\r\n    DBFind(\"co_shares_list\").Columns(\"id,name,info,details,details->other,details->type,details->nominal\").WhereId(#shares_id#).Vars(sh_info)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO)\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Created: DateTime(DateTime: #date_created#, Format: \"HH:MI DD.MM.YY\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00, Body: Shares type: #sh_info_details_type#)\r\n    P(Class: txt-hidden p-00, Body: Shares nominal: #sh_info_details_nominal#)\r\n}.Custom(_actions){\r\n    DBFind(\"companies_securities_history\").Where({\"security_id\":#id#,\"owner\":#owner#}).Count(history_data)\r\n    If(And(#junior_access_id# > 0,#history_data# == 0)){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: co_securities_list, Contract: SecuritiesEdit, Params: \"SharesId=#shares_id#,Id=#id#,Owner=#owner#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to delete this securities?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count_sharers)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Home page\r\n            }\r\n            Div(pull-right pt-sm pr-lg){\r\n                Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_messenges){\r\n                    Span(Em(Class: icon-envelope-open)).Style(font-size: 18px; display: inline-block;)\r\n                    Span(Class: ml-sm, Body: Support).Style(font-size: 21px;)\r\n                }\r\n            }\r\n        }\r\n        If(#filter_role_type#>0){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Div(panel panel-primary form-min-width){\r\n                        Div(panel-body){\r\n                            Div(bb pb){\r\n                                Span(Class: txt-hl-navigation ml-lg, Body: Notifications).Style(text-decoration: underline;)\r\n                            }\r\n                            Div(table-responsive){\r\n                                Div(table-noheader){\r\n                                    Table(Source: src_notifications, Columns: \"=custom_page,=custom_sender,=custom_arrow,=custom_recipient,=custom_info,=actions\").Style(\r\n                                        tbody > tr > td {\r\n                                            height: 140px;\r\n                                        }\r\n                                    )\r\n                                }\r\n                                If(#count_notifications# == 0){\r\n                                    Div(Class: text-center txt-absent, Body: Information is absent)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#filter_role_type#==3){\r\n        Div(row){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Div(panel panel-primary form-min-width){\r\n                        Div(panel-body){\r\n                            Div(bb pb){\r\n                                Span(Class: txt-hl-navigation ml-lg, Body: Companies).Style(text-decoration: underline;)\r\n                            }\r\n                            Div(table-responsive){\r\n                                Div(table-noheader){\r\n                                    Table(Source: src_list, Columns: \"=_name,=_tradername,=_legform\").Style(\r\n                                        tbody > tr > td {\r\n                                            height: 80px;\r\n                                        }\r\n                                    )\r\n                                }\r\n                                If(#count_list# == 0){\r\n                                    Div(Class: text-center txt-absent, Body: Information is absent)\r\n                                }\r\n                            }\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(Or(#filter_role_type#==4,#filter_role_type#==6)){\r\n        Div(row){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Div(panel panel-primary form-min-width){\r\n                        Div(panel-body){\r\n                            Div(bb pb){\r\n                                Span(Class: txt-hl-navigation ml-lg, Body: Company Details).Style(text-decoration: underline;)\r\n                            }\r\n                            Div(table-responsive){\r\n                                Div(table-noheader){\r\n                                    Table(Source: src_comp_info, Columns: \"=_name,=_adress,=_registration,=_license\").Style(\r\n                                        tbody > tr > td {\r\n                                            height: 165px;\r\n                                        }\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#filter_role_type#==5){\r\n        Div(row){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Div(panel panel-primary form-min-width){\r\n                        Div(panel-body){\r\n                            Div(bb pb){\r\n                                Span(Class: txt-hl-navigation ml-lg, Body: Shares).Style(text-decoration: underline;)\r\n                            }\r\n                            Div(table-responsive){\r\n                                Div(table-noheader){\r\n                                    Table(Source: src_sharers, Columns: \"=_shares,=_info,=_balance,=_actions\").Style(\r\n                                        tbody > tr > td {\r\n                                            height: 140px;\r\n                                        }\r\n                                    )\r\n                                }\r\n                                If(#count_sharers# == 0){\r\n                                    Div(Class: text-center txt-absent, Body: Information is absent)\r\n                                }\r\n                            }\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "notifications",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(notifications,notification_singles).Where({\"ecosystem\": #ecosystem_id#, \"closed\": 0, \"notification->type\": 1, \"recipient->account\": #account_id#}).Columns(\"id,page_name,notification->icon,notification->header,notification->popup,notification->body\").Count(count_singles)\r\n\r\nDBFind(notifications,notification_roles).Where({\"ecosystem\": #ecosystem_id#, \"closed\": 0, \"notification->type\": 2, \"recipient->role_id\": #role_id#, {\"$or\": [{\"date_start_processing\": 0}, {\"processing_info->account\": #account_id#}]}}).Columns(\"id,page_name,notification->icon,notification->header,notification->popup,notification->body,recipient->role_id\").Count(count_current_role)\r\n\r\nSetVar(limit,10).(limit_count,#limit#)\r\nSetVar(remaining,Calculate(#count_singles#+#count_current_role#-#limit#))\r\n\r\nIf(And(#limit_count#>0,#count_singles#>0)){\r\n    ForList(notification_singles){\r\n        If(#limit_count#>0){\r\n            SetVar(limit_count,Calculate(#limit_count#-1))\r\n            If(#notification.popup#==1){\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }.Popup(Header: $notifications_view$, Width: \"40\")\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }.Else{\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nIf(And(#limit_count#>0,#count_current_role#>0)){\r\n    DBFind(roles).Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_id#}).Columns(\"role_name\").Vars(role)\r\n    Div(dropdown-heading b0){\r\n        $role_notifics$ (#role_role_name#)\r\n    }\r\n    ForList(notification_roles){\r\n        If(#limit_count#>0){\r\n            SetVar(limit_count,Calculate(#limit_count#-1))\r\n            If(#notification.popup#==1){\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }.Popup(Header: $notifications_view$, Width: \"40\")\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }.Else{\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nIf(#remaining#>0){\r\n    Button(Class: btn btn-block btn-default, Page: default_page){\r\n        $notifications_show_all$ (#remaining# $more$)\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_edit_details",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#poa_id# > 0){\r\n    DBFind(\"poa_list\").Where({\"id\": #poa_id#}).Columns(\"status,sender,recipient,date_start,date_end,flags->meeting,flags->bidding\").Vars(edit)\r\n    SetVar(poa_sender, #edit_sender#)\r\n    SetVar(poa_recipient, #edit_recipient#)\r\n}.Else{\r\n    DBFind(\"buffer_data\", src_mem).Columns(\"value->poa_sender,value->poa_recipient\").Where({\"key\": \"poa_details\", \"ecosystem\": #ecosystem_id#, \"account\": #account_id#}).Vars(buffer)\r\n    SetVar(poa_sender, #buffer_value_poa_sender#)\r\n    SetVar(poa_recipient, #buffer_value_poa_recipient#)\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Details of Power of Attorney)\r\n            }\r\n        }\r\n        If(#poa_id# > 0){\r\n        }.Else{\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Sender Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PoaSender, Class: stl-input mt-sm, Disabled: \"true\", Value: #poa_sender#)\r\n                }\r\n            }\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Recipient Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PoaRecipient, Class: stl-input mt-sm, Disabled: \"true\", Value: #poa_recipient#)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Power of Attorney date [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                Div(row){\r\n                    Div(col-md-6){\r\n                        Div(input-group){\r\n                            If(#edit_date_start#){\r\n                                SetVar(DateStart_dt, DateTime(DateTime: #edit_date_start#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                                SetVar(DateStart_tm, DateTime(DateTime: #edit_date_start#, Format: \"HH:MI\", Location: #timezone#))\r\n                                Input(Name: DateStartD, Class: stl-input mt, Type: date, Value: #DateStart_dt#)\r\n                                Div(input-group-btn){\r\n                                    Input(Name: DateStartT, Class: stl-input mt, Type: time, Value: #DateStart_tm#).Style(\r\n                                        border-top-right-radius: 6px!important;\r\n                                        border-bottom-right-radius: 6px!important;\r\n                                    )\r\n                                }\r\n                            }.Else{\r\n                                Input(Name: DateStartD, Class: stl-input mt, Type: date)\r\n                                Div(input-group-btn){\r\n                                    Input(Name: DateStartT, Class: stl-input mt, Type: time, Value: \"00:00\").Style(\r\n                                        border-top-right-radius: 6px!important;\r\n                                        border-bottom-right-radius: 6px!important;\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(col-md-6){\r\n                        Div(input-group){\r\n                            If(#edit_date_end#){\r\n                                SetVar(DateEnd_dt, DateTime(DateTime: #edit_date_end#, Format: \"YYYY-MM-DD\", Location: #timezone#))\r\n                                SetVar(DateEnd_tm, DateTime(DateTime: #edit_date_end#, Format: \"HH:MI\", Location: #timezone#))\r\n                                Input(Name: DateEndD, Class: stl-input mt, Type: date, Value: #DateEnd_dt#)\r\n                                Div(input-group-btn){\r\n                                    Input(Name: DateEndT, Class: stl-input mt, Type: time, Value: #DateEnd_tm#).Style(\r\n                                        border-top-right-radius: 6px!important;\r\n                                        border-bottom-right-radius: 6px!important;\r\n                                    )\r\n                                }\r\n                            }.Else{\r\n                                Input(Name: DateEndD, Class: stl-input mt, Type: date)\r\n                                Div(input-group-btn){\r\n                                    Input(Name: DateEndT, Class: stl-input mt, Type: time, Value: \"00:00\").Style(\r\n                                        border-top-right-radius: 6px!important;\r\n                                        border-bottom-right-radius: 6px!important;\r\n                                    )\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Type of Power of Attorney Em(Class: fa fa-caret-down pl-sm))\r\n                If(#edit_flags_meeting# == 1){\r\n                    Input(Name: FlagMeeting, Type: \"checkbox\", Value: \"true\", Placeholder: \"For meeting\", Class: h4 ml-lg pt-sm)\r\n                }.Else(\r\n                    Input(Name: FlagMeeting, Type: \"checkbox\", Value: \"false\", Placeholder: \"For meeting\", Class: h4 ml-lg pt-sm)\r\n                )\r\n                If(#edit_flags_bidding# == 1){\r\n                    Input(Name: FlagBidding, Type: \"checkbox\", Value: \"true\", Placeholder: \"For bidding\", Class: h4 ml-lg pt-sm)\r\n                }.Else{\r\n                    Input(Name: FlagBidding, Type: \"checkbox\", Value: \"false\", Placeholder: \"For bidding\", Class: h4 ml-lg pt-sm)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12){\r\n                If(#poa_id# > 0){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Edit\", Contract: PoaEdit, Params: \"Step=3,Id=#poa_id#\", Page: poa_list)\r\n                }.ElseIf(#wizard#==new_member){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: PoaEdit, Params: \"CompanyId=#company_id#,Step=3\", Page: settings_sh_list)\r\n                }.ElseIf(#wizard#==new_agent){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: PoaEdit, Params: \"CompanyId=#company_id#,Step=3\", Page: poa_list)\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: PoaEdit, Params: \"CompanyId=#company_id#,Step=3\", Page: poa_list)\r\n                }\r\n                If(#wizard#==new_member){\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_sh_list)\r\n                }.ElseIf(#wizard#==new_agent){\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: poa_list)\r\n                }.Else{\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: poa_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: poa_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_edit_recipient",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#p1#){\r\n    SetVar(poa_id, #p1#)\r\n}.Else{\r\n    SetVar(p1, #poa_id#)\r\n}\r\n\r\nSetVar(this_page, poa_edit_recipient).(this_table, members).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Agent of Power of Attorney) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Form(){\r\n                Div(Class: pl-lg mr-lg){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            Account\r\n                        }.Style(\r\n                            && {\r\n                                width: 100px!important;\r\n                                border-radius: 6px;\r\n                                background-color: #fff;\r\n                                height: 40px!important;\r\n                                border: 1px solid #e0e0e0;\r\n                            }\r\n                        )\r\n                        Input(Name: search, Value: #search#, Class: input-search)\r\n                        Div(input-group-btn){\r\n                            If(#search#){\r\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"poa_id=#poa_id#,company_id=#company_id#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                            Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),poa_id=#poa_id#,company_id=#company_id#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        If(#search#){\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"account\": {\"$neq\": #guest_account#}, {\"member_name\": #search#}})\r\n        }.Else{\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"account\": {\"$neq\": #guest_account#}})\r\n        }\r\n\r\n         DBFind(#this_table#, src).Columns(\"account,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n            If(#poa_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right mt-lg, Contract: PoaEdit, Params: \"PoaRecipient=#account#,Id=#poa_id#,Step=2\", Page: poa_list){\r\n                    Div(txt-nowrap){\r\n                        Div(Class: text-primary){\r\n                            Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                        }.Style(\r\n                            display: inline-block;\r\n                        )\r\n                        Span(Class: btn-link text-bold pb-sm){\r\n                            Span(Class: text-primary h3 text-bold, Body: Select)\r\n                        }.Style(\r\n                            display: inline-block;\r\n                            vertical-align: top;\r\n                            padding-top: 4px;\r\n                            padding-left: 7px;\r\n                        )\r\n                    }\r\n                }\r\n            }.Else{\r\n                If(Or(#wizard#==new_member,#wizard#==new_agent)){\r\n                    Button(Class: btn-xs btn-link pull-right mt-lg, Page: poa_edit_sender, Contract: BufferPoa, PageParams: \"wizard=#wizard#,company_id=#company_id#\", Params: \"PoaRecipient=#account#\"){\r\n                        Div(txt-nowrap){\r\n                            Div(Class: text-primary){\r\n                                Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                            )\r\n                            Span(Class: btn-link text-bold pb-sm){\r\n                                Span(Class: text-primary h3 text-bold, Body: Select)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                                vertical-align: top;\r\n                                padding-top: 4px;\r\n                                padding-left: 7px;\r\n                            )\r\n                        }\r\n                    }.Popup(45, \"APLA ™\")\r\n                }.Else{\r\n                    Button(Class: btn-xs btn-link pull-right mt-lg, Contract: BufferPoa, Params: \"PoaRecipient=#account#\", Page: poa_edit_sender, PageParams: \"company_id=#company_id#\"){\r\n                        Div(txt-nowrap){\r\n                            Div(Class: text-primary){\r\n                                Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                            )\r\n                            Span(Class: btn-link text-bold pb-sm){\r\n                                Span(Class: text-primary h3 text-bold, Body: Select)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                                vertical-align: top;\r\n                                padding-top: 4px;\r\n                                padding-left: 7px;\r\n                            )\r\n                        }\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }.Custom(custom_id){\r\n            Div(h4 text-bold){\r\n                Div(){\r\n                    If(#image_id#>0){\r\n                        Image(Src: Binary().ById(#image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                    }.Else{\r\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                    }\r\n                    Span(){\r\n                        Div(Class: h4 m0 text-bold, Body: #member_name#)\r\n\r\n                        If(#member_info.is_company# == \"true\"){\r\n                            If(#member_info.company_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_name#)\r\n                            }\r\n                            If(#member_info.company_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_address#)\r\n                            }\r\n                        }.Else{\r\n                            If(#member_info.personal_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_name#)\r\n                            }\r\n                            If(#member_info.personal_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_address#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(display:flex; align-items:center;)\r\n            }.Style(\r\n                .fsize {\r\n                    padding-top: 4px;\r\n                    font-size: 15px;\r\n                }\r\n            )\r\n        }.Count(count)\r\n\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                Table(src, \"=custom_id,=check\")\r\n            }\r\n        }.Style(\r\n            min-height: 360px!important;\r\n            margin-top: -10px;\r\n            thead > tr > th {\r\n                border : none!important;\r\n            }\r\n            td {\r\n                border: none!important;\r\n            }\r\n        )\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            If(#wizard#==new_member){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: settings_sh_list)\r\n            }.ElseIf(#wizard#==new_agent){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: poa_list)\r\n            }.Else{\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: poa_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_edit_sender",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#p1#){\r\n    SetVar(poa_id, #p1#)\r\n}.Else{\r\n    SetVar(p1, #poa_id#)\r\n}\r\n\r\nIf(#p2#){\r\n    SetVar(agent_id, #p2#)\r\n}.Else{\r\n    SetVar(p2, #agent_id#)\r\n}\r\n\r\nSetVar(this_page, poa_edit_sender).(this_table, roles_participants).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Shareholder of Power of Attorney)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Form(){\r\n                Div(Class: pl-lg mr-lg){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            Account\r\n                        }.Style(\r\n                            && {\r\n                                width: 100px!important;\r\n                                border-radius: 6px;\r\n                                background-color: #fff;\r\n                                height: 40px!important;\r\n                                border: 1px solid #e0e0e0;\r\n                            }\r\n                        )\r\n                        Input(Name: search, Value: #search#, Class: input-search)\r\n                        Div(input-group-btn){\r\n                            If(#search#){\r\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"p1=#p1#,p2=#p2#,company_id=#company_id#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                            Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),p1=#p1#,p2=#p2#,company_id=#company_id#,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        If(#search#){\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"member->member_name\": #search#, \"deleted\": 0})\r\n        }.Else{\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"deleted\": 0})\r\n        }\r\n\r\n        DBFind(#this_table#, src).Where(#where#).Columns(\"id,member->account,date_created,date_deleted,deleted\").Order({\"id\": \"1\"}).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n            If(#poa_id# > 0){\r\n                SetVar(p_sender, #member.account#)\r\n                Button(Class: btn-xs btn-link pull-right mt-lg, Contract: PoaEdit, Params: \"PoaSender=#p_sender#,Id=#poa_id#,Step=1,CompanyId=#company_id#\", Page: poa_list){\r\n                    Div(txt-nowrap){\r\n                        Div(Class: text-primary){\r\n                            Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                        }.Style(\r\n                            display: inline-block;\r\n                        )\r\n                        Span(Class: btn-link text-bold pb-sm){\r\n                            Span(Class: text-primary h3 text-bold, Body: Select)\r\n                        }.Style(\r\n                            display: inline-block;\r\n                            vertical-align: top;\r\n                            padding-top: 4px;\r\n                            padding-left: 7px;\r\n                        )\r\n                    }\r\n                }\r\n            }.Else{\r\n                SetVar(p_sender, #member.account#)\r\n                If(Or(#wizard#==new_member,#wizard#==new_agent)){\r\n                    Button(Class: btn-xs btn-link pull-right mt-lg, Page: poa_edit_details, Contract: BufferPoa, PageParams: \"wizard=#wizard#,company_id=#company_id#\", Params: \"PoaSender=#p_sender#,PoaRecipient=#agent_id#\"){\r\n                        Div(txt-nowrap){\r\n                            Div(Class: text-primary){\r\n                                Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                            )\r\n                            Span(Class: btn-link text-bold pb-sm){\r\n                                Span(Class: text-primary h3 text-bold, Body: Select)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                                vertical-align: top;\r\n                                padding-top: 4px;\r\n                                padding-left: 7px;\r\n                            )\r\n                        }\r\n                    }.Popup(45, \"APLA ™\")\r\n                }.Else{\r\n                    Button(Class: btn-xs btn-link pull-right mt-lg, Contract: BufferPoa, Params: \"PoaSender=#p_sender#\", Page: poa_list){\r\n                        Div(txt-nowrap){\r\n                            Div(Class: text-primary){\r\n                                Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                            )\r\n                            Span(Class: btn-link text-bold pb-sm){\r\n                                Span(Class: text-primary h3 text-bold, Body: Select)\r\n                            }.Style(\r\n                                display: inline-block;\r\n                                vertical-align: top;\r\n                                padding-top: 4px;\r\n                                padding-left: 7px;\r\n                            )\r\n                        }\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }.Custom(custom_id){\r\n            Div(h4 text-bold ml){\r\n                Div(){\r\n                    DBFind(members).Where({\"account\": #member.account#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                    }.Else{\r\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                    }\r\n                    Span(){\r\n                        Div(Class: h4 m0 text-bold, Body: #m_member_name#)\r\n\r\n                        If(#m_member_info_is_company# == \"true\"){\r\n                            If(#m_member_info_company_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                            }\r\n                            If(#m_member_info_company_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                            }\r\n                        }.Else{\r\n                            If(#m_member_info_personal_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                            }\r\n                            If(#m_member_info_personal_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(display:flex; align-items:center;)\r\n            }.Style(\r\n                .fsize {\r\n                    padding-top: 4px;\r\n                    font-size: 15px;\r\n                }\r\n            )\r\n        }.Count(count)\r\n\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                Table(src, \"=custom_id,=check\")\r\n            }\r\n        }.Style(\r\n            min-height: 360px!important;\r\n            margin-top: -10px;\r\n            thead > tr > th {\r\n                border : none!important;\r\n            }\r\n            td {\r\n                border: none!important;\r\n            }\r\n        )\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            If(#wizard#==new_member){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: settings_sh_list)\r\n            }.ElseIf(#wizard#==new_agent){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: poa_list)\r\n            }.Else{\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: poa_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"@1notifications\").Columns(\"id,page_params,page_params->company_id\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(company_id,#notific_page_params_company_id#)\r\n}.Else(\r\n    DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n    SetVar(company_id, #buffer_value#)\r\n)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(w_filter, {\"$or\": [\"sender\": #account_id#, \"recipient\": #account_id#], \"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(w_filter, {\"$or\": [\"sender\": #account_id#, \"recipient\": #account_id#], \"company_id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->timezone\").Vars(c)\r\nIf(#c_address_timezone# != \"\"){\r\n    SetVar(timezone, #c_address_timezone#)\r\n}.Else{\r\n    SetVar(timezone, \"America/Danmarkshavn\")\r\n}\r\n\r\nIf(#search#){\r\n    SetVar(w_search, {\"$or\": [\"sender\": {\"$like\": \"#search#\"}, \"recipient\": {\"$like\": \"#search#\"}]})\r\n}\r\nSetVar(where, {\"$and\": [#w_filter#, #w_search#]})\r\n\r\nDBFind(poa_list, src).Columns(\"id,sender,recipient,date_start,date_end,date_created,status,file_id,approval_flags->sender,approval_flags->recipient,approval_flags->details,approval_flags->file,flags->meeting,flags->bidding\").Where(#where#).Order([{\"status\": 1, \"id\": 1}]).Custom(_sender){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #sender#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(s)\r\n        If(#s_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: SHAREHOLDER (COMPANY):)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: SHAREHOLDER (MEMBER):)\r\n        }\r\n        If(#status# != 4){\r\n            If(#junior_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: poa_edit_sender, PageParams: \"poa_id=#id#,company_id=#company_id#\"){\r\n                    Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n            If(#approval_flags.sender# != 1){\r\n                Span(Class: txt-review, Body: (under review))\r\n                If(#partner_access_id# > 0){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: poa_list, Contract: PoaApprov, Params: \"Id=#id#,Step=1\"){\r\n                        Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#s_image_id#>0){\r\n                Image(Src: Binary().ById(#s_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #s_member_name#)\r\n                If(#s_member_info_is_company# == \"true\"){\r\n                    If(#s_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #s_member_info_company_name#)\r\n                    }\r\n                    If(#s_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #s_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#s_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #s_member_info_personal_name#)\r\n                    }\r\n                    If(#s_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #s_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(_recipient){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #recipient#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(r)\r\n        If(#r_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: AGENT (COMPANY):)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: AGENT (MEMBER):)\r\n        }\r\n        If(#status# != 4){\r\n            If(#junior_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: poa_edit_recipient, PageParams: \"poa_id=#id#,company_id=#company_id#\"){\r\n                    Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n            If(#approval_flags.recipient# != 1){\r\n                Span(Class: txt-review, Body: (under review))\r\n                If(#partner_access_id# > 0){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: poa_list, Contract: PoaApprov, Params: \"Id=#id#,Step=2\"){\r\n                        Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#r_image_id#>0){\r\n                Image(Src: Binary().ById(#r_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #r_member_name#)\r\n                If(#r_member_info_is_company# == \"true\"){\r\n                    If(#r_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_company_name#)\r\n                    }\r\n                    If(#r_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#r_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_personal_name#)\r\n                    }\r\n                    If(#r_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_details){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DETAILS:)\r\n        If(#status# != 4){\r\n            If(#junior_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Page: poa_edit_details, PageParams: \"poa_id=#id#,company_id=#company_id#\"){\r\n                    Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n            If(#approval_flags.details# != 1){\r\n                Span(Class: txt-review, Body: (under review))\r\n                If(#partner_access_id# > 0){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: poa_list, Contract: PoaApprov, Params: \"Id=#id#,Step=3\"){\r\n                        Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    P(Class: txt-hidden p-20, Body: From: DateTime(DateTime: #date_start#, Format: \"DD.MM.YY HH:MI\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00, Body: Until: DateTime(DateTime: #date_end#, Format: \"DD.MM.YY HH:MI\", Location: #timezone#))\r\n    P(Class: txt-hidden p-00){\r\n        If(And(#flags.meeting#==0,#flags.bidding#==0)){\r\n            Type: [not set]\r\n        }\r\n        If(And(#flags.meeting#==1,#flags.bidding#==0)){\r\n            Type: For meeting\r\n        }\r\n        If(And(#flags.meeting#==0,#flags.bidding#==1)){\r\n            Type: For bidding\r\n        }\r\n        If(And(#flags.meeting#==1,#flags.bidding#==1)){\r\n            Type: For meeting and bidding\r\n        }\r\n    }\r\n}.Custom(_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    Div(text-center mt-xl){\r\n        If(#status# == 1){\r\n            P(Class: txt-hidden p-40 text-normal, Body: Issued)\r\n        }\r\n        If(#status# == 2){\r\n            P(Class: txt-hidden p-40 text-success, Body: Active)\r\n        }\r\n        If(#status# == 3){\r\n            P(Class: txt-hidden p-40 text-muted, Body: Expired)\r\n        }\r\n        If(#status# == 4){\r\n            P(Class: txt-hidden p-40 text-danger, Body: Revoked)\r\n        }\r\n    }\r\n}.Custom(_doc){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DOCUMENTS:)\r\n        If(#status# != 4){\r\n            If(And(#junior_access_id#>0)){\r\n                Button(Class: btn-xs btn-link pull-right, Page: poa_upload_doc, PageParams: \"company_id=#company_id#,poa_id=#id#\"){\r\n                    Span(Em(Class: icon-note)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n            If(#approval_flags.file# != 1){\r\n                Span(Class: txt-review, Body: (under review))\r\n                If(#partner_access_id# > 0){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: poa_list, Contract: PoaApprov, Params: \"Id=#id#,Step=4\"){\r\n                        Span(Em(Class: icon-like)).Style(font-size: 13px; display: inline-block; margin-top: -1px;)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(text-center mt-lg){\r\n        If(#file_id# > 0){\r\n            DBFind(binaries, src_binaries).Where({\"id\": #file_id#})\r\n            Table(src_binaries, \"=data\").Style(\r\n                margin-top:-20px;\r\n                thead {\r\n                    background-color: #ffffff;\r\n                }\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                tbody {\r\n                    background-color: #ffffff;\r\n                }\r\n                tbody > tr > td  {\r\n                    border: none!important;\r\n                    height: 10px!important;\r\n                    width: 10px!important;\r\n                }\r\n            )\r\n        }\r\n        If(#status# != 4){\r\n            If(And(#junior_access_id#>0,#file_id#==0)){\r\n                Button(Class: btn-xs btn-link mt-lg, Page: poa_upload_doc, PageParams: \"company_id=#company_id#,poa_id=#id#\"){\r\n                    Span(Em(Class: icon-cloud-upload)).Style(font-size: 20px;)\r\n                    Span(Class: ml-sm, Body: Upload).Style(font-size: 22px;)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n        }\r\n    }\r\n}.Custom(actions){\r\n    If(#status# != 4){\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right mt, Page: poa_list, Contract: PoaDel, Params: \"PoaId=#id#\"){\r\n                Div(mt-xl){\r\n                    Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n            }.Alert(Text: \"THIS ACTION IS IRREVERSIBLE! Do you really want to revoke this Power of Attorney?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n        }\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: poa_new_sender, PageParams: \"fnew=1,company_id=#company_id#\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: New PoA).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: co_securities_list){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                    Span(Body: Sharers)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            LinkPage(Page: co_securities_orders_list){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Body: Orders)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                            Span(Class: txt-hl-navigation){\r\n                                Span(Body: PoA).Style(text-decoration: underline;)\r\n                            }\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: poa_list)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: poa_list, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_sender,=_arrow,=_recipient,=_details,=_doc,=_status,=actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_new_sender",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Agent)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Public Key Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewPubkey, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: If you want to choose an existing member, then)\r\n                Button(Class: btn-link, Page: poa_edit_recipient, PageParams: \"fnew=1,company_id=#company_id#,wizard=new_agent\"){\r\n                    Span(Class: h4, Body: click here.)\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Page: settings_sh_edit, PageParams: \"wizard=new_agent\", Contract: NewUser).Popup(45, \"APLA ™\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: poa_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: poa_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_upload_doc",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Columns(\"name,id\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Upload Power of Attorney Documents) \r\n            }\r\n        }\r\n        If(#upload#==1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"poa_doc\", \"account\": #account_id#}).Vars(buffer)\r\n                    DBFind(binaries).Columns(\"name\").Where({\"id\": #buffer_value_binary_id#}).Vars(binaries)\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #binaries_name#, Disabled: \"true\")\r\n                }\r\n            }\r\n        }.Else{\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Input(Name: FileData, Type: file)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#upload#==1){\r\n                    Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: PoaEdit, Params: \"Id=#poa_id#,DOCBinaryId=#buffer_value_binary_id#,Step=4\", Page: poa_list)\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: poa_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=poa_doc\", Page: poa_upload_doc, PageParams: \"upload=1,company_id=#company_id#,poa_id=#poa_id#\").Popup(45, \"APLA ™\")\r\n                    Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: poa_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: poa_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "roles_participants_add",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Role Member)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Role Em(Class: fa fa-caret-down pl-sm))\r\n                DBFind(roles).Columns(\"role_name,role_type\").Where({\"id\": #r_id#}).Vars(r)\r\n                Input(Name: Amount, Class: stl-input mt-sm, Disabled: true, Value: #r_role_name#)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Account Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Member, Class: stl-input mt-sm, Disabled: true, Value: #participant_id#)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(Or(#wizard#==new_member,#wizard#==new_stakeholder)){\r\n                    If(#r_role_type# == 5){\r\n                        DBFind(\"co_shares_list\").Columns(\"id,deleted,company_id,approval_flags,approval_flags->total_approval\").Where({\"approval_flags->total_approval\":1,\"company_id\":#company_id#,\"deleted\":0}).Count(shares_count)\r\n                        If(#shares_count# > 0){\r\n                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: RolesAssign, Params: \"Rid=#r_id#,MemberAccount=#participant_id#\", Page: co_se_edit_number, PageParams: \"wizard=#wizard#,company_id=#company_id#,owner_id=#participant_id#,fnew=1\").Popup(45, \"APLA ™\")\r\n                        }.Else{\r\n                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: RolesAssign, Params: \"Rid=#r_id#,MemberAccount=#participant_id#\", Page: settings_sh_list)\r\n                        }\r\n                        Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_sh_list)\r\n                    }.ElseIf(#r_role_type# == 7){\r\n                        DBFind(\"roles_participants\").Columns(\"id,role->type,ecosystem,deleted\").Where({\"role->type\":5,\"deleted\":0,\"ecosystem\":#ecosystem_id#}).Count(sharholders_count)\r\n                        If(#sharholders_count# > 0){\r\n                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: RolesAssign, Params: \"Rid=#r_id#,MemberAccount=#participant_id#\", Page: poa_edit_sender, PageParams: \"wizard=#wizard#,company_id=#company_id#,agent_id=#participant_id#\").Popup(45, \"APLA ™\")\r\n                        }.Else{\r\n                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: RolesAssign, Params: \"Rid=#r_id#,MemberAccount=#participant_id#\", Page: settings_sh_list)\r\n                        }\r\n                    }.Else{\r\n                        Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: RolesAssign, Params: \"Rid=#r_id#,MemberAccount=#participant_id#\", Page: settings_sh_list)\r\n                        Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_sh_list)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: RolesAssign, Params: \"Rid=#r_id#,MemberAccount=#participant_id#\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#r_id#\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#r_id#\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#r_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "roles_participants_select",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nSetVar(this_page, roles_participants_select).(this_table, members).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Role Member)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Form(){\r\n                Div(Class: pl-lg mr-lg){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            Account\r\n                        }.Style(\r\n                            && {\r\n                                width: 100px!important;\r\n                                border-radius: 6px;\r\n                                background-color: #fff;\r\n                                height: 40px!important;\r\n                                border: 1px solid #e0e0e0;\r\n                            }\r\n                        )\r\n                        Input(Name: search, Value: #search#, Class: input-search)\r\n                        Div(input-group-btn){\r\n                            If(#search#){\r\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"company_id=#company_id#,p1=#p1#,p2=#p2#,back_page=#back_page#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                            Button(Class: btn bg-gray-lighter mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),company_id=#company_id#,p1=#p1#,p2=#p2#,back_page=#back_page#\", Body: Em(Class: fa fa-search)).Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        If(#search#){\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"account\": {\"$neq\": #guest_account#}, {\"member_name\": #search#}})\r\n        }.Else{\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"account\": {\"$neq\": #guest_account#}})\r\n        }\r\n\r\n        DBFind(#this_table#, src).Columns(\"account,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n            Button(Class: btn-xs btn-link pull-right mt-lg, Page: roles_participants_add, PageParams: \"company_id=#company_id#,r_id=#p1#,participant_id=#account#,back_page=#back_page#\"){\r\n                Div(txt-nowrap){\r\n                    Div(Class: text-primary){\r\n                        Span(Em(Class: fa fa-plus-square-o)).Style(font-size: 25px;)\r\n                    }.Style(\r\n                        display: inline-block;\r\n                    )\r\n                    Span(Class: btn-link text-bold pb-sm){\r\n                        Span(Class: text-primary h3 text-bold, Body: Select)\r\n                    }.Style(\r\n                        display: inline-block;\r\n                        vertical-align: top;\r\n                        padding-top: 4px;\r\n                        padding-left: 7px;\r\n                    )\r\n                }                \r\n            }.Popup(45, \"APLA ™\")\r\n        }.Custom(custom_id){\r\n            Div(h4 text-bold){\r\n                Div(){\r\n                    If(#image_id#>0){\r\n                        Image(Src: Binary().ById(#image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                    }.Else{\r\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                    }\r\n                    Span(){\r\n                        Div(Class: h4 m0 text-bold, Body: #member_name#)\r\n\r\n                        If(#member_info.is_company# == \"true\"){\r\n                            If(#member_info.company_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_name#)\r\n                            }\r\n                            If(#member_info.company_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_address#)\r\n                            }\r\n                        }.Else{\r\n                            If(#member_info.personal_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_name#)\r\n                            }\r\n                            If(#member_info.personal_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_address#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(display:flex; align-items:center;)\r\n            }.Style(\r\n                .fsize {\r\n                    padding-top: 4px;\r\n                    font-size: 15px;\r\n                }\r\n            )\r\n        }.Count(count)\r\n\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                Table(src, \"=custom_id,=check\")\r\n            }\r\n        }.Style(\r\n            min-height: 360px!important;\r\n            margin-top: -10px;\r\n            thead > tr > th {\r\n                border : none!important;\r\n            }\r\n            td {\r\n                border: none!important;\r\n            }\r\n        )\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#p1#,back_page=#back_page#\")\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "setting_messenges_send",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    If(#support_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Creating a New Inquiry)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Subject Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Subject, Class: stl-input mt-sm, Value: #request_details_nominal#)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Inquiry Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Details, Class: style-textarea mt-sm, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Create\", Page: settings_messenges, Contract: SettingSupportSend)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "setting_messenges_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(settings_support, src).Columns(\"id,role_recipient,date_created,status,sender,processing_info,processing_info->account_id,processing_info->date_start,inquiry_info,inquiry_info->subject\").WhereId(#inquiry_id#).Vars(inq_info)\r\nDBFind(\"roles\").WhereId(#inq_info_role_recipient#).Vars(rl)\r\nSetVar(OwnerIdInq, #inq_info_sender#)\r\n\r\nDBFind(settings_support_messanges, src).Columns(\"id,id_inquiry,sender,messange_text,messange_date\").Where({\"id_inquiry\":#inquiry_id#}).Custom(_sender){\r\n    DBFind(members).Where({\"account\": #sender#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n    If(#OwnerIdInq# == #sender#){\r\n        Div(row){\r\n            Div(Class: col-xs-12 pt-lg ){\r\n                Div(Class: pl-lg pr-lg){\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(margin height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-top: 5px;)\r\n                    }.Else{\r\n                        Span(Em(Class: mt fa icon-user fa-4x))\r\n                    }\r\n                }\r\n                Div(Class: bg-gray-lighter pl-xl pr-xl){\r\n                    Span(Class: text-left pt){\r\n                        P(Class: m0 text-bold pb, Body: #m_member_name# Em(Class: pl text-muted, Body: DateTime(DateTime: #messange_date#, Format: \"HH:MI DD.MM.YYYY\")))\r\n                        P(Class: m0 h4 pb-lg){\r\n                            #messange_text#\r\n                        }.Style(\r\n                            white-space: normal;\r\n                        )\r\n                    }.Style(\r\n                        white-space: normal;\r\n                        align-self: center;\r\n                    )\r\n                }.Style(\r\n                    display: flex;\r\n                    min-height: 60px;\r\n                    min-width: 400px;\r\n                    white-space: normal;\r\n                    border-top-right-radius: 20px;\r\n                    border-bottom-left-radius: 20px;\r\n                    border-bottom-right-radius: 20px;\r\n                )\r\n            }.Style(\r\n                display: flex;\r\n                white-space: nowrap;\r\n            )\r\n        }\r\n    }.Else{\r\n        Div(row){\r\n            Div(Class: col-xs-12 pt-lg ){\r\n                Div(Class: pl-lg pr-lg){\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(margin height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-top: 5px;)\r\n                    }.Else{\r\n                        Span(Em(Class: mt fa icon-user fa-4x))\r\n                    }\r\n                }\r\n                Div(Class: bg-gray-lighter pl-xl pr-xl){\r\n                    Span(Class: text-left pt){\r\n                        P(Class: m0 text-bold pb, Body: #m_member_name# Em(Class: pl text-muted, Body: DateTime(DateTime: #messange_date#, Format: \"HH:MI DD.MM.YYYY\")))\r\n                        P(Class: m0 h4 pb-lg){\r\n                            #messange_text#\r\n                        }.Style(\r\n                            white-space: normal;\r\n                        )\r\n                    }.Style(\r\n                        white-space: normal;\r\n                        align-self: center;\r\n                    )\r\n                }.Style(\r\n                    display: flex;\r\n                    min-height: 60px;\r\n                    min-width: 400px;\r\n                    white-space: normal;\r\n                    border-top-left-radius: 20px;\r\n                    border-bottom-left-radius: 20px;\r\n                    border-bottom-right-radius: 20px;\r\n                )\r\n            }.Style(\r\n                display: flex;\r\n                flex-direction: row-reverse;\r\n                white-space: nowrap;\r\n            )\r\n        }\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Home page\r\n            }\r\n            If(And(#inq_info_status# == 0,#inq_info_role_recipient# == #role_id#)){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_messenges_roles, PageParams: \"inquiry_id=#inquiry_id#\"){\r\n                        Span(Em(Class: icon-action-redo)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Forward).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: default_page){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Home page)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: settings_messenges){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Support)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: View)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_sender\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 100px;\r\n                                    }\r\n                                    overflow: hidden;\r\n                                    td {\r\n                                        border: none!important;\r\n                                    }\r\n                                )\r\n                            }\r\n                        }\r\n                        Div(mt-lg){\r\n                            If(#inq_info_status# != 2){\r\n                                Div(){\r\n                                    If(And(#inq_info_processing_info#==\"\",#inq_info_role_recipient#==#role_id#)){\r\n                                        Div(pt pl-lg pr-lg){\r\n                                            Input(Name: Details, Class: style-textarea mb-lg, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 5em;)\r\n                                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Page: setting_messenges_view, Contract: SettingSupportMessSend, PageParams:\"inquiry_id=#inquiry_id#\",Params: \"InquiryId=#inquiry_id#,Rid=#role_id#\")\r\n                                            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n                                        }\r\n                                    }.ElseIf(Or(#inq_info_processing_info_account_id#==#account_id#,#OwnerIdInq#==#account_id#)){\r\n                                        Div(pt pl-lg pr-lg){\r\n                                            Input(Name: Details, Class: style-textarea mb-lg, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 5em;)\r\n                                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Page: setting_messenges_view, Contract: SettingSupportMessSend, PageParams:\"inquiry_id=#inquiry_id#\",Params: \"InquiryId=#inquiry_id#,Rid=#role_id#\")\r\n                                            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n                                            If(#OwnerIdInq# == #account_id#){\r\n                                                Button(Class: btn btn-default pull-left btn-grey-max mr-sm, Body: \"Close Inquire\", Contract:SettingSupportMessSend, Page: settings_messenges, Params: \"Action=close,InquiryId=#inquiry_id#\")\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.Style(\r\n                            height: 140px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_editing_view_code",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(settings_entity_edit, src).Columns(\"id,value\").Where({\"id\": #subject_id#}).Vars(\"res\")\r\nDiv(){\r\n    Div(list-group-item ml-sm mr-sm mt-sm){\r\n        Div(table){\r\n            ForList(src){\r\n                Div(){\r\n                    Div(){\r\n                        VarAsIs(value_as_is, #res_value#)\r\n                        Code(#value_as_is#)\r\n                    }\r\n                }.Style(\r\n                    width:700px;\r\n                    word-wrap: break-word;\r\n                )\r\n            }\r\n        }\r\n    }\r\n    Div(text-center mt-lg){\r\n        Button(Page: settings_entity_editing_view, PageParams: \"subject_id=#subject_id#\", Class: btn btn-default btn-grey, Body: Back)\r\n    }\r\n}.Style(\r\n    .table {\r\n        display: table;\r\n        margin-bottom: 10px;\r\n    }\r\n    .table > div:not(.table__body) {\r\n        display: table-row-group;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_entity_editing",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#role_id# > 0){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Editing the Application Entity)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: xreg_editing_entity, Source: src_edit_form)\r\n                Span(Class: text-muted h4, Body: Type Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: EntityType, Class: stl-input mt-sm, Source: src_edit_form, NameColumn: name, ValueColumn: name)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: EntityName, Class: stl-input mt-sm)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Conditions Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Conditions, Class: stl-input mt-sm)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: SettingEntityEdit, Params: \"Step=1\", Page: settings_entity_editing_code, PageParams: \"entity_conditions=Val(Conditions),entity_name=Val(EntityName),entity_type=Val(EntityType)\").Popup(45, \"APLA ™\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_entity_editing_list)\r\n                Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                    Span(Class: text-muted mr-lg h4, Body: Step)\r\n                    Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    Em(Class: fa fa-circle-o mr-sm)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: This information is hidden for your role) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_entity_editing_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_entity_editing_code",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    If(#role_id# > 0){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: #entity_type# Application)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: EntityName, Class: stl-input mt-sm, Disabled: \"true\", Value: #entity_name#)\r\n            }\r\n        }\r\n        If(#entity_conditions# != \"\"){\r\n            Div(row mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Conditions Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: Conditions, Class: stl-input mt-sm, Disabled: \"true\", Value: #entity_conditions#)\r\n                }\r\n            }\r\n        }\r\n        If(Or(#entity_type# == \"New Page\",#entity_type# == \"Edit Page\")) {\r\n            Div(row mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(\"menu\", scr_menu).Where({\"ecosystem\":#ecosystem_id#})\r\n                    Span(Class: text-muted h4, Body: Menu Em(Class: fa fa-caret-down pl-sm))\r\n                    Select(Name: SelectMenu, Class: stl-input mt-sm, Source: scr_menu, NameColumn: name, ValueColumn: name)\r\n                }\r\n            }\r\n        }\r\n        If(Or(#entity_type# == \"New Page\",#entity_type# == \"New Block\",#entity_type# == \"New AppParam\",#entity_type# == \"New Contract\")) {\r\n            Div(row mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(\"applications\", scr_app).Where({\"ecosystem\":#ecosystem_id#})\r\n                    Span(Class: text-muted h4, Body: Application Em(Class: fa fa-caret-down pl-sm))\r\n                    Select(Name: SelectApp, Class: stl-input mt-sm, Source: scr_app, NameColumn: name, ValueColumn: id)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Value Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: CodeValue, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Page: settings_entity_editing_list, Contract: SettingEntityEdit, Params: \"EntityType=#entity_type#\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_entity_editing_list)\r\n                Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                    Span(Class: text-muted mr-lg h4, Body: Step)\r\n                    Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    Em(Class: fa fa-dot-circle-o mr-sm)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: This information is hidden for your role) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_entity_editing_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_entity_editing_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"System\"}).Vars(application)\r\nSetVar(role_developer_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_developer))\r\nSetVar(role_admin_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_admin))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_developer_id#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(developer_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_admin_id#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(admin_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\n\r\nIf(Or(#filter_role_type# == 3,#filter_role_type# == 8)){\r\n    SetVar(where, {})\r\n}.Else{\r\n    SetVar(where, {\"id\": 0})\r\n}\r\n\r\nDBFind(settings_entity_edit, src).Columns(\"id,date_created,name,conditions,type,approval_flags,approval_flags->decision,sender\").Order({\"id\": -1}).Where(#where#).Custom(_creator){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #sender#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: SENDER:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: TYPE:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Type: #type#)\r\n    P(Class: txt-hidden p-00, Body: Name: #name#)\r\n}.Custom(_conditions){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: CONDITIONS:)\r\n    }\r\n    If(#conditions# != NULL){\r\n        P(Class: txt-hidden p-20, Body: Conditions: #conditions#)\r\n    }.Else(\r\n        P(Class: txt-hidden p-20, Body: Conditions: [without changes])\r\n    )\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n}.Custom(_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    Div(text-center){\r\n        If(#approval_flags.decision# == \"\"){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-warning, Body: Waiting))\r\n        }\r\n        If(#approval_flags.decision# == 1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-success, Body: Accept))\r\n        }\r\n        If(#approval_flags.decision# == -1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-danger, Body: Reject))\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: settings_entity_editing_view, PageParams: \"subject_id=#id#\", Body: View)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Control Panel\r\n            }\r\n            If(#filter_role_type# == 8){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_entity_editing){\r\n                        Span(Em(Class: icon-note)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Editing).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }  \r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            If(Or(#developer_access_id#>0,#admin_access_id#>0)){\r\n                                LinkPage(Page: settings_sh_list){\r\n                                    Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                        Span(Body: Users)\r\n                                    }\r\n                                }\r\n                                Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                Span(Class: txt-hl-navigation){\r\n                                    Span(Body: System roles).Style(text-decoration: underline;)\r\n                                }\r\n                                Em(Class: ml-lg mr txt-hl-navigation, Body: |)\r\n                                Button(Class: btn-xs btn-link, Page: settings_nodes, PageParams: \"back_page=settings_entity_editing_list\"){\r\n                                    Span(Class: txt-hl-navigation-blue){\r\n                                        Span(Body: Node list)\r\n                                    }\r\n                                }.Popup(45, \"APLA ™\")\r\n                            }.Else{\r\n                                If(#filter_role_type#==3){\r\n                                    LinkPage(Page: settings_sh_list){\r\n                                        Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                            Span(Body: Users)\r\n                                        }\r\n                                    }\r\n                                    Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                    Span(Class: txt-hl-navigation){\r\n                                        Span(Body: Vendor changes).Style(text-decoration: underline;)\r\n                                    }\r\n                                    Em(Class: ml-lg mr txt-hl-navigation, Body: |)\r\n                                    Button(Class: btn-xs btn-link, Page: settings_questions, PageParams: \"back_page=settings_entity_editing_list\"){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Questions)\r\n                                        }\r\n                                    }.Popup(45, \"APLA ™\")\r\n                                }\r\n                                If(#filter_role_type#==8){\r\n                                    LinkPage(Page: settings_sh_list){\r\n                                        Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                            Span(Body: Users)\r\n                                        }\r\n                                    }\r\n                                    Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                    Span(Class: txt-hl-navigation){\r\n                                        Span(Body: Vendor changes).Style(text-decoration: underline;)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src,Columns: \"=_creator,=_info,=_conditions,=_status\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_entity_editing_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"notifications\").Columns(\"id,page_params,page_params->subject_id,closed\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(subject_id,#notific_page_params_subject_id#)\r\n    SetVar(where,{\"id\": #subject_id#})\r\n}\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type,role->name\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(Or(#filter_role_type# == 3,#filter_role_type# == 8)){\r\n    DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(\"app\")\r\n    SetVar(role_law_firm_junior, AppParam(App: #app_id#, Name: \"role_law_firm_junior\"))\r\n    If(#role_law_firm_junior# == #role_id#){\r\n        SetVar(sign_access, 1)\r\n    }\r\n    SetVar(where, {\"id\": #subject_id#})\r\n}.Else{\r\n    SetVar(where, {\"id\": 0})\r\n}\r\nDBFind(settings_entity_edit).Columns(\"id,date_created,name,value,conditions,approval_flags,approval_flags->sign_time,approval_flags->sign,approval_flags->decision,type,sender,type,info,info->app_id\").Where(#where#).Vars(edit_object)\r\n\r\nDBFind(members).Where({\"account\": #edit_object_sender#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(view_owner)\r\n\r\nForm(){\r\n    Div(row mt-xl){\r\n        Div(col-xs-10 col-xs-offset-1 text-center){\r\n            Div(panel panel-primary form-min-width){\r\n                Div(panel-body m0){\r\n                    Div(bb pb){\r\n                        Div(pl-lg pb pt-sm text-center preview-nowrap){\r\n                            Span(Class: h2 text-bold text-black, Body: #edit_object_type# Information)\r\n                        }\r\n                    }\r\n                    Div(mt-sm){\r\n                        Div(){\r\n                            Div(row){\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-right){\r\n                                        Span(Class: text-black h4, Body: Strong(Name))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-2 text-center){\r\n                                    Div(mt){\r\n                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-5){\r\n                                    Div(pull-left mt){\r\n                                        Button(Class: btn-link text-primary h4 p0 m0, Body:#edit_object_name#, Page: settings_editing_view_code, PageParams: \"subject_id=#subject_id#\").Style(border:none;).Popup(45, \"APLA ™\")\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row){\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-right){\r\n                                        Span(Class: text-black h4, Body: Strong(Type))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-2 text-center){\r\n                                    Div(mt){\r\n                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-left){\r\n                                        Span(Class: text-black h4, Body: #edit_object_type#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            If(#edit_object_conditions# != \"\"){\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Conditions))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: #edit_object_conditions#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row){\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-right){\r\n                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Created))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-2 text-center){\r\n                                    Div(mt){\r\n                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-left){\r\n                                        Span(Class: text-black h4, Body: DateTime(DateTime: #edit_object_date_created#, Format: DD.MM.YYYY))\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row){\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-right){\r\n                                        Span(Class: text-black h4, Body: Strong(Status))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-2 text-center){\r\n                                    Div(mt){\r\n                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-left){\r\n                                        If(#edit_object_approval_flags_decision# == \"\"){\r\n                                            Span(Class: h4 text-warning, Body: Waiting)\r\n                                        }\r\n                                        If(#edit_object_approval_flags_decision# == 1){\r\n                                            Span(Class: h4 text-success, Body: Accept)\r\n                                        }\r\n                                        If(#edit_object_approval_flags_decision# == -1){\r\n                                            Span(Class: h4 text-danger, Body: Reject)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mb-xl){\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-right){\r\n                                        Span(Class: text-black h4, Body: Strong(Sender))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-2 text-center){\r\n                                    Div(mt){\r\n                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                    }\r\n                                }\r\n                                Div(col-xs-5){\r\n                                    Div(mt pull-left){\r\n                                        Span(Class: h4 m0 text-bold, Body: #view_owner_member_name#)\r\n                                    }\r\n                                }\r\n                            }\r\n                            If(#edit_object_approval_flags_decision# != \"\"){\r\n                                Div(row preview){\r\n                                    Div(row){\r\n                                        Div(col-xs-5){\r\n                                            Div(mt-lg pull-right){\r\n                                                Span(Class: text-black h4, Body: Strong(Signature of the Law Firm: Junior Lawyer))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-1 text-center)\r\n                                        Div(col-xs-6){\r\n                                            Div(mt-lg pull-left){\r\n                                                Span(Class: text-black h5 ml-lg, Body: #edit_object_approval_flags_sign#)\r\n                                                P(Class: h5 m0, Body: Date: DateTime(DateTime: #edit_object_approval_flags_sign_time#, Format: HH:MI DD.MM.YYYY))\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                        }\r\n                    }.Style(align-items:center;)\r\n                    Div(mt-lg bb)\r\n                    If(And(#edit_object_approval_flags_decision# == \"\",#sign_access# == 1)){\r\n                        Div(pb pt-lg){\r\n                            Div(row pt){\r\n                                If(#edit_object_type# == \"Edit Contract\"){\r\n                                    DBFind(\"contracts\").Where({\"name\":#edit_object_name#,\"ecosystem\":#ecosystem_id#}).Vars(cnt)\r\n                                    Div(col-xs-2)\r\n                                    Div(col-xs-2 text-center){\r\n                                        Button(Class: btn btn-default-reject text-bold, Body: Reject, Contract: EditContract, Params: \"Action=Reject,Id=#cnt_id#,EditObjectId=#subject_id#,Value=#edit_object_value#,Conditions=#edit_object_conditions#\", Page: settings_entity_editing_view, PageParams: \"NotificId=#notific_id#,subject_id=#subject_id#\")\r\n                                    }\r\n                                    Div(col-xs-4)\r\n                                    Div(col-xs-2 text-center){\r\n                                        Button(Class: btn btn-default-accept text-bold, Body: Accept, Contract: EditContract, Params: \"Action=Accept,Id=#cnt_id#,EditObjectId=#subject_id#,Value=#edit_object_value#,Conditions=#edit_object_conditions#\", Page: settings_entity_editing_view, PageParams: \"NotificId=#notific_id#,subject_id=#subject_id#\")\r\n                                    }\r\n                                    Div(col-xs-2)\r\n                                }.ElseIf(#edit_object_type# == \"New Contract\"){\r\n                                    Div(col-xs-2)\r\n                                    Div(col-xs-2 text-center){\r\n                                        Button(Class: btn btn-default-reject text-bold, Body: Reject, Contract: NewContract, Params: \"EditObjectId=#subject_id#,Action=Reject,ApplicationId=#edit_object_info_app_id#,Value=#edit_object_value#,Conditions=#edit_object_conditions#\", Page: settings_entity_editing_view, PageParams: \"NotificId=#notific_id#,subject_id=#subject_id#\")\r\n                                    }\r\n                                    Div(col-xs-4)\r\n                                    Div(col-xs-2 text-center){\r\n                                        Button(Class: btn btn-default-accept text-bold, Body: Accept, Contract: NewContract, Params: \"EditObjectId=#subject_id#,Action=Accept,ApplicationId=#edit_object_info_app_id#,Conditions=#edit_object_conditions#,Value=#edit_object_value#,Conditions=#edit_object_conditions#\", Page: settings_entity_editing_view, PageParams: \"NotificId=#notific_id#,subject_id=#subject_id#\")\r\n                                    }\r\n                                    Div(col-xs-2)\r\n                                }.Else{\r\n                                    Div(col-xs-2)\r\n                                    Div(col-xs-2 text-center){\r\n                                        Button(Class: btn btn-default-reject text-bold, Body: Reject, Contract: SettingEntityEditSign, Params: \"Action=Reject,Id=#subject_id#\", Page: settings_entity_editing_view, PageParams: \"subject_id=#subject_id#\")  \r\n                                    }\r\n                                    Div(col-xs-4)\r\n                                    Div(col-xs-2 text-center){ \r\n                                        Button(Class: btn btn-default-accept text-bold, Body: Accept, Contract: SettingEntityEditSign, Params: \"Action=Accept,Id=#subject_id#\", Page: settings_entity_editing_view, PageParams: \"subject_id=#subject_id#\") \r\n                                    }\r\n                                    Div(col-xs-2)\r\n                                }\r\n                            }\r\n                        }  \r\n                    }.Else{ \r\n                        Div(pt-lg){    \r\n                            Div(text-center){\r\n                                Button(Class: btn btn-default btn-grey, Body: Back, Page: settings_entity_editing_list)\r\n                            }   \r\n                        } \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_messenges",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(support_access, 0)\r\n    SetVar(where, {\"role_recipient\": #role_id#})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(support_access, 1)\r\n    SetVar(where, {\"sender\": #account_id#})\r\n}.Else{\r\n    SetVar(support_access, 0)\r\n    SetVar(where, {\"id\": 0})\r\n}\r\n\r\nDBFind(settings_support, src).Columns(\"id,role_recipient,date_created,status,date_closed,sender,processing_info,processing_info->account_id,processing_info->date_start,inquiry_info,inquiry_info->subject\").Where(#where#).Custom(_creator){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #sender#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: SENDER:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_recipient){\r\n    Div(txt-nowrap){\r\n        If(#processing_info# != NULL){\r\n            DBFind(members).Where({\"account\": #processing_info.account#, \"ecosystem\": #ecosystem_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(r)\r\n        }\r\n        Span(Class: txt-table-hl, Body: RECIPIENT:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(And(#processing_info# != NULL,#r_image_id#>0)){\r\n                Image(Src: Binary().ById(#r_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                DBFind(\"roles\").WhereId(#role_recipient#).Vars(rl)\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #rl_role_name#)\r\n                If(#processing_info# != NULL){\r\n                    If(#r_member_info_is_company# == \"true\"){\r\n                        If(#r_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_company_name#)\r\n                        }\r\n                        If(#r_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#r_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_personal_name#)\r\n                        }\r\n                        If(#r_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Subject: #inquiry_info.subject#)\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    If(#processing_info.date_start# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Started: DateTime(DateTime:#processing_info.date_start#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    }\r\n    If(#date_closed# != 0){\r\n        P(Class: txt-hidden p-00, Body: Closed: DateTime(DateTime:#date_closed#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    }\r\n}.Custom(_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    Div(text-center){\r\n        If(#status# == 0){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-warning, Body: Waiting))\r\n        }\r\n        If(#status# == 1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-primary, Body: In progress))\r\n        }\r\n        If(#status# == 2){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-success, Body: Done))\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: setting_messenges_view, PageParams: \"inquiry_id=#id#\", Body: View inquiry)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Home page\r\n            }\r\n            If(#support_access# == 1){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: setting_messenges_send, PageParams: \"support_access=1\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Add).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: default_page){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Home page)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: Support)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src,Columns: \"=_creator,=_custom_arrow,=_recipient,=_info,=_status\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_messenges_roles",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles\", src_roles).Where({\"ecosystem\": #ecosystem_id#, \"deleted\": 0, \"company_id\": 0}).Columns(\"role_name,id\").Limit(100)\r\nDBFind(\"settings_support\").WhereId(#inquiry_id#).Vars(inq)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(And(#inq_role_recipient# == #role_id#,#inq_status# == 0)){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Changing the Role of the Recipient)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Role Recipient Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleForwarding, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    DBFind(\"roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #inq_role_recipient#}).Columns(\"role_name\").Vars(r)\r\n                    Span(Body: Current value: #r_role_name#)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Contract: SettingSupportMessSend, Page: settings_messenges, Params: \"Rid=#role_id#,Action=forwarding,InquiryId=#inquiry_id#\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: setting_messenges_view, PageParams: \"inquiry_id=#inquiry_id#\")\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                If(#inq_status# > 0){\r\n                    Span(Class: h2 text-bold text-black, Body: The inquiry is already being processed)\r\n                }.Else{\r\n                    Span(Class: h2 text-bold text-black, Body: This information is not hidden for your role)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: setting_messenges_view, PageParams: \"inquiry_id=#inquiry_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_nodes",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    If(#role_id# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Node list)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: List of all network nodes Em(Class: fa fa-caret-down pl-sm))\r\n                SetVar(full_nodes, SysParam(\"full_nodes\"))\r\n                Input(Name: Name, Type: hidden, Value: \"full_nodes\")\r\n                Input(Name: Value, Class: style-textarea mt-sm, Type: textarea, Value: #full_nodes#).Style(resize: vertical; min-height: 30em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Page: #back_page#, Contract: UpdateSysParam)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h3 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_questions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\r\nDBFind(app_params).Columns(\"id,value\").Where({\"app_id\": #application_id#, \"ecosystem\": #ecosystem_id#, \"name\": \"voting_questions\"}).Vars(p)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Questions)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Input(Name: Id, Type: hidden, Value: #p_id#)\r\n                Span(Class: text-muted h4, Body: List of typical voting questions Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Value, Class: style-textarea mt-sm, Type: textarea, Value: #p_value#).Style(resize: vertical; min-height: 30em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Page: #back_page#, Contract: EditAppParam)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h3 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_roles_config",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles\", src_roles).Where({\"ecosystem\": #ecosystem_id#, \"deleted\": 0, \"company_id\": 0}).Columns(\"role_name,id\").Limit(100)\r\nDBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(\"app\")\r\nSetVar(role_law_firm_junior, AppParam(App: #app_id#, Name: \"role_law_firm_junior\"))\r\nSetVar(role_law_firm_partner, AppParam(App: #app_id#, Name: \"role_law_firm_partner\"))\r\nSetVar(role_vendor, AppParam(App: #app_id#, Name: \"role_vendor\"))\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#role_id# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Settings for roles)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Law Firm: Junior Lawyer Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleLawFirmJunior, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_law_firm_junior#)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    If(#role_law_firm_junior# > 0){\r\n                        DBFind(\"roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_law_firm_junior#}).Columns(\"role_name\").Vars(r)\r\n                        Span(\"Current value:\" #r_role_name#)\r\n                    }.Else{\r\n                        Span(\"Current value: Role is not set\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Law Firm: Partner Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleLawFirmPartner, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_law_firm_partner#)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    If(#role_law_firm_partner# > 0){\r\n                        DBFind(\"roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_law_firm_partner#}).Columns(\"role_name\").Vars(r)\r\n                        Span(\"Current value:\" #r_role_name#)\r\n                    }.Else{\r\n                        Span(\"Current value: Role is not set\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Vendor Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleVendor, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_vendor#)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    If(#role_law_firm_partner# > 0){\r\n                        DBFind(\"roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_vendor#}).Columns(\"role_name\").Vars(r)\r\n                        Span(\"Current value:\" #r_role_name#)\r\n                    }.Else{\r\n                        Span(\"Current value: Role is not set\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompaniesRegistrySettingsRoles, Page: settings_roles_list)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_roles_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: h2 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_roles_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_roles_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"System\"}).Vars(application)\r\nSetVar(role_developer_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_developer))\r\nSetVar(role_admin_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_admin))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_developer_id#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(developer_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_admin_id#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(admin_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": 0})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(roles, src).Columns(\"id,role_name,date_created,role_type\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_name){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ROLE:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            LinkPage(Class: preview-nowrap text-primary h5 text-bold, Page: settings_roles_participants, PageParams: \"r_id=#id#\"){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: mr fa icon-settings fa-3x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: #role_name#)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 7px;\r\n                    padding-left: 4px;\r\n                )\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(custom_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFORMATION:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Type: AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #role_type#))\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Control Panel\r\n            }\r\n            If(#role_id# == 1){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_roles_config){\r\n                        Span(Em(Class: icon-wrench)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Config).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            If(Or(#developer_access_id#>0,#admin_access_id#>0)){\r\n                                LinkPage(Page: settings_sh_list){\r\n                                    Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                        Span(Body: Users)\r\n                                    }\r\n                                }\r\n                                Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                Span(Class: txt-hl-navigation){\r\n                                    Span(Body: System roles).Style(text-decoration: underline;)\r\n                                }\r\n                                Em(Class: ml-lg mr txt-hl-navigation, Body: |)\r\n                                Button(Class: btn-xs btn-link, Page: settings_nodes, PageParams: \"back_page=settings_roles_list\"){\r\n                                    Span(Class: txt-hl-navigation-blue){\r\n                                        Span(Body: Node list)\r\n                                    }\r\n                                }.Popup(45, \"APLA ™\")\r\n                            }.Else{\r\n                                If(#filter_role_type#==3){\r\n                                    Span(Class: txt-hl-navigation ml-lg){\r\n                                        Span(Body: Users).Style(text-decoration: underline;)\r\n                                    }\r\n                                    Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                    LinkPage(Page: settings_entity_editing_list){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Vendor changes)\r\n                                        }\r\n                                    }\r\n                                    Em(Class: ml-lg mr txt-hl-navigation, Body: |)\r\n                                    Button(Class: btn-xs btn-link, Page: settings_questions, PageParams: \"back_page=settings_roles_list\"){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Questions)\r\n                                        }\r\n                                    }.Popup(45, \"APLA ™\")\r\n                                }\r\n                                If(#filter_role_type#==8){\r\n                                    Span(Class: txt-hl-navigation ml-lg){\r\n                                        Span(Body: Users).Style(text-decoration: underline;)\r\n                                    }\r\n                                    Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                    LinkPage(Page: settings_entity_editing_list){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Vendor changes)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_name,=custom_info\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 130px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_roles_participants",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"id,role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"role->id\": #r_id#, \"deleted\": 0})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\nDBFind(roles).Columns(\"role_name\").Where({\"id\": #r_id#}).Vars(r)\r\nIf(#r_role_name# != \"\"){\r\n    DBFind(roles_participants, src).Columns(\"id,member->account,member->member_name,member->image_id,appointed->account,appointed->member_name,appointed->voting_id,appointed->voting_name,date_created,date_deleted,deleted\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_id){\r\n        Div(txt-nowrap){\r\n            DBFind(members).Where({\"account\": #member.account#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            If(#m_member_info_is_company# == \"true\"){\r\n                Span(Class: txt-table-hl, Body: COMPANY:)\r\n            }.Else{\r\n                Span(Class: txt-table-hl, Body: MEMBER:)\r\n            }\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold preview-nowrap, Body: #m_member_name#)\r\n\r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }.Custom(custom_info){\r\n        Div(txt-nowrap){\r\n            Span(Class: txt-table-hl, Body: INFORMATION:)\r\n        }\r\n        P(Class: txt-hidden p-20, Body: Status: Active)\r\n        P(Class: txt-hidden p-00, Body: Appointed: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    }.Custom(check){\r\n        If(#role_id# == 1){\r\n            Button(Class: btn-xs btn-link pull-right mt, Page: settings_roles_participants, PageParams: \"r_id=#r_id#\", Contract: RolesUnassign, Params: \"RowId=#id#\"){\r\n                Div(mt-xl){\r\n                    Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n            }.Alert(Text: \"Do you really want to delete this member?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n        }\r\n    }.Count(count)\r\n}\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Control Panel\r\n            }\r\n            If(#role_id# == 1){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: roles_participants_select, PageParams: \"fnew=1,p1=#r_id#,back_page=settings_roles_participants\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Add).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: settings_roles_list){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: System roles)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: #r_role_name#)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_id,=custom_info,=check\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_add",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New User)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Public Key Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewPubkey, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Page: settings_sh_edit, PageParams: \"wizard=new_member\", Contract: NewUser).Popup(45, \"APLA ™\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_change_key",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Change Key for Account)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Account Em(Class: fa fa-caret-down pl-sm))\r\n                DBFind(roles_participants, src_account).Where({\"role->type\": {\"$in\": [4,5,6,7]}, \"ecosystem\": #ecosystem_id#, \"deleted\": 0}).Columns(\"member->account\")\r\n                Select(Name: Account, Class: stl-input mt-sm, Source: src_account, NameColumn: member.account, ValueColumn: member.account)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Public Key Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewPubkey, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Change\", Page: settings_sh_list, Contract: NewUser)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\nIf(Or(#wizard#==new_member,#wizard#==new_stakeholder,#wizard#==new_agent)){\r\n    DBFind(\"buffer_data\").Columns(\"value->add_member\").Where({\"key\":\"new_user_reg\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(wiz)\r\n    SetVar(member_account,#wiz_value_add_member#)\r\n}\r\nForm(mr-lg){\r\n    If(#filter_access# == 1){\r\n        DBFind(applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n        SetVar(member_image_id, 0)\r\n        DBFind(members).Where({\"ecosystem\": #ecosystem_id#, \"account\": #member_account#}).Columns(\"id,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(member)\r\n        DBFind(buffer_data).Columns(\"value->id,value->image_id,value->phone,value->email,value->is_company,value->company_name,value->trade_name,value->reg_number,value->company_address,value->personal_name,value->personal_address,value->personal_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"edit_profile_form\", \"account\": #account_id#}).Vars(buffer)\r\n        If(#buffered# == 1){\r\n            SetVar(member_member_info_phone, #buffer_value_phone#)\r\n            SetVar(member_member_info_email, #buffer_value_email#)\r\n            SetVar(member_member_info_is_company, #buffer_value_is_company#)\r\n            SetVar(member_member_info_company_name, #buffer_value_company_name#)\r\n            SetVar(member_member_info_trade_name, #buffer_value_trade_name#)\r\n            SetVar(member_member_info_reg_number, #buffer_value_reg_number#)\r\n            SetVar(member_member_info_company_address, #buffer_value_company_address#)\r\n            SetVar(member_member_info_personal_name, #buffer_value_personal_name#)\r\n            SetVar(member_member_info_personal_address, #buffer_value_personal_address#)\r\n            SetVar(member_member_info_personal_id, #buffer_value_personal_id#)\r\n        }\r\n        If(#uploaded# == 1){\r\n            DBFind(buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"avatar\", \"account\": #account_id#}).Vars(avatar)\r\n            SetVar(member_image_id, #avatar_value_binary_id#)\r\n        }.ElseIf(#buffered# == 1){\r\n            SetVar(member_image_id, #buffer_value_image_id#)\r\n        }\r\n\r\n        Div(row ml-lg mt){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Stakeholder Registration Details)\r\n            }\r\n        }\r\n        Div(){\r\n            Span(Class: mt-lg text-center popup-min-width){\r\n                Div(mt-xl){\r\n                    SetVar(ParamNames, \"id;image_id;phone;email;is_company;company_name;trade_name;reg_number;company_address;personal_name;personal_address;personal_id\")\r\n                    If(Or(#wizard#==new_member,#wizard#==new_stakeholder,#wizard#==new_agent)){\r\n                        Button(Class: btn btn-link , Page: settings_sh_upload_photo, PageParams: \"wizard=#wizard#,application_id=#application_id#,buffer_key=avatar\", Contract: FormStateSave, Params: \"AppId=#application_id#,FormName=edit_profile_form,ParamNames=#ParamNames#,Param1=#member_account#,Param2=Val(ImageId),Param3=Val(Phone),Param4=Val(Email),Param5=Val(IsCompany),Param6=Val(CompanyName),Param7=Val(CompanyTradeName),Param8=Val(CompanyRegNumber),Param9=Val(CompanyAddress),Param10=Val(PersonalName),Param11=Val(PersonalAddress),Param12=Val(PersonalID)\"){\r\n                            If(#member_image_id# > 0){\r\n                                Input(Name: ImageId, Type: hidden, Value: #member_image_id#)\r\n                                Image(Src: Binary().ById(#member_image_id#)).Style(height: 204px;width: 204px; border: 2px solid #cdcccd; border-radius: 8px;)\r\n                                Div(Body: Edit Photo)\r\n                            }.Else{\r\n                                Input(Name: ImageId, Type: hidden, Value: 0)\r\n                                Div(Class: icon-user pt-xl pb-sm).Style(font-size: 9em!important;)\r\n                                Div(Class: pb-xl, Body: Edit Photo)\r\n                            }\r\n                        }.Popup(45, \"APLA ™\")\r\n                    }.Else{\r\n                        Button(Class: btn btn-link , Page: settings_sh_upload_photo, PageParams: \"member_account=#member_account#,application_id=#application_id#,buffer_key=avatar\", Contract: FormStateSave, Params: \"AppId=#application_id#,FormName=edit_profile_form,ParamNames=#ParamNames#,Param1=#member_account#,Param2=Val(ImageId),Param3=Val(Phone),Param4=Val(Email),Param5=Val(IsCompany),Param6=Val(CompanyName),Param7=Val(CompanyTradeName),Param8=Val(CompanyRegNumber),Param9=Val(CompanyAddress),Param10=Val(PersonalName),Param11=Val(PersonalAddress),Param12=Val(PersonalID)\"){\r\n                            If(#member_image_id# > 0){\r\n                                Input(Name: ImageId, Type: hidden, Value: #member_image_id#)\r\n                                Image(Src: Binary().ById(#member_image_id#)).Style(height: 204px;width: 204px; border: 2px solid #cdcccd; border-radius: 8px;)\r\n                                Div(Body: Edit Photo)\r\n                            }.Else{\r\n                                Input(Name: ImageId, Type: hidden, Value: 0)\r\n                                Div(Class: icon-user pt-xl pb-sm).Style(font-size: 9em!important;)\r\n                                Div(Class: pb-xl, Body: Edit Photo)\r\n                            }\r\n                        }.Popup(45, \"APLA ™\")\r\n                    }\r\n                }\r\n            }\r\n            Span(Class: fullscreen){\r\n                Div(){\r\n                    Span(Class: text-muted h4, Body: Account Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: Account, Class: stl-input mt-sm, Value: #member_account#, Disabled: true)\r\n                }\r\n                Div(mt-lg){\r\n                    Span(Class: text-muted h4, Body: Phone Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: Phone, Class: stl-input mt-sm, Value: #member_member_info_phone#)\r\n                }\r\n                Div(mt-lg){\r\n                    Span(Class: text-muted h4, Body: Email Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: Email, Class: stl-input mt-sm, Value: #member_member_info_email#)\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n        Div(ml-lg mt-sm popup-min-width){\r\n            Div(input-group){\r\n                Span(Class: mr pull-right text-muted h4, Body: Company)\r\n                Div(input-group-btn){\r\n                    Input(Name: IsCompany, Type: \"checkbox\", Value: #member_member_info_is_company#, Class: m0 pull-right)\r\n                }\r\n            }\r\n        }\r\n        Div(){\r\n            Div(row ml-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyName, Class: stl-input mt-sm, Value: #member_member_info_company_name#)\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Trade name Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyTradeName, Class: stl-input mt-sm, Value: #member_member_info_trade_name#)\r\n\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Registration number Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyRegNumber, Class: stl-input mt-sm, Value: #member_member_info_reg_number#)\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Post address Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyAddress, Class: stl-input mt-sm, Value: #member_member_info_company_address#)\r\n                }\r\n            }\r\n        }.Show(\"IsCompany=true\")\r\n        Div(){\r\n            Div(row ml-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PersonalName, Class: stl-input mt-sm, Value: #member_member_info_personal_name#)\r\n\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: ID [number / authority / date of issue / valid until] Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PersonalID, Class: stl-input mt-sm, Value: #member_member_info_personal_id#)\r\n\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Residence address Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PersonalAddress, Class: stl-input mt-sm, Value: #member_member_info_personal_address#)\r\n                }\r\n            }\r\n        }.Show(\"IsCompany=false\")\r\n        Div(row mt-xl){\r\n            Div(col-md-12){\r\n                If(Or(#wizard#==new_member,#wizard#==new_stakeholder,#wizard#==new_agent)){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: ProfileEdit, Params: \"MemberAccount=#member_account#\", Page: settings_sh_upload_kyc, PageParams: \"wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Skip\", Page: settings_sh_upload_kyc, PageParams: \"wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: ProfileEdit, Params: \"MemberAccount=#member_account#\", Page: settings_sh_list)\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"System\"}).Vars(application)\r\nSetVar(role_developer_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_developer))\r\nSetVar(role_admin_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_admin))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_developer_id#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(developer_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_admin_id#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(admin_access)\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"account\": {\"$neq\": #guest_account#}})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\nIf(#search#){\r\n    SetVar(w_search, {\"member_name\": {\"$ilike\": \"#search#\"}})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}, \"ecosystem\": #ecosystem_id#})\r\nDBFind(members, src).Where(#where#).Columns(\"id,account,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id,member_info->kyc_binary_id,member_info->approval_flag\").Order({\"id\": \"1\"}).Custom(custom_id){\r\n    Div(txt-nowrap){\r\n        If(#member_info.is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n        If(#member_info.approval_flag# != \"1\"){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: settings_sh_edit, PageParams: \"member_account=#account#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#image_id#>0){\r\n                Image(Src: Binary().ById(#image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #member_name#)\r\n                If(#member_info.is_company# == \"true\"){\r\n                    If(#member_info.company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_name#)\r\n                    }\r\n                    If(#member_info.company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#member_info.personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_name#)\r\n                    }\r\n                    If(#member_info.personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_kyc){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: KYC DOCUMENT:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: settings_sh_upload_kyc, PageParams: \"member_account=#account#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#member_info.approval_flag# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    Div(mt-lg){\r\n        If(#member_info.kyc_binary_id# > 0){\r\n            DBFind(binaries, src_binaries).Where({\"id\": #member_info.kyc_binary_id#})\r\n            Table(src_binaries, \"=data\").Style(\r\n                margin-top:-20px;\r\n                thead {\r\n                    background-color: #ffffff;\r\n                }\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                tbody {\r\n                    background-color: #ffffff;\r\n                }\r\n                tbody > tr > td  {\r\n                    border: none!important;\r\n                    height: 10px!important;\r\n                    width: 10px!important;\r\n                }\r\n            )\r\n        }\r\n    }\r\n}.Custom(custom_actions){\r\n    If(#member_info.approval_flag# != \"1\"){\r\n        If(#partner_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right mt, Page: settings_sh_list,Contract: ProfileEdit, Params: \"MemberAccount=#account#,ApprovalFlag=1\"){\r\n                Div(mt-xl){\r\n                    Span(Class: h4, Body: Em(Class: icon-like fa-2x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n            }\r\n        }\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Control Panel\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: settings_sh_add){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Add).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_sh_change_key){\r\n                        Span(Em(Class: icon-loop)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Change key).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            If(Or(#developer_access_id#>0,#admin_access_id#>0)){\r\n                                Span(Class: txt-hl-navigation ml-lg){\r\n                                    Span(Body: Users).Style(text-decoration: underline;)\r\n                                }\r\n                                Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                LinkPage(Page: settings_roles_list){\r\n                                    Span(Class: txt-hl-navigation-blue){\r\n                                        Span(Body: System roles)\r\n                                    }\r\n                                }\r\n                                Em(Class: ml-lg mr txt-hl-navigation, Body: |)\r\n                                Button(Class: btn-xs btn-link, Page: settings_nodes, PageParams: \"back_page=settings_sh_list\"){\r\n                                    Span(Class: txt-hl-navigation-blue){\r\n                                        Span(Body: Node list)\r\n                                    }\r\n                                }.Popup(45, \"APLA ™\")\r\n                            }.Else{\r\n                                If(#filter_role_type#==3){\r\n                                    Span(Class: txt-hl-navigation ml-lg){\r\n                                        Span(Body: Users).Style(text-decoration: underline;)\r\n                                    }\r\n                                    Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                    LinkPage(Page: settings_entity_editing_list){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Vendor changes)\r\n                                        }\r\n                                    }\r\n                                    Em(Class: ml-lg mr txt-hl-navigation, Body: |)\r\n                                    Button(Class: btn-xs btn-link, Page: settings_questions, PageParams: \"back_page=settings_sh_list\"){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Questions)\r\n                                        }\r\n                                    }.Popup(45, \"APLA ™\")\r\n                                }\r\n                                If(#filter_role_type#==8){\r\n                                    Span(Class: txt-hl-navigation ml-lg){\r\n                                        Span(Body: Users).Style(text-decoration: underline;)\r\n                                    }\r\n                                    Em(Class: ml-lg mr-lg txt-hl-navigation, Body: |)\r\n                                    LinkPage(Page: settings_entity_editing_list){\r\n                                        Span(Class: txt-hl-navigation-blue){\r\n                                            Span(Body: Vendor changes)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: settings_sh_list)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: settings_sh_list, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_id,=custom_kyc,=custom_actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_select_company",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(Or(#wizard#==new_member,#wizard#==new_stakeholder)){\r\n            DBFind(\"companies_list\", src_comp).Where({\"deleted\":0}).Count(count)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: \"Select member company\")\r\n            }\r\n            If(#count# == 0){\r\n                Div(col-md-12 text-center mt-lg){\r\n                    Span(Class: text-center txt-absent h4 mt-sm, Body: Created companies not found)\r\n                }\r\n            }\r\n        }\r\n        If(#count# > 0){\r\n            Div(row mt-lg popup-min-width){\r\n                Div(col-md-12 mt-lg){\r\n                    Span(Class: text-muted h4, Body: Companies Em(Class: fa fa-caret-down pl-sm))\r\n                    Select(Name: CompId, Class: stl-input mt-sm, Source: src_comp, NameColumn: name, ValueColumn: id)\r\n                }\r\n            }\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12 mt){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Page: settings_sh_select_roles, PageParams: \"company_id=Val(CompId),wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_sh_list)\r\n                }\r\n            }\r\n        }.Else{\r\n            Div(mt-xl){\r\n                Div(col-md-12 mt){\r\n                    Button(Class: btn btn-default pull-right btn-grey, Body: \"Close\", Page: settings_sh_list)\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Close\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_select_roles",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(Or(#wizard#==new_member,#wizard#==new_stakeholder)){\r\n            DBFind(\"buffer_data\").Columns(\"value->add_member\").Where({\"key\": \"new_user_reg\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(wiz)\r\n            DBFind(\"roles\", src_roles).Where({\"company_id\":#company_id#})\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: \"Select member role\")\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt-lg){\r\n                Span(Class: text-muted h4, Body: Roles Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleId, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Page: roles_participants_add, PageParams: \"r_id=Val(RoleId),wizard=#wizard#,participant_id=#wiz_value_add_member#,company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Close\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Close\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_upload_kyc",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\nIf(Or(#wizard#==new_member,#wizard#==new_stakeholder,#wizard#==new_agent)){\r\n    DBFind(\"buffer_data\").Columns(\"value->add_member\").Where({\"key\":\"new_user_reg\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(wiz)\r\n    SetVar(member_account, #wiz_value_add_member#)\r\n}\r\nDBFind(applications).Columns(\"name,id\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Upload KYC Documents)\r\n            }\r\n        }\r\n        If(#upload#==1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"kyc_doc\", \"account\": #account_id#}).Vars(buffer)\r\n                    DBFind(binaries).Columns(\"name\").Where({\"id\": #buffer_value_binary_id#}).Vars(binaries)\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #binaries_name#, Disabled: true)\r\n                }\r\n            }\r\n        }.Else{\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Input(Name: FileData, Type: file)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#upload#==1){\r\n                    If(#wizard#==new_member){\r\n                        Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: ProfileEdit, Params: \"KYCFlag=1,KYCBinaryId=#buffer_value_binary_id#,MemberAccount=#member_account#\", Page: settings_sh_select_company, PageParams: \"wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_select_company, PageParams: \"wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                    }.ElseIf(#wizard#==new_stakeholder){\r\n                        Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: ProfileEdit, Params: \"KYCFlag=1,KYCBinaryId=#buffer_value_binary_id#,MemberAccount=#member_account#\", Page: co_se_edit_number, PageParams: \"wizard=#wizard#,owner_id=#member_account#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_se_edit_number, PageParams: \"wizard=#wizard#,owner_id=#member_account#\").Popup(45, \"APLA ™\")\r\n                    }.ElseIf(#wizard#==new_agent){\r\n                        DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n                        SetVar(company_id, #buffer_value#)\r\n                        Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: ProfileEdit, Params: \"KYCFlag=1,KYCBinaryId=#buffer_value_binary_id#,MemberAccount=#member_account#\", Page: poa_edit_sender, PageParams: \"wizard=#wizard#,agent_id=#member_account#,company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: poa_edit_sender, PageParams: \"wizard=#wizard#,agent_id=#member_account#,company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                    }.Else{\r\n                        Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: ProfileEdit, Params: \"KYCFlag=1,KYCBinaryId=#buffer_value_binary_id#,MemberAccount=#member_account#\", Page: settings_sh_list)\r\n                        Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_list)\r\n                    }\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    If(#wizard#==new_member){\r\n                        Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=kyc_doc\", Page: settings_sh_upload_kyc, PageParams: \"upload=1,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_select_company, PageParams: \"wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                    }.ElseIf(#wizard#==new_stakeholder){\r\n                        Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=kyc_doc\", Page: settings_sh_upload_kyc, PageParams: \"upload=1,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_se_edit_number, PageParams: \"wizard=#wizard#,owner_id=#member_account#\").Popup(45, \"APLA ™\")\r\n                    }.ElseIf(#wizard#==new_agent){\r\n                        DBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\n                        SetVar(company_id, #buffer_value#)\r\n                        Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=kyc_doc\", Page: settings_sh_upload_kyc, PageParams: \"upload=1,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Skip\", Class: btn btn-default pull-right btn-grey mr-sm, Page: poa_edit_sender, PageParams: \"wizard=#wizard#,agent_id=#member_account#,company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n                    }.Else{\r\n                        Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=kyc_doc\", Page: settings_sh_upload_kyc, PageParams: \"upload=1,member_account=#member_account#\").Popup(45, \"APLA ™\")\r\n                        Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_list)\r\n                    }\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_upload_photo",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Upload Stakeholder Photo)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Input(Name: FileData, Type: file)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(Or(#wizard#==new_member,#wizard#==new_stakeholder,#wizard#==new_agent)){\r\n                    Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=#buffer_key#,FileName=#file_name#\", Page: settings_sh_edit, PageParams:\"buffered=1,uploaded=1,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_edit, PageParams: \"buffered=1,wizard=#wizard#\").Popup(45, \"APLA ™\")\r\n                }.Else{\r\n                    Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=#buffer_key#,FileName=#file_name#\", Page: settings_sh_edit, PageParams:\"buffered=1,uploaded=1,member_account=#member_account#\").Popup(45, \"APLA ™\")\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_edit, PageParams: \"buffered=1,member_account=#member_account#\").Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_directors",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\nSetVar(company_id, #buffer_value#)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #company_id#}, {\"$or\": [{\"meeting_type\": 21}, {\"meeting_type\": 22}]}]})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #filter_role_company_id#}, {\"$or\": [{\"meeting_type\": 21}, {\"meeting_type\": 22}]}]})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #filter_role_company_id#}, {\"$or\": [{\"meeting_type\": 21}, {\"meeting_type\": 22}]}]})\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\nIf(#search#){\r\n    SetVar(w_search, {\"$or\": [{\"meeting_bd->initiated\":{\"$ilike\": \"#search#\"}}, {\"meeting_shareholders->initiated\":{\"$ilike\": \"#search#\"}}]})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}})\r\n\r\nDBFind(meetings_list, src).Where(#where#).Columns(\"meeting_type,date_created,status,meeting_bd->format,meeting_bd->agenda,meeting_bd->place,meeting_bd->initiated,meeting_bd->date_from,meeting_bd->date_until,meeting_shareholders->issuer,meeting_shareholders->legal_form,meeting_shareholders->place_results,meeting_shareholders->initiated,meeting_shareholders->date_from,meeting_shareholders->date_until,agenda,matters\").Order({\"id\": -1}).Custom(custom_initiated){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #meeting_bd.initiated#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: INITIATED (COMPANY):)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: INITIATED (MEMBER):)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_meeting){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: MEETING DATE:)\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YY HH:MI\", Location: #view_address_timezone#))\r\n    If(#meeting_bd.date_from# > 0){\r\n        P(Class: txt-hidden p-00, Body: From: DateTime(DateTime: #meeting_bd.date_from#, Format: \"DD.MM.YY HH:MI\", Location: #view_address_timezone#))\r\n        P(Class: txt-hidden p-00, Body: Until: DateTime(DateTime: #meeting_bd.date_until#, Format: \"DD.MM.YY HH:MI\", Location: #view_address_timezone#))\r\n    }\r\n}.Custom(custom_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    If(#meeting_type# == 11){\r\n        P(Class: txt-hidden p-20, Body: Topic: Shareholders agenda)\r\n    }\r\n    If(#meeting_type# == 12){\r\n        P(Class: txt-hidden p-20, Body: Topic: Domestic issues)\r\n    }\r\n    If(#meeting_type# == 21){\r\n        P(Class: txt-hidden p-20, Body: Topic: Shareholders agenda)\r\n    }\r\n    If(#meeting_type# == 22){\r\n        P(Class: txt-hidden p-20, Body: Topic: Domestic issues)\r\n    }\r\n    If(#status#==1){\r\n        P(Class: txt-hidden p-00, Body: Status: Span(Class: text-normal, Body: Announced))\r\n    }\r\n    If(#status#==2){\r\n        P(Class: txt-hidden p-00, Body: Status: Span(Class: text-success, Body: Active))\r\n    }\r\n    If(#status#==3){\r\n        P(Class: txt-hidden p-00, Body: Status: Span(Class: text-muted, Body: Finished))\r\n    }\r\n}.Custom(check){\r\n    If(And(#meeting_bd.initiated#==#account_id#,#status#==1)){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: bd_meeting_edit, PageParams: \"meeting_id=#id#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4, Body: Em(Class: icon-note fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }\r\n    }\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: VIEW:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"meeting_id=#id#\", Page: bd_meeting_view, Body: View voting)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Board of Directors\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: shareholder_directors, Contract: MeetingUpdateStatuses){\r\n                        Span(Em(Class: icon-refresh)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Refresh).Style(font-size: 21px;)\r\n                    }\r\n                }\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_edit_settings, PageParams: \"back_page=shareholder_directors\"){\r\n                        Span(Em(Class: icon-settings)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Settings).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n            If(#filter_access# == 1){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: bd_meeting_add, PageParams: \"MeetingType=22\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Directors vote).Style(font-size: 21px;)\r\n                    }\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: bd_meeting_add, PageParams: \"MeetingType=21\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Sharers agenda).Style(font-size: 21px;)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: List of Meetings).Style(text-decoration: underline;)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: shareholder_directors)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: shareholder_directors, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_page,=custom_initiated,=custom_meeting,=custom_status,=check\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_meetings",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->account\": #account_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1buffer_data\").Columns(\"value\").Where({\"key\": \"company_id\", \"account\": #account_id#, \"ecosystem\": #ecosystem_id#}).Vars(buffer)\r\nSetVar(company_id, #buffer_value#)\r\nIf(Or(#company_id#==\"NULL\",#company_id#==\"\")){\r\n    SetVar(company_id, 0)\r\n}\r\n\r\nDBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #company_id#}, {\"$or\": [{\"meeting_type\": 11}, {\"meeting_type\": 12}]}]})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #filter_role_company_id#}, {\"$or\": [{\"meeting_type\": 11}, {\"meeting_type\": 12}]}]})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #filter_role_company_id#}, {\"$or\": [{\"meeting_type\": 11}, {\"meeting_type\": 12}]}]})\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #filter_role_company_id#}, {\"$or\": [{\"meeting_type\": 11}, {\"meeting_type\": 12}]}]})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(w_filter, {\"$and\": [{\"company_id\": #filter_role_company_id#}, {\"$or\": [{\"meeting_type\": 11}, {\"meeting_type\": 12}]}]})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\nIf(#search#){\r\n    SetVar(w_search, {\"$or\": [{\"meeting_bd->initiated\":{\"$ilike\": \"#search#\"}}, {\"meeting_shareholders->initiated\":{\"$ilike\": \"#search#\"}}]})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}})\r\n\r\nDBFind(meetings_list, src).Where(#where#).Columns(\"meeting_type,date_created,status,meeting_bd->format,meeting_bd->agenda,meeting_bd->place,meeting_bd->initiated,meeting_bd->date_from,meeting_bd->date_until,meeting_shareholders->issuer,meeting_shareholders->legal_form,meeting_shareholders->place_results,meeting_shareholders->initiated,meeting_shareholders->date_from,meeting_shareholders->date_until,agenda,matters\").Order({\"id\": -1}).Custom(custom_initiated){\r\n    Div(txt-nowrap){\r\n        DBFind(members).Where({\"account\": #meeting_shareholders.initiated#, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: INITIATED (COMPANY):)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: INITIATED (MEMBER):)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_meeting){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: MEETING DATE:)\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YY HH:MI\", Location: #view_address_timezone#))\r\n    If(#meeting_shareholders.date_from# > 0){\r\n        P(Class: txt-hidden p-00, Body: From: DateTime(DateTime: #meeting_shareholders.date_from#, Format: \"DD.MM.YY HH:MI\", Location: #view_address_timezone#))\r\n        P(Class: txt-hidden p-00, Body: Until: DateTime(DateTime: #meeting_shareholders.date_until#, Format: \"DD.MM.YY HH:MI\", Location: #view_address_timezone#))\r\n    }\r\n}.Custom(custom_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    If(#meeting_type# == 11){\r\n        P(Class: txt-hidden p-20, Body: Topic: Shareholders agenda)\r\n    }\r\n    If(#meeting_type# == 12){\r\n        P(Class: txt-hidden p-20, Body: Topic: Domestic issues)\r\n    }\r\n    If(#meeting_type# == 21){\r\n        P(Class: txt-hidden p-20, Body: Topic: Shareholders agenda)\r\n    }\r\n    If(#meeting_type# == 22){\r\n        P(Class: txt-hidden p-20, Body: Topic: Domestic issues)\r\n    }\r\n    If(#status#==1){\r\n        P(Class: txt-hidden p-00, Body: Status: Span(Class: text-normal, Body: Announced))\r\n    }\r\n    If(#status#==2){\r\n        P(Class: txt-hidden p-00, Body: Status: Span(Class: text-success, Body: Active))\r\n    }\r\n    If(#status#==3){\r\n        P(Class: txt-hidden p-00, Body: Status: Span(Class: text-muted, Body: Finished))\r\n    }\r\n}.Custom(check){\r\n    If(And(#meeting_shareholders.initiated#==#account_id#,#status#==1)){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: bd_meeting_edit, PageParams: \"meeting_id=#id#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4, Body: Em(Class: icon-note fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }\r\n    }\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: VIEW:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"meeting_id=#id#\", Page: bd_meeting_view, Body: View voting)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Meetings of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: shareholder_meetings, Contract: MeetingUpdateStatuses){\r\n                        Span(Em(Class: icon-refresh)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Refresh).Style(font-size: 21px;)\r\n                    }\r\n                }\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_edit_settings, PageParams: \"back_page=shareholder_meetings\"){\r\n                        Span(Em(Class: icon-settings)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Settings).Style(font-size: 21px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n            If(#filter_access# == 1){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: bd_meeting_add, PageParams: \"MeetingType=11\"){\r\n                        Span(Em(Class: icon-plus)).Style(font-size: 18px; display: inline-block;)\r\n                        Span(Class: ml-sm, Body: Sharers vote).Style(font-size: 21px;)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: List of Meetings).Style(text-decoration: underline;)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: shareholder_meetings)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: shareholder_meetings, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_page,=custom_initiated,=custom_meeting,=custom_status,=check\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_profile",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(\"roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->account\": #account_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#a_id# == \"\"){\r\n    SetVar(a_id, #account_id#)\r\n}\r\nIf(#a_id# == #account_id#){\r\n    SetVar(filter_access, 1)\r\n}\r\n\r\nForm(){\r\n    Div(row mt-xl){\r\n        Div(col-md-10 col-md-offset-1){\r\n            Div(panel panel-primary panelForm){\r\n                Div(panel-body m0){\r\n                    Div(bb pb){\r\n                        Div(pl-lg pb pt-sm text-center){\r\n                            If(And(#a_id#==#account_id#,#role_id#>0)){\r\n                                DBFind(roles).Where({\"id\": #role_id#}).Columns(\"role_name\").Vars(p)\r\n                                Span(Class: h2 text-bold text-black, Body: #p_role_name#).Style(text-decoration: underline;)\r\n                            }.Else{\r\n                                Span(Class: h2 text-bold text-black, Body: Personal Information).Style(text-decoration: underline;)\r\n                            } \r\n                        }\r\n                    }\r\n                    Div(mt-sm){\r\n                        If(#filter_access# == 1){\r\n                            DBFind(members).Where({\"ecosystem\": #ecosystem_id#, \"account\": #a_id#}).Columns(\"id,account,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(member)\r\n\r\n                            Div(){\r\n                                Span(Class: ml-lg text-center mr-xl){\r\n                                    Div(pt-lg pb){\r\n                                        If(#member_image_id# > 0){\r\n                                            Input(Name: ImageId, Type: hidden, Value: #member_image_id#)\r\n                                            Image(Src: Binary().ById(#member_image_id#)).Style(height: 180px;width: 180px; border: 2px solid #656565; border-radius: 8px;)\r\n                                        }.Else{\r\n                                            Input(Name: ImageId, Type: hidden, Value: 0)\r\n                                            Div(Class: icon-user text-black).Style(font-size: 9em!important;)\r\n                                        }\r\n                                    }.Style(min-width: 280px!important;)\r\n                                }\r\n                                Span(Class: pr-xl pb-lg fullscreen){\r\n                                    Div(row){\r\n                                        Div(col-md-6 minCol){\r\n                                            Div(mt-lg){\r\n                                                Span(Class: txt-nowrap text-black h4, Body: Strong(Account))\r\n                                            }\r\n                                            If(#member_member_info_is_company# == \"true\"){\r\n                                                If(#member_member_info_company_name# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Name))\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_trade_name# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Trade name))\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_reg_number# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Registration number))\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_company_address# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Post address))\r\n                                                    }\r\n                                                }\r\n                                            }.Else{\r\n                                                If(#member_member_info_personal_name# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Name))\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_personal_id# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(ID))\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_personal_address# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Residence address))\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            If(#member_member_info_phone# != \"\"){\r\n                                                Div(mt-lg){\r\n                                                    Span(Class: txt-nowrap text-black h4, Body: Strong(Phone))\r\n                                                }\r\n                                            }\r\n                                            If(#member_member_info_email# != \"\"){\r\n                                                Div(mt-lg){\r\n                                                    Span(Class: txt-nowrap text-black h4, Body: Strong(Email))\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(mt-lg){\r\n                                                Span(Class: txt-nowrap text-black h4, Body: #member_account#)\r\n                                            }\r\n                                            If(#member_member_info_is_company# == \"true\"){\r\n                                                If(#member_member_info_company_name# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_company_name#)\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_trade_name# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_trade_name#)\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_reg_number# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_reg_number#)\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_company_address# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_company_address#)\r\n                                                    }\r\n                                                }\r\n                                            }.Else{\r\n                                                If(#member_member_info_personal_name# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_personal_name#)\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_personal_id# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_personal_id#)\r\n                                                    }\r\n                                                }\r\n                                                If(#member_member_info_personal_address# != \"\"){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: #member_member_info_personal_address#)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            If(#member_member_info_phone# != \"\"){\r\n                                                Div(mt-lg){\r\n                                                    Span(Class: txt-nowrap text-black h4, Body: #member_member_info_phone#)\r\n                                                }\r\n                                            }\r\n                                            If(#member_member_info_email# != \"\"){\r\n                                                Div(mt-lg){\r\n                                                    Span(Class: txt-nowrap text-black h4, Body: #member_member_info_email#)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    Div(mt-lg mb-sm){\r\n                                        DBFind(roles_participants).Where({\"ecosystem\": #ecosystem_id#, \"member->account\": #a_id#, \"deleted\": 0}).Columns(\"id\").Vars(check)\r\n                                        If(#check_id#>0){\r\n                                            Div(row){\r\n                                                Div(col-md-6 minCol){\r\n                                                    Span(Class: txt-nowrap text-black h4, Body: Strong(Roles))\r\n                                                }\r\n                                                Div(col-md-6){\r\n                                                    Div(){\r\n                                                        DBFind(roles_participants, src_roles).Where({\"ecosystem\": #ecosystem_id#, \"member->account\": #a_id#, \"deleted\": 0}).Columns(\"role->id,role->name\").Order(\"id\").Count(cnt_roles)\r\n                                                        ForList(Source: src_roles, Index: r_ind){\r\n                                                            Span(Class: txt-nowrap text-black h4, Body: \"#role.name#\")\r\n                                                            If(#r_ind# < #cnt_roles#){\r\n                                                                Span(Class: txt-nowrap text-black h4 mr-sm, Body: \",\")\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }.Else{\r\n                                            Div(row){\r\n                                                Div(col-md-6 minCol){\r\n                                                    Div(mt-sm){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: Strong(Roles))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-6){\r\n                                                    Div(mt-sm){\r\n                                                        Span(Class: txt-nowrap text-black h4, Body: None)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }.Style(display:flex; align-items:center;)\r\n                        }.Else{\r\n                            Div(pl-lg pb pt text-center){\r\n                                Span(Class: h3 text-bold text-black, Body: No information)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .minCol {\r\n        width: 200px!important;\r\n    }\r\n    .panelForm {\r\n        min-width: 800px!important;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_settings",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(){\r\n    Div(row){\r\n        Div(col-md-12 ml-lg mt mb){\r\n            Span(Class: h3 text-bold){\r\n                Deploy\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary pt pb){\r\n                    DBFind(roles).Where({\"ecosystem\": #ecosystem_id#}).Count(all_roles_count)\r\n                    If(#all_roles_count# > 0){\r\n                    }.Else{\r\n                        Div(Class: text-center){\r\n                            Button(Class: btn btn-primary, Body: Deploy, Page: default_page, Contract: Deploy)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "upload_excel",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    DBFind(\"applications\").Where({name:\"Companies Registry\"}).Vars(application)\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black, Body: Upload securities history)\r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12){\r\n            Input(Name: Data, Type: file)\r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: UploadFileExcel, Params: \"ApplicationId=#application_id#,CompanyId=#company_id#\", Page: upload_excel_success, PageParams:\"company_id=#company_id#,securities_id=#securities_id#,app_id=#application_id#\").Popup(45, \"APLA ™\")\r\n            Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n            Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                Span(Class: text-muted mr-lg h4, Body: Step)\r\n                Em(Class: fa fa-dot-circle-o mr-sm)\r\n                Em(Class: fa fa-circle-o mr-sm)\r\n                Em(Class: fa fa-circle-o mr-sm)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "upload_excel_review_securites",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "SetVar(this_page, upload_excel_review_securites).(this_table, security_intermediate_data).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\nDBFind(\"companies_securities\", sct_mem).WhereId(#securities_id#).Vars(scr)\r\nForm(ml-lg mr-lg){\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black, Body: Review of securities data)\r\n        }\r\n    }\r\n    SetVar(where, {\"company_id\": #scr_company_id#, \"deleted\": 0, \"owner\": #scr_owner#})\r\n\r\n    DBFind(#this_table#, src).Columns(\"id,date,amount,comments,deleted,company_id,owner\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(_date){\r\n        Div(){\r\n            Div(pl pb pt-sm){\r\n                Div(preview-nowrap text-muted){\r\n                    DATE Em(Class: fa fa-caret-down)\r\n                }\r\n                Div(h4 text-bold pt-sm){\r\n                    P(Body: DateTime(#date#,YYYY.MM.DD))\r\n                }\r\n            }\r\n        }.Style(\r\n            height: 125px;\r\n            margin-top: 2px;\r\n        )\r\n    }.Custom(_amount){\r\n        Div(){\r\n            Div(pl pb pt-sm){\r\n                Div(preview-nowrap text-muted){\r\n                    AMOUNT Em(Class: fa fa-caret-down)\r\n                }\r\n                Div(h4 text-bold pt-sm){\r\n                    If(#amount# != NULL){\r\n                        P(Body: #amount#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(\r\n            height: 125px;\r\n            margin-top: 2px;\r\n        )\r\n    }.Custom(_comments){\r\n        Div(){\r\n            Div(pl pb pt-sm){\r\n                Div(preview-nowrap text-muted pr-lg){\r\n                    COMMENTS Em(Class: fa fa-caret-down pl-sm)\r\n                }\r\n                Div(h4 text-bold pt-sm){\r\n                    If(#comments# != \"\"){\r\n                        P(Class: preview, Body: #comments#).Style(\r\n                            max-height: 78px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }.Style(\r\n            height: 125px;\r\n            margin-top: 2px;\r\n        )\r\n    }.Count(count)\r\n\r\n    Div(row popup-min-width){\r\n        Div(col-md-12){\r\n            Table(src, \"=_date,=_amount,=_comments\")\r\n        }\r\n    }\r\n    Div(row mt-lg popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Include(cr_pager)\r\n            Button(Body: \"Confirm\", Class: btn btn-primary pull-right btn-blue, Contract: ExcelParseConfirm, Params: \"CompanyId=#scr_company_id#,MemberWallet=#scr_owner#,SecuritiesId=#securities_id#\", Page: co_securities_history_list, PageParams:\"company_id=#scr_company_id#,securities_id=#securities_id#\")\r\n            Button(Body: \"Reject\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_history_list, PageParams:\"company_id=#scr_company_id#,securities_id=#securities_id#\")\r\n        }\r\n    }\r\n}.Style(\r\n    .preview {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: normal;\r\n    }\r\n    .preview-nowrap {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "upload_excel_success",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black text-center, Body: File uploaded successfully)\r\n        }\r\n        Div(col-md-12 text-center mt){\r\n            Span(Class: h4 text-muted text-center, Body: Go to the Review section....)\r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Button(Body: \"Review\", Class: btn btn-primary pull-right btn-blue, Contract: ExcelParse, Params: \"CompanyId=#company_id#,ApplicationId=#app_id#,SecuritiesId=#securities_id#\", Page: upload_excel_review_securites, PageParams:\"company_id=#company_id#,securities_id=#securities_id#\").Popup(45, \"APLA ™\")\r\n            Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: upload_excel, PageParams:\"company_id=#company_id#,securities_id=#securities_id#\").Popup(45, \"APLA ™\")\r\n            Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                Span(Class: text-muted mr-lg h4, Body: Step)\r\n                Em(Class: fa fa-dot-circle-o mr-sm)\r\n                Em(Class: fa fa-dot-circle-o mr-sm)\r\n                Em(Class: fa fa-circle-o mr-sm)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "BufferOrders",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract BufferOrders {\r\n    data {\r\n        PreviousOwner string \"optional\"\r\n        NewOwner string \"optional\"\r\n        CompanyId int \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n\r\n        if $PreviousOwner {\r\n            if !DBFind(\"companies_list\").Where({\"id\":$CompanyId,\"deleted\":0}) {\r\n                warning \"Company not found\"\r\n            }\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $PreviousOwner, \"deleted\": 0}).Row() {\r\n                warning \"The previous owner of the securities was not found in the company\"\r\n            }\r\n            if !DBFind(\"companies_securities\").Where({\"company_id\": $CompanyId, \"owner\": $PreviousOwner}).Row() {\r\n                warning \"Securities ID previous owner not found\"\r\n            }\r\n        }\r\n\r\n        if $NewOwner {\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $NewOwner, \"deleted\": 0}).Row() {\r\n                warning \"The new owner of the securities was not found in the company\"\r\n            }\r\n            if !DBFind(\"companies_securities\").Where({\"company_id\": $CompanyId, \"owner\": $NewOwner}).Row() {\r\n                warning \"Securities ID new owner not found\"\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var buffer_data map\r\n        $BufferKey = \"orders_info\"\r\n        if $PreviousOwner {\r\n            buffer_data[\"previous_owner\"] = $PreviousOwner\r\n            BufferManager(\"Action,Key\", \"clean\", $BufferKey)\r\n            BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        } elif $NewOwner {\r\n            $buf = DBFind(\"buffer_data\").Columns(\"id,value->previous_owner\").Where({\"ecosystem\": $ecosystem_id, \"key\": $BufferKey, \"account\": $account_id}).Row()\r\n            buffer_data[\"previous_owner\"] = $buf[\"value.previous_owner\"]\r\n            buffer_data[\"new_owner\"] = $NewOwner\r\n            BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        } else {\r\n            BufferManager(\"Action,Key\", \"clean\", $BufferKey)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BufferPoa",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract BufferPoa {\r\n    data {\r\n        PoaSender string \"optional\"\r\n        PoaRecipient string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var buffer_data map\r\n        $BufferKey = \"poa_details\"\r\n\r\n        if Size($PoaSender) > 0 && Size($PoaRecipient) == 0 {\r\n            $buf = DBFind(\"buffer_data\").Columns(\"id,value->poa_sender,value->poa_recipient\").Where({\"ecosystem\": $ecosystem_id, \"key\": $BufferKey, \"account\": $account_id}).Row()\r\n            if $buf {\r\n                buffer_data[\"poa_sender\"] = $buf[\"value.poa_sender\"]\r\n                buffer_data[\"poa_recipient\"] = $buf[\"value.poa_recipient\"]\r\n            }\r\n            buffer_data[\"poa_sender\"] = $PoaSender\r\n            BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        } \r\n        if Size($PoaRecipient) > 0 && Size($PoaSender) == 0 {\r\n            $buf = DBFind(\"buffer_data\").Columns(\"id,value->poa_sender,value->poa_recipient\").Where({\"ecosystem\": $ecosystem_id, \"key\": $BufferKey, \"account\": $account_id}).Row()\r\n            if $buf {\r\n                buffer_data[\"poa_sender\"] = $buf[\"value.poa_sender\"]\r\n                buffer_data[\"poa_recipient\"] = $buf[\"value.poa_recipient\"]\r\n            }\r\n            buffer_data[\"poa_recipient\"] = $PoaRecipient\r\n            BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        }\r\n        if Size($PoaRecipient) > 0 && Size($PoaSender) > 0 {\r\n            buffer_data[\"poa_sender\"] = $PoaSender\r\n            buffer_data[\"poa_recipient\"] = $PoaRecipient\r\n            BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "CompaniesRegistrySettingsRoles",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract CompaniesRegistrySettingsRoles {\r\n    data {\r\n        RoleLawFirmJunior int\r\n        RoleLawFirmPartner int\r\n        RoleVendor int\r\n    }\r\n\r\n    conditions {\r\n        AdminCondition()\r\n    }\r\n\r\n    func updateParam(name string, value int) {\r\n        if value > 0 {\r\n            var param paramsNew map\r\n            if $app_id > 0 {\r\n                param = DBFind(\"app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app_id, \"name\": name}).Row()\r\n                if param {\r\n                    paramsNew[\"Id\"] = Int(param[\"id\"])\r\n                    paramsNew[\"Value\"] = Str(value)\r\n                    paramsNew[\"Conditions\"] = param[\"conditions\"]\r\n                    CallContract(\"EditAppParam\", paramsNew)\r\n                } else {\r\n                    paramsNew[\"ApplicationId\"] = $app_id\r\n                    paramsNew[\"Name\"] = name\r\n                    paramsNew[\"Value\"] = Str(value)\r\n                    paramsNew[\"Conditions\"] = \"ContractConditions(\\\"AdminCondition\\\")\"\r\n                    CallContract(\"NewAppParam\", paramsNew)\r\n                }\r\n            } else {\r\n                warning LangRes(\"app_not_found\", \"en\")\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        $app_id = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        updateParam(\"role_law_firm_junior\", $RoleLawFirmJunior)\r\n        updateParam(\"role_law_firm_partner\", $RoleLawFirmPartner)\r\n        updateParam(\"role_vendor\", $RoleVendor)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsProcess",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract NotificationsProcess {\r\n    data {\r\n        NotificId int\r\n    }\r\n\r\n    func getMemberInfo(kid string) map {\r\n        var res member map\r\n        member = DBFind(\"members\").Where({\"ecosystem\": $ecosystem_id, \"account\": kid}).Row()\r\n        if member {\r\n            res[\"account\"] = member[\"account\"]\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            member = DBFind(\"keys\").Where({\"ecosystem\": $ecosystem_id, \"account\": kid, \"deleted\": 0}).Row()\r\n            if member {\r\n                res[\"account\"] = Str(kid)\r\n                res[\"member_name\"] = Str(kid)\r\n                res[\"image_id\"] = 0\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    conditions {\r\n        $notify = DBFind(\"notifications\").Where({\"ecosystem\": $ecosystem_id, \"id\": $NotificId}).Columns(\"recipient->role_id,sender->type,date_start_processing\").Row()\r\n        if !$notify {\r\n            warning LangRes(\"notification_not_found\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var model map\r\n        model[\"processing_info\"] = getMemberInfo($account_id)\r\n        model[\"date_start_processing\"] = $block_time\r\n        DBUpdate(\"notifications\", $NotificId, model)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesCreate",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract RolesCreate {\r\n    data {\r\n        Name string\r\n        Type int\r\n        CompanyId int \"optional\"\r\n    }\r\n\r\n    func getMemberInfo(kid string) map {\r\n        var res member map\r\n        member = DBFind(\"members\").Where({\"ecosystem\": $ecosystem_id, \"account\": kid}).Row()\r\n        if member {\r\n            res[\"account\"] = kid\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            member = DBFind(\"keys\").Where({\"ecosystem\": $ecosystem_id, \"account\": kid, \"deleted\": 0}).Row()\r\n            if member {\r\n                res[\"account\"] = kid\r\n                res[\"member_name\"] = kid\r\n                res[\"image_id\"] = 0\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    conditions {\r\n        @1DeveloperCondition()\r\n\r\n        $system_app_id = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"System\"}).One(\"id\")\r\n\r\n        if $Name == DBFind(\"roles\").Where({\"ecosystem\": $ecosystem_id, \"role_name\": $Name}).One(\"role_name\") {\r\n            warning LangRes(\"role_exists\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var roles_access_arr array, buffer map\r\n        buffer = DBFind(\"buffer_data\").Where({\"ecosystem\": $ecosystem_id, \"account\": $account_id, \"key\": \"roles_access\"}).Columns(\"id,value,value->roles_access\").Row()\r\n        if buffer {\r\n            roles_access_arr = JSONDecode(buffer[\"value.roles_access\"])\r\n            var filled map\r\n            filled[\"roles_access\"] = []\r\n            filled[\"role_name\"] = \"\"\r\n            filled[\"role_type\"] = \"\"\r\n\r\n            @1BufferManager(\"Action,Key,Val\", \"set\", \"roles_access\", JSONEncode(filled))\r\n        }\r\n        var m map\r\n        m[\"creator\"] = getMemberInfo($account_id)\r\n        m[\"role_name\"] = $Name\r\n        m[\"role_type\"] = $Type\r\n        m[\"date_created\"] = $block_time\r\n        m[\"roles_access\"] = JSONEncode(roles_access_arr)\r\n        m[\"ecosystem\"] = $ecosystem_id\r\n        m[\"company_id\"] = $CompanyId\r\n        $result = DBInsert(\"roles\", m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "DeploySystemPermissions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract DeploySystemPermissions {\r\n    data {}\r\n\r\n    conditions {\r\n        MainCondition()\r\n    }\r\n\r\n    action {\r\n        var TableName ColumnName InsertPerm UpdatePerm ReadPerm NewColPerm string\r\n\r\n        //====================================APP_PARAMS======================================================================\r\n        TableName  = `app_params`\r\n        InsertPerm = `ContractAccess(\"@1NewAppParam\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `app_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditAppParam\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1EditAppParam\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================APPLICATIONS====================================================================\r\n        TableName  = `applications`\r\n        InsertPerm = `ContractAccess(\"@1NewApplication\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditApplication\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1DelApplication\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `uuid`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================BAD_BLOCKS======================================================================\r\n        TableName  = `bad_blocks`\r\n        InsertPerm = `ContractAccess(\"@1NewBadBlock\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `block_id`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `block_time`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `consumer_node_id`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `producer_node_id`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `reason`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================BINARIES========================================================================\r\n        TableName  = `binaries`\r\n        InsertPerm = `ContractAccess(\"@1UploadBinary\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `account`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `app_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `data`\r\n            UpdatePerm = `ContractAccess(\"@1UploadBinary\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `hash`\r\n            UpdatePerm = `ContractAccess(\"@1UploadBinary\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `mime_type`\r\n            UpdatePerm = `ContractAccess(\"@1UploadBinary\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================BLOCKS==========================================================================\r\n        TableName  = `blocks`\r\n        InsertPerm = `ContractAccess(\"@1NewBlock\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `app_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditBlock\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1EditBlock\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================BUFFER_DATA=====================================================================\r\n        TableName  = `buffer_data`\r\n        InsertPerm = `ContractAccess(\"@1BufferManager\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `account`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `key`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1BufferManager\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================CONTRACTS=======================================================================\r\n        TableName  = `contracts`\r\n        InsertPerm = `ContractAccess(\"@1NewContract\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `app_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditContract\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `token_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1EditContract\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `wallet_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================DELAYED_CONTRACTS===============================================================\r\n        TableName  = `delayed_contracts`\r\n        InsertPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `block_id`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `contract`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `counter`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `every_block`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `key_id`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `limit`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================ECOSYSTEMS======================================================================\r\n        TableName  = `ecosystems`\r\n        InsertPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `emission_amount`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `info`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `is_valued`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `token_title`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `type_emission`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `type_withdraw`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================HISTORY=========================================================================\r\n        TableName  = `history`\r\n        InsertPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `amount`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `block_id`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `comment`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `created_at`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `recipient_id`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `sender_id`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `txhash`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `type`\r\n            UpdatePerm = `ContractConditions(\"@1AdminCondition\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================KEYS============================================================================\r\n        TableName  = `keys`\r\n        InsertPerm = `ContractAccess(\"@1NewUser\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `pub`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `amount`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `maxpay`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deposit`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `multi`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1NewUser\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `blocked`\r\n            UpdatePerm = `ContractAccess(\"@1NewUser\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `account`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================LANGUAGES=======================================================================\r\n        TableName  = `languages`\r\n        InsertPerm = `ContractAccess(\"@1NewLang\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditLang\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `ContractAccess(\"@1EditLang\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `res`\r\n            UpdatePerm = `ContractAccess(\"@1EditLang\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================MEMBERS=========================================================================\r\n        TableName  = `members`\r\n        InsertPerm = `ContractAccess(\"@1ProfileEdit\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `account`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `image_id`\r\n            UpdatePerm = `ContractAccess(\"@1ProfileEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `member_info`\r\n            UpdatePerm = `ContractAccess(\"@1ProfileEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `member_name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================MENU============================================================================\r\n        TableName  = `menu`\r\n        InsertPerm = `ContractAccess(\"@1NewMenu\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditMenu\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `title`\r\n            UpdatePerm = `ContractAccess(\"@1EditMenu\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1EditMenu\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================METRICS=========================================================================\r\n        TableName  = `metrics`\r\n        InsertPerm = `ContractAccess(\"@1UpdateMetrics\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `key`\r\n            UpdatePerm = `ContractAccess(\"@1UpdateMetrics\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `metric`\r\n            UpdatePerm = `ContractAccess(\"@1UpdateMetrics\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `time`\r\n            UpdatePerm = `ContractAccess(\"@1UpdateMetrics\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1UpdateMetrics\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================NODE_BAN_LOGS===================================================================\r\n        TableName  = `node_ban_logs`\r\n        InsertPerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `ban_time`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `banned_at`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `node_id`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `reason`\r\n            UpdatePerm = `ContractAccess(\"@1CheckNodesBan\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================NOTIFICATIONS===================================================================\r\n        TableName  = `notifications`\r\n        InsertPerm = `ContractAccess(\"@1NotificationsSend\",\"@1CheckNodesBan\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `closed`\r\n            UpdatePerm = `ContractAccess(\"@1NotificationsClose\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_closed`\r\n            UpdatePerm = `ContractAccess(\"@1NotificationsClose\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_start_processing`\r\n            UpdatePerm = `ContractAccess(\"@1NotificationsClose\",\"@1NotificationsProcess\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `notification`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `page_name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `page_params`\r\n            UpdatePerm = `ContractAccess(\"@1NotificationsUpdateParams\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `processing_info`\r\n            UpdatePerm = `ContractAccess(\"@1NotificationsClose\",\"@1NotificationsProcess\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `recipient`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `sender`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================PAGES===========================================================================\r\n        TableName  = `pages`\r\n        InsertPerm = `ContractAccess(\"@1NewPage\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `app_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditPage\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `menu`\r\n            UpdatePerm = `ContractAccess(\"@1EditPage\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `validate_count`\r\n            UpdatePerm = `ContractAccess(\"@1EditPage\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `validate_mode`\r\n            UpdatePerm = `ContractAccess(\"@1EditPage\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1EditPage\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================PARAMETERS======================================================================\r\n        TableName  = `parameters`\r\n        InsertPerm = `ContractAccess(\"@1NewParameter\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1EditParameter\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `permissions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1EditParameter\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================ROLES===========================================================================\r\n        TableName  = `roles`\r\n        InsertPerm = `ContractAccess(\"@1RolesCreate\",\"@1DeployRoles\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `creator`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_deleted`\r\n            UpdatePerm = `ContractAccess(\"@1RolesDelete\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `default_page`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1RolesDelete\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `image_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `role_name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `role_type`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `roles_access`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================ROLES_PARTICIPANTS==============================================================\r\n        TableName  = `roles_participants`\r\n        InsertPerm = `ContractAccess(\"@1RolesAssign\",\"@1DeployRoles\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `appointed`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_deleted`\r\n            UpdatePerm = `ContractAccess(\"@1RolesUnassign\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1RolesUnassign\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `member`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `role`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================SECTIONS========================================================================\r\n        TableName  = `sections`\r\n        InsertPerm = `ContractAccess(\"@1NewSection\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `ecosystem`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `page`\r\n            UpdatePerm = `ContractAccess(\"@1EditSection\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `roles_access`\r\n            UpdatePerm = `ContractAccess(\"@1SectionRoles\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `status`\r\n            UpdatePerm = `ContractAccess(\"@1EditSection\",\"@1NewSection\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `title`\r\n            UpdatePerm = `ContractAccess(\"@1EditSection\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `urlname`\r\n            UpdatePerm = `ContractAccess(\"@1EditSection\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n\r\n        //====================================SYSTEM_PARAMETERS===============================================================\r\n        TableName  = `system_parameters`\r\n        InsertPerm = `false`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `ContractAccess(\"@1UpdateSysParam\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `ContractAccess(\"@1UpdateSysParam\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //====================================================================================================================\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "DeployRoles",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract DeployRoles {\r\n\r\n    func updateAppParam(name string, value int, appId int) {\r\n        var app_param map\r\n        app_param = DBFind(\"app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": appId, \"name\": name}).Row()\r\n        if app_param {\r\n            var params map\r\n            params[\"Id\"] = Int(app_param[\"id\"])\r\n            params[\"Value\"] = value\r\n            params[\"Conditions\"] = \"ContractConditions(\\\"@1AdminCondition\\\")\"\r\n            CallContract(\"EditAppParam\", params)\r\n        } else {\r\n            var params map\r\n            params[\"ApplicationId\"] = appId\r\n            params[\"Name\"] = name\r\n            params[\"Value\"] = value\r\n            params[\"Conditions\"] = \"ContractConditions(\\\"@1AdminCondition\\\")\"\r\n            CallContract(\"NewAppParam\", params)\r\n        }\r\n    }\r\n\r\n    func addRole(name string, managerId int, roleType int) int{\r\n        var m map id int\r\n        m[\"role_name\"] = name\r\n        m[\"role_type\"] = roleType\r\n        m[\"ecosystem\"] = $ecosystem_id\r\n        id = DBFind(\"roles\").Where(m).One(\"id\")\r\n        if id == nil {\r\n            m[\"default_page\"] = \"\"\r\n            m[\"deleted\"] = 0\r\n            m[\"creator->image_id\"] = 0\r\n            m[\"creator->member_name\"] = $account_id\r\n            m[\"creator->account\"] = $account_id\r\n            m[\"date_created\"] = $block_time\r\n            if managerId > 0 {\r\n                m[\"roles_access\"] = Sprintf(\"[%v]\", managerId)\r\n            } else {\r\n                m[\"roles_access\"] = \"[]\"\r\n            }\r\n            id = DBInsert(\"roles\", m)\r\n        }\r\n        return Int(id)\r\n    }\r\n\r\n    func addParticipant(roleId int){\r\n        var m map\r\n        m = DBFind(\"roles\").Where({\"id\": roleId}).Columns(\"role_name,role_type\").Row()\r\n        if m != nil {\r\n            var participant map\r\n            participant[\"role->id\"] = roleId\r\n            participant[\"member->account\"] = $account_id\r\n            participant[\"ecosystem\"] = $ecosystem_id\r\n            participant[\"deleted\"] = 0\r\n\r\n            if !DBFind(\"roles_participants\").Where(participant).One(\"id\") {   \r\n                participant[\"member->member_name\"] = $account_id\r\n                participant[\"member->image_id\"] = 0\r\n                participant[\"role->type\"] = m[\"role_type\"]\r\n                participant[\"role->name\"] = m[\"role_name\"]\r\n                participant[\"role->image_id\"] = 0 \r\n                participant[\"date_created\"] = $block_time\r\n                DBInsert(\"roles_participants\", participant)\r\n            }\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        MainCondition()\r\n        $app_system_id = Int(DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"System\"}).One(\"id\"))\r\n        $app_xreg_id = Int(DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\"))\r\n    }\r\n\r\n    action {\r\n        var roleId managerId int\r\n        managerId = addRole(\"Admin\", 0, 3)\r\n\r\n        addParticipant(managerId)\r\n        updateAppParam(\"role_admin\", managerId, $app_system_id)\r\n        updateAppParam(\"role_creates_roles\", managerId, $app_system_id)\r\n\r\n        roleId = addRole(\"Developer\", managerId, 3)\r\n        addParticipant(roleId)\r\n        updateAppParam(\"role_developer\", roleId, $app_system_id)\r\n\r\n        roleId = addRole(\"Law Firm: Junior Lawyer\", managerId, 3)\r\n        addParticipant(roleId)\r\n        updateAppParam(\"role_law_firm_junior\", roleId, $app_xreg_id)\r\n\r\n        roleId = addRole(\"Law Firm: Partner\", managerId, 3)\r\n        addParticipant(roleId)\r\n        updateAppParam(\"role_law_firm_partner\", roleId, $app_xreg_id)\r\n\r\n        roleId = addRole(\"Vendor\", managerId, 8)\r\n        addParticipant(roleId)\r\n        updateAppParam(\"role_vendor\", roleId, $app_xreg_id)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "DeploySections",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract DeploySections {\r\n    data {}\r\n\r\n    conditions {\r\n        MainCondition()\r\n    }\r\n\r\n    action {\r\n        // section Admin\r\n        var roles_access string section_admin section_developer int\r\n        section_admin = 2\r\n        roles_access = DBFind(\"sections\").Where({\"id\": section_admin}).One(\"roles_access\")\r\n\r\n        if !Contains(roles_access, \"1\") {\r\n            SectionRoles(\"Id,Rid,Operation\", section_admin, 1, \"add\")\r\n        }\r\n        if !Contains(roles_access, \"2\") {\r\n            SectionRoles(\"Id,Rid,Operation\", section_admin, 2, \"add\")\r\n        }\r\n\r\n        // section Developer\r\n        section_developer = 3\r\n        roles_access = DBFind(\"sections\").Where({\"id\": section_developer}).One(\"roles_access\")\r\n\r\n        if !Contains(roles_access, \"1\") {\r\n            SectionRoles(\"Id,Rid,Operation\", section_developer, 1, \"add\")\r\n        }\r\n        if !Contains(roles_access, \"2\") {\r\n            SectionRoles(\"Id,Rid,Operation\", section_developer, 2, \"add\")\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "DeployStylesheet",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract DeployStylesheet {\r\n\r\n    func updateEcosystemParam(name string, value string) {\r\n        var ecosystem_param map\r\n        ecosystem_param = DBFind(\"parameters\").Where({\"ecosystem\": $ecosystem_id, \"name\": name}).Row()\r\n        if ecosystem_param {\r\n            var params map\r\n            params[\"Id\"] = Int(ecosystem_param[\"id\"])\r\n            params[\"Value\"] = value\r\n            CallContract(\"EditParameter\", params)\r\n        } else {\r\n            var params map\r\n            params[\"Name\"] = name\r\n            params[\"Value\"] = value\r\n            params[\"Conditions\"] = \"ContractConditions(\\\"MainCondition\\\")\"\r\n            CallContract(\"EditParameter\", params)\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        MainCondition()\r\n        $app_xreg_id = Int(DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\"))\r\n    }\r\n\r\n    action {\r\n        var stylesheet string\r\n        stylesheet = Str(DBFind(\"app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app_xreg_id, \"name\": \"stylesheet\"}).One(\"value\"))\r\n        updateEcosystemParam(\"stylesheet\", stylesheet)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "Deploy",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract Deploy {\r\n    data {}\r\n\r\n    conditions {\r\n        MainCondition()\r\n    }\r\n\r\n    action {\r\n        DeploySystemPermissions()\r\n        //DeployXregPermissions()\r\n        DeployRoles()\r\n        DeploySections()\r\n        DeployStylesheet()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "DeployXregPermissions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract DeployXregPermissions {\r\n    data {}\r\n\r\n    conditions {\r\n        MainCondition()\r\n    }\r\n    \r\n    action {\r\n        var TableName ColumnName InsertPerm UpdatePerm ReadPerm NewColPerm string\r\n\r\n        //====================================SHARES======================================================================\r\n        TableName  = `co_shares_list`\r\n        InsertPerm = `ContractAccess(\"@1SharesEdit\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `amount`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesMemberAmount\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1SharesApprov\",\"@1SharesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1SharesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `details`\r\n            UpdatePerm = `ContractAccess(\"@1SharesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `info`\r\n            UpdatePerm = `ContractAccess(\"@1SharesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `ContractAccess(\"@1SharesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `total_amount`\r\n            UpdatePerm = `ContractAccess(\"@1SharesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================COMPANIES LIST====================================================================\r\n        TableName  = `companies_list`\r\n        InsertPerm = `ContractAccess(\"@1CompanyEdit\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `address`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyApprov\",\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `legal_form`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `license`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `registration`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `settings`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `trader_name`\r\n            UpdatePerm = `ContractAccess(\"@1CompanyEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================COMPANIES ORDERS==================================================================\r\n        TableName  = `companies_orders_securities`\r\n        InsertPerm = `ContractAccess(\"@1SecuritiesOrderTransfer\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `file_id`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `new_owner`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_amount`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_date`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_signs`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderSign\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `previous_owner`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `shares_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `status`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesOrderSign\",\"@1SecuritiesOrderTransferEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================COMPANIES SECURITIES==================================================================\r\n        TableName  = `companies_securities`\r\n        InsertPerm = `ContractAccess(\"@1SecuritiesEdit\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `balance`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryRecount\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `info`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `owner`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `share_percent`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesMemberAmount\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `shares_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================COMPANIES SECURITIES HISTORY==================================================================\r\n        TableName  = `companies_securities_history`\r\n        InsertPerm = `ContractAccess(\"@1SecuritiesHistoryEdit\",\"@1SecuritiesTransfer\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryApprov\",\"@1SecuritiesHistoryEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `history_balance`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryRecount\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `history_block`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `history_percent`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryRecount\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_amount`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_comments`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_date`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `order_type`\r\n            UpdatePerm = `ContractAccess(\"@1SecuritiesHistoryEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `owner`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `security_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `shares_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `transaction_type`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================MEETING LIST==================================================================\r\n        TableName  = `meetings_list`\r\n        InsertPerm = `ContractAccess(\"@1MeetingEdit\",\"@1MeetingStopBdAgenda\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `agenda`\r\n            UpdatePerm = `ContractAccess(\"@1MeetingEdit\",\"@1MeetingRecalcResults\",\"@1MeetingStartShQuestions\",\"@1MeetingStopBdAgenda\",\"@1MeetingStopBdQuestions\",\"@1MeetingStopShQuestions\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `history_block`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `matters`\r\n            UpdatePerm = `ContractAccess(\"@1MeetingEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `meeting_bd`\r\n            UpdatePerm = `ContractAccess(\"@1MeetingEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `meeting_shareholders`\r\n            UpdatePerm = `ContractAccess(\"@1MeetingEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `meeting_type`\r\n            UpdatePerm = `ContractAccess(\"@1MeetingUpdateStatuses\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `status`\r\n            UpdatePerm = `ContractAccess(\"@1MeetingUpdateStatuses\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================MEETING PARTICIPANTS==================================================================\r\n        TableName  = `meetings_participants`\r\n        InsertPerm = `ContractAccess(\"@1MeetingAccept\",\"@1MeetingReject\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `date_decision`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `decision`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `meeting_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `meeting_type`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `participant`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `point_index`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `shares_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================POA LIST==================================================================\r\n        TableName  = `poa_list`\r\n        InsertPerm = `ContractAccess(\"@1PoaEdit\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1PoaApprov\",\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_end`\r\n            UpdatePerm = `ContractAccess(\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_start`\r\n            UpdatePerm = `ContractAccess(\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `file_id`\r\n            UpdatePerm = `ContractAccess(\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `flags`\r\n            UpdatePerm = `ContractAccess(\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `recipient`\r\n            UpdatePerm = `ContractAccess(\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `sender`\r\n            UpdatePerm = `ContractAccess(\"@1PoaEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `status`\r\n            UpdatePerm = `ContractAccess(\"@1PoaDel\",\"@1PoaEdit\",\"@1PoaUse\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================SECURITY INTERMEDIATE DATA (EXCEL)==================================================================\r\n        TableName  = `security_intermediate_data`\r\n        InsertPerm = `ContractAccess(\"@1ExcelParse\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `amount`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `comments`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1UploadFileExcel\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `manager`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `owner`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `securities_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================VENDOR ENTITY EDIT==================================================================\r\n        TableName  = `settings_entity_edit`\r\n        InsertPerm = `ContractAccess(\"@1SettingEntityEdit\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1SettingEntityEditSign\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `conditions`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `info`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `sender`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `type`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `value`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================SUPPORT==================================================================\r\n        TableName  = `settings_support`\r\n        InsertPerm = `ContractAccess(\"@1SettingSupportMessSend\",\"@1SettingSupportSend\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `date_closed`\r\n            UpdatePerm = `ContractAccess(\"@1SettingSupportMessSend\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `inquiry_info`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `processing_info`\r\n            UpdatePerm = `ContractAccess(\"@1SettingSupportMessSend\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `role_recipient`\r\n            UpdatePerm = `ContractAccess(\"@1SettingSupportMessSend\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `sender`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `status`\r\n            UpdatePerm = `ContractAccess(\"@1SettingSupportMessSend\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================SUPPORT SEND MASSEGE==================================================================\r\n        TableName  = `settings_support_messanges`\r\n        InsertPerm = `ContractAccess(\"@1SettingSupportMessSend\",\"@1SettingSupportSend\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `id_inquiry`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `messange_date`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `messange_text`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `sender`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================TIMER=============================================================================\r\n        TableName  = `timer_test`\r\n        InsertPerm = `ContractAccess(\"@1MeetingUpdateStatuses\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n\r\n        //====================================VOTING ISSUES=====================================================================\r\n        TableName  = `voting_issues`\r\n        InsertPerm = `ContractAccess(\"@1IssuesEdit\",\"@1IssuesInstall\")`\r\n        UpdatePerm = `true`\r\n        NewColPerm = `ContractConditions(\"@1AdminCondition\")`\r\n        ReadPerm   = `true`\r\n        EditTable(\"Name,InsertPerm,UpdatePerm,ReadPerm,NewColumnPerm\", TableName, InsertPerm, UpdatePerm, ReadPerm, NewColPerm)\r\n\r\n            ColumnName = `approval_flags`\r\n            UpdatePerm = `ContractAccess(\"@1IssuesApprov\",\"@1IssuesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `company_id`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_created`\r\n            UpdatePerm = `false`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `date_deleted`\r\n            UpdatePerm = `ContractAccess(\"@1IssuesDel\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `deleted`\r\n            UpdatePerm = `ContractAccess(\"@1IssuesDel\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `description`\r\n            UpdatePerm = `ContractAccess(\"@1IssuesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `name`\r\n            UpdatePerm = `ContractAccess(\"@1IssuesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n\r\n            ColumnName = `settings`\r\n            UpdatePerm = `ContractAccess(\"@1IssuesEdit\")`\r\n            ReadPerm   = `true`\r\n            EditColumn(\"TableName,Name,UpdatePerm,ReadPerm\", TableName, ColumnName, UpdatePerm, ReadPerm)\r\n        //======================================================================================================================\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "ExcelParse",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract ExcelParse {\r\n    data {\r\n        CompanyId int\r\n        ApplicationId int\r\n        SecuritiesId int\r\n    }\r\n\r\n    func parseName(rows array) map {\r\n        var i int row array line_name sharholder_wallet string\r\n\r\n        i = 0\r\n        while true {\r\n            row = rows[i]\r\n            line_name = Str(row[0])\r\n            if line_name == \"Wallet\" {\r\n                sharholder_wallet = Str(row[1])\r\n                return sharholder_wallet\r\n                break\r\n            } else {\r\n                if i > 50 {\r\n                    warning LangRes(\"column_wallet_not_found\", \"en\")\r\n                } else {\r\n                    i = i + 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    func parseColumns(rows array) map {\r\n        var i l int row row_col line_value array line_name col_name string columns_info map\r\n\r\n        i = 0\r\n        while true {\r\n            row = rows[i]\r\n            line_name = Str(row[0])\r\n            if line_name == \"Date\" {\r\n                columns_info[\"column_date\"] = 0\r\n                columns_info[\"line_date\"] = i\r\n                $columnCount = Len(rows[i])\r\n                line_value = rows[i]\r\n                l = 0\r\n                while l < Int($columnCount) {\r\n                    row_col = line_value[l]\r\n                    if row_col == \"Amount\" {\r\n                        columns_info[\"column_amount\"] = l\r\n                    }\r\n\r\n                    if row_col == \"Comments\" {\r\n                        columns_info[\"column_comments\"] = l\r\n                    }\r\n                    l = l + 1\r\n                }\r\n                if Str(columns_info[\"column_amount\"]) == \"\" {\r\n                    warning LangRes(\"column_amount_not_found\", \"en\")\r\n                }\r\n                if Str(columns_info[\"column_comments\"]) == \"\" {\r\n                    warning LangRes(\"column_comments_not_found\", \"en\")\r\n                }\r\n                return columns_info\r\n            } else {\r\n                if i > 50 {\r\n                    if Str(columns_info[\"line_date\"]) == \"\" {\r\n                        warning LangRes(\"column_date_not_found\", \"en\")\r\n                    }\r\n                    break\r\n                } else {\r\n                    i = i + 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    func parseData(rows array, count int, columns_info map, sharholder_wallet string) map {\r\n        var i line_amount int row array line_date map\r\n        $start_data_line = Int(columns_info[\"line_date\"]) + 1\r\n        i = Int($start_data_line)\r\n        while i < count {\r\n            row = rows[i]\r\n            line_date[\"date\"] = Str(row[Int(columns_info[\"column_date\"])])\r\n            line_date[\"date\"] = Int((line_date[\"date\"] - 25569) * 86400)\r\n            line_amount = Str(row[Int(columns_info[\"column_amount\"])])\r\n            line_amount = Int(Str(Replace(line_amount, \".\", \"\")))\r\n            line_date[\"amount\"] = line_amount\r\n            line_date[\"comments\"] = Str(row[Int(columns_info[\"column_comments\"])])\r\n            line_date[\"owner\"] = sharholder_wallet\r\n            line_date[\"company_id\"] = $CompanyId\r\n            line_date[\"manager\"] = $account_id\r\n            line_date[\"securities_id\"] = $SecuritiesId\r\n            DBInsert(\"security_intermediate_data\",line_date)\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        $check_binary = Int(DBFind(\"binaries\").Where({\"name\":\"security_sharholders_excel\",\"account\":$account_id,\"ecosystem\":$ecosystem_id,\"app_id\":$ApplicationId}).One(\"id\"))\r\n        if $check_binary == 0 {\r\n            warning LangRes(\"file\", \"en\") + \" \" + LangRes(\"not_found\", \"en\")\r\n        }\r\n        $BinId = $check_binary\r\n    }\r\n\r\n    action {\r\n        var line count sheet int rows array sharholder_wallet string columns_info map\r\n        sheet = 1\r\n        count = Int(Str(GetRowsCountXLSX($BinId, sheet)))\r\n        rows = GetDataFromXLSX($BinId, line, count, sheet)\r\n        sharholder_wallet = parseName(rows)\r\n        $check_member = DBFind(\"keys\").Where({\"account\": sharholder_wallet, \"deleted\": 0, \"ecosystem\": $ecosystem_id})\r\n        if $check_member {\r\n            $check_security_owner = DBFind(\"companies_securities\").WhereId($SecuritiesId).One(\"owner\")\r\n            if $check_security_owner != sharholder_wallet {\r\n                warning LangRes(\"sharholdes_different_address\", \"en\")\r\n            }\r\n            columns_info = parseColumns(rows)\r\n            $st = parseData(rows,count,columns_info,sharholder_wallet)\r\n        } else{\r\n            warning LangRes(\"member_not_found\", \"en\")\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesHistoryRecount",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesHistoryRecount {\r\n    data {\r\n        SecuritiesId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1SecuritiesHistoryEdit\",\"@1SecuritiesTransfer\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"Balance recount cannot be performed\"\r\n        }\r\n    }\r\n\r\n\r\n    conditions {\r\n        getPermission()\r\n    }\r\n\r\n    action {\r\n        var securities array\r\n        securities = DBFind(\"companies_securities_history\").Where({\"security_id\": $SecuritiesId}).Columns(\"id,order_amount,order_type\").Order(\"id\")\r\n\r\n        var i history_balance int\r\n        while i < Len(securities) {\r\n            var security map\r\n            security = securities[i]\r\n\r\n            if Int(security[\"order_type\"]) == 1 {\r\n                history_balance = history_balance + Int(security[\"order_amount\"])\r\n            } else {\r\n                history_balance = history_balance - Int(security[\"order_amount\"])\r\n            }\r\n\r\n            $check_amount_securities = DBFind(\"companies_securities\").WhereId($SecuritiesId).Row()\r\n            $shares_id = Int($check_amount_securities[\"shares_id\"])\r\n            $check_amount_total = DBFind(\"co_shares_list\").WhereId(Int($shares_id)).Row()\r\n            $history_percent = (Float(history_balance) / Float($check_amount_total[\"total_amount\"])) * Float(100)\r\n\r\n            DBUpdate(\"companies_securities_history\", Int(security[\"id\"]), {\"history_balance\": history_balance,\"history_percent\": $history_percent})\r\n            \r\n            i = i + 1\r\n        }\r\n\r\n        DBUpdate(\"companies_securities\", $SecuritiesId, {\"balance\": history_balance})\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "FormStateSave",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract FormStateSave {\r\n    data {\r\n        FormName string\r\n        ParamNames string\r\n        Param1 string \"optional\"\r\n        Param2 string \"optional\"\r\n        Param3 string \"optional\"\r\n        Param4 string \"optional\"\r\n        Param5 string \"optional\"\r\n        Param6 string \"optional\"\r\n        Param7 string \"optional\"\r\n        Param8 string \"optional\"\r\n        Param9 string \"optional\"\r\n        Param10 string \"optional\"\r\n        Param11 string \"optional\"\r\n        Param12 string \"optional\"\r\n        Param13 string \"optional\"\r\n        Param14 string \"optional\"\r\n        Param15 string \"optional\"\r\n        Param16 string \"optional\"\r\n        Param17 string \"optional\"\r\n        Param18 string \"optional\"\r\n        Param19 string \"optional\"\r\n        Param20 string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        if $FormName == \"\" {\r\n            warning LangRes(\"form_state_name_needed\", \"en\")\r\n        }\r\n        if $ParamNames == \"\" {\r\n            warning LangRes(\"form_state_param_names_needed\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var values string\r\n        values = $Param1+\";\"+$Param2+\";\"+ $Param3+\";\"+ $Param4+\";\"+ $Param5+\";\"+ $Param6+\";\"+$Param7+\";\"+$Param8+\";\"+$Param9+\";\"+$Param10+\";\"+$Param11+\";\"+$Param12+\";\"+$Param13+\";\"+ $Param14+\";\"+ $Param15+\";\"+ $Param16+\";\"+$Param17+\";\"+$Param18+\";\"+$Param19+\";\"+$Param20\r\n        $ParamValue = Split(values, \";\")\r\n        $ParamName = Split($ParamNames, \";\")\r\n        var buffer_data map, i int\r\n        i = 0\r\n        while i < Len($ParamName) {\r\n            buffer_data[$ParamName[i]] = $ParamValue[i]\r\n            i = i + 1\r\n        }\r\n        BufferManager(\"Action,Key,Val\", \"set\", $FormName, JSONEncode(buffer_data))\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsClose",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract NotificationsClose {\r\n    data {\r\n        NotificId int\r\n    }\r\n\r\n    func getPermission() int {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1TokensRefundAccept\", \"@1TokensRefundReject\", \"@1VotingDecisionCheck\", \"@1VotingDelete\", \"@1QAnswer\", \"@1QOperations\", \"@1ErrandDelete\", \"@1GroupRequestDecide\", \"@1SecuritiesOrderSign\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n        return result\r\n    }\r\n\r\n    conditions {\r\n        $notify = DBFind(\"notifications\").Where({\"ecosystem\": $ecosystem_id, \"id\": $NotificId}).Columns(\"id,date_start_processing,processing_info->account,closed,notification->type,recipient->account,recipient->role_id\").Row()\r\n        if !$notify {\r\n            warning LangRes(\"notification_not_found\", \"en\")\r\n        }\r\n\r\n        // checking the type of notification\r\n        if $notify[\"notification.type\"] != 1 && $notify[\"notification.type\"] != 2 {\r\n            warning LangRes(\"notification_type_not_found\", \"en\")\r\n        }\r\n\r\n        // getting permission\r\n        var flag_permission int\r\n        flag_permission = getPermission()\r\n\r\n        // checking personal notification\r\n        if $notify[\"notification.type\"] == 1 && flag_permission == 0 {\r\n            if $notify[\"recipient.account\"] != $account_id {\r\n                warning LangRes(\"notification_another_member\", \"en\")\r\n            }\r\n        }\r\n\r\n        // checking role notification\r\n        if $notify[\"notification.type\"] == 2 && flag_permission == 0 {\r\n            if $notify[\"date_start_processing\"] == 0 {\r\n                warning LangRes(\"notification_processing_not_started\", \"en\")\r\n            }\r\n\r\n            if $notify[\"processing_info.account\"] != $account_id {\r\n                warning LangRes(\"notice_processing_started_another_member\", \"en\")\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $notify[\"closed\"] > 0 {\r\n            return\r\n        }\r\n        if $notify[\"notification.type\"] == 1 {\r\n            NotificationsProcess(\"NotificId\", $NotificId)\r\n        }\r\n        var m map\r\n        m[\"date_closed\"] = $block_time\r\n        m[\"closed\"] = 1\r\n        DBUpdate(\"notifications\", $NotificId, m)\r\n\r\n        if $notify[\"notification.type\"] == 1 {\r\n            UpdateNotifications($ecosystem_id, $notify[\"recipient.account\"])\r\n        } else {\r\n            UpdateRolesNotifications($ecosystem_id, Int($notify[\"recipient.role_id\"]))\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsSend",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract NotificationsSend {\r\n    data {\r\n        MemberAccount string \"optional\"\r\n        Rid int \"optional\"\r\n        GroupId int \"optional\"\r\n        Closure int \"optional\"\r\n        Sender int\r\n        Icon string \"optional\"\r\n        Header string\r\n        Body string \"optional\"\r\n        Page string\r\n        Params string // json encoded expected\r\n        CurrentRid int \"optional\"\r\n        EcosystemId int \"optional\"\r\n        Popup string \"optional\"\r\n    }\r\n\r\n    func getMemberInfo(kid string, ecoId int) map {\r\n        var res member map\r\n        member = DBFind(\"members\").Where({\"ecosystem\": ecoId, \"account\": kid}).Row()\r\n        if member {\r\n            res[\"account\"] = member[\"account\"]\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            if DBFind(\"keys\").Where({\"ecosystem\": ecoId, \"account\": kid, \"deleted\": 0}).Columns(\"id\").Row() {\r\n                res[\"account\"] = Str(kid)\r\n                res[\"member_name\"] = Str(kid)\r\n                res[\"image_id\"] = \"0\"\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    func sendNotify(recipient map) {\r\n        var notification map\r\n        notification[\"header\"] = $Header\r\n        notification[\"type\"] = $notify_type\r\n        notification[\"icon\"] = $Icon\r\n        notification[\"body\"] = $Body\r\n        if $Popup == \"true\" || $Popup == \"1\" {\r\n            notification[\"popup\"] = 1\r\n        } else {\r\n            notification[\"popup\"] = 0\r\n        }\r\n        var sender map\r\n        if $Sender == 1 && $senderMember {\r\n            // send from member\r\n            sender[\"type\"] = $Sender\r\n            sender[\"account\"] = $senderMember[\"account\"]\r\n            sender[\"member_name\"] = $senderMember[\"member_name\"]\r\n            sender[\"image_id\"] = $senderMember[\"image_id\"]\r\n        } else {\r\n            if $Sender == 2 && $senderRole {\r\n                // send from role\r\n                sender[\"type\"] = $Sender\r\n                sender[\"role_id\"] = $senderRole[\"id\"]\r\n                sender[\"role_name\"] = $senderRole[\"role_name\"]\r\n                sender[\"image_id\"] = $senderRole[\"image_id\"]\r\n            }\r\n        }\r\n        var model map\r\n        model[\"recipient\"] = recipient\r\n        model[\"sender\"] = sender\r\n        model[\"notification\"] = notification\r\n        model[\"page_name\"] = $Page\r\n        model[\"page_params\"] = $Params\r\n        model[\"date_created\"] = $block_time\r\n        model[\"ecosystem\"] = $EcosystemId\r\n        DBInsert(\"notifications\", model)\r\n    }\r\n\r\n    func sendToRole(roleId, ecoId int) {\r\n        var role recipient map\r\n        role = DBFind(\"roles\").Where({\"ecosystem\": ecoId, \"id\": roleId}).Row()\r\n        recipient[\"role_id\"] = role[\"id\"]\r\n        recipient[\"role_name\"] = role[\"role_name\"]\r\n        recipient[\"image_id\"] = role[\"image_id\"]\r\n        sendNotify(recipient)\r\n    }\r\n\r\n    conditions {\r\n        if $EcosystemId == 0 {\r\n            $EcosystemId = $ecosystem_id\r\n        }\r\n        if Size($Icon) < 1 {\r\n            $Icon = \"icon-envelope\"\r\n        }\r\n        if Size($MemberAccount) > 0 {\r\n            if !DBFind(\"keys\").Where({\"ecosystem\": $EcosystemId, \"account\": $MemberAccount, \"deleted\": 0}).Row() {\r\n                warning LangRes(\"key_not_found\", \"en\")\r\n            }\r\n            $notify_type = 1\r\n        } elif $Rid > 0 {\r\n            $notify_type = 2\r\n            if !DBFind(\"roles\").Where({\"ecosystem\": $EcosystemId, \"id\": $Rid}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"recipient_role_not_found\", \"en\")\r\n            }\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $EcosystemId, \"role->id\": $Rid, \"deleted\": 0}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"recipient_role_no_members\", \"en\")\r\n            }\r\n        } elif $GroupId > 0 {\r\n            $notify_type = 1\r\n            if !DBFind(\"groups\").Where({\"ecosystem\": $EcosystemId, \"id\": $GroupId}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"recipient_group_not_found\", \"en\")\r\n            }\r\n            if !DBFind(\"groups_participants\").Where({\"ecosystem\": $EcosystemId, \"groups_info->id\": $GroupId, \"deleted\": 0}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"recipient_group_no_members\", \"en\")\r\n            }\r\n        } else {\r\n            warning $this_contract + \": \" + LangRes(\"notification_type_not_defined\", \"en\")\r\n        }\r\n        $senderMember = nil\r\n        $senderRole = nil\r\n        if $Sender == 1 {\r\n            $senderMember = getMemberInfo($account_id, $ecosystem_id)\r\n        } elif $Sender == 2 {\r\n            $senderRole = DBFind(\"roles\").Where({\"ecosystem\": $ecosystem_id, \"id\": $CurrentRid}).Row()\r\n            if !$senderRole {\r\n                warning $this_contract + \": \" + LangRes(\"sender_role_not_found\", \"en\")\r\n            }\r\n        } else {\r\n            warning $this_contract + \": \" + LangRes(\"sender_invalid\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        if Size($MemberAccount) > 0 {\r\n            sendNotify(getMemberInfo($MemberAccount, $EcosystemId))\r\n            UpdateNotifications($EcosystemId, $MemberAccount)\r\n        } elif $Rid > 0 {\r\n            if $Closure == 1 {\r\n                // Single closure: one begins the process - the others do not see\r\n                sendToRole($Rid, $EcosystemId)\r\n                UpdateRolesNotifications($EcosystemId, Int($Rid))\r\n            } else {\r\n                // Multiple closure: to each his own notification\r\n                $notify_type = 1\r\n                var participants array\r\n                participants = DBFind(\"roles_participants\").Where({\"ecosystem\": $EcosystemId, \"role->id\": $Rid, \"deleted\": 0}).Columns(\"member->account\")\r\n                var i int\r\n                while i < Len(participants) {\r\n                    var p map\r\n                    p = participants[i]\r\n                    sendNotify(getMemberInfo(p[\"member.account\"], $EcosystemId))\r\n                    UpdateNotifications($EcosystemId, p[\"member.account\"])\r\n                    i = i + 1\r\n                }\r\n            }\r\n        } elif $GroupId > 0 {\r\n            var participants array\r\n            participants = DBFind(\"groups_participants\").Where({\"ecosystem\": $EcosystemId, \"groups_info->id\": $GroupId, \"deleted\": 0}).Columns(\"member->account\")\r\n            var i int\r\n            while i < Len(participants) {\r\n                var p map\r\n                p = participants[i]\r\n                sendNotify(getMemberInfo(p[\"member.account\"], $EcosystemId))\r\n                UpdateNotifications($EcosystemId, p[\"member.account\"])\r\n                i = i + 1\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsPartner",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract NotificationsPartner {\r\n    data {\r\n        PageName string\r\n        Action string\r\n\r\n        CompanyId int \"optional\"\r\n        SecuritiesId int \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n    }\r\n\r\n    action {\r\n        if $Action == \"Send\" {\r\n            if $CompanyId == 0 {\r\n                $check_send_notifications = DBFind(\"@1notifications\").Where({\"recipient->role_id\":$role_law_firm_partner,\"closed\":0,\"page_params->step\":\"review\",\"page_name\":$PageName}).One(\"id\")\r\n                if $check_send_notifications == nil {\r\n                    //send notification Partner\r\n                    var param map\r\n                    param[\"step\"] = \"review\"\r\n                    @1NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Closure,EcosystemId,Params\", Int($role_law_firm_partner), 2, Int($role_law_firm_junior), \"icon icon-envelope-open\", \"Review informations\", LangRes(\"@1details_view\", \"en\"), $PageName, 1, $ecosystem_id, param)\r\n                }\r\n            } elif $SecuritiesId > 0 {\r\n                $check_send_notifications = DBFind(\"@1notifications\").Where({\"recipient->role_id\":$role_law_firm_partner,\"page_params->company_id\":$CompanyId,\"page_params->securities_id\":$SecuritiesId,\"closed\":0,\"page_params->step\":\"review\",\"page_name\":$PageName}).One(\"id\")\r\n                if $check_send_notifications == nil {\r\n                    //send notification Partner\r\n                    var param map\r\n                    param[\"company_id\"] = $CompanyId\r\n                    param[\"securities_id\"] = $SecuritiesId\r\n                    param[\"step\"] = \"review\"\r\n                    @1NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Closure,EcosystemId,Params\", Int($role_law_firm_partner), 2, Int($role_law_firm_junior), \"icon icon-envelope-open\", \"Review informations\", LangRes(\"@1details_view\", \"en\"), $PageName, 1, $ecosystem_id, param)\r\n                }\r\n            } else {\r\n                $check_send_notifications = DBFind(\"@1notifications\").Where({\"recipient->role_id\":$role_law_firm_partner,\"page_params->company_id\":$CompanyId,\"closed\":0,\"page_params->step\":\"review\",\"page_name\":$PageName}).One(\"id\")\r\n                if $check_send_notifications == nil {\r\n                    //send notification Partner\r\n                    var param map\r\n                    param[\"company_id\"] = $CompanyId\r\n                    param[\"step\"] = \"review\"\r\n                    @1NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Closure,EcosystemId,Params\", Int($role_law_firm_partner), 2, Int($role_law_firm_junior), \"icon icon-envelope-open\", \"Review informations\", LangRes(\"@1details_view\", \"en\"), $PageName, 1, $ecosystem_id, param)\r\n                }\r\n            }\r\n        }\r\n        if $Action == \"Closed\" {\r\n            if $CompanyId == 0 {\r\n                var notes array i int\r\n                notes = DBFind(\"@1notifications\").Where({\"closed\": 0,\"ecosystem\":$ecosystem_id,\"page_name\":$PageName,\"page_params->step\":\"review\"})\r\n                while i < Len(notes){\r\n                    var note map\r\n                    note = notes[i]\r\n                    @1NotificationsProcess(\"NotificId\", Int(note[\"id\"]))\r\n                    @1NotificationsClose(\"NotificId\", Int(note[\"id\"]))\r\n                    i = i + 1\r\n                }\r\n            } elif $SecuritiesId > 0 { \r\n                var notes array i int\r\n                notes = DBFind(\"@1notifications\").Where({\"closed\": 0,\"ecosystem\":$ecosystem_id,\"page_name\":$PageName,\"page_params->company_id\":$CompanyId,\"page_params->securities_id\":$SecuritiesId,\"page_params->step\":\"review\"})\r\n                while i < Len(notes){\r\n                    var note map\r\n                    note = notes[i]\r\n                    @1NotificationsProcess(\"NotificId\", Int(note[\"id\"]))\r\n                    @1NotificationsClose(\"NotificId\", Int(note[\"id\"]))\r\n                    i = i + 1\r\n                }\r\n            } else {\r\n                var notes array i int\r\n                notes = DBFind(\"@1notifications\").Where({\"closed\": 0,\"ecosystem\":$ecosystem_id,\"page_name\":$PageName,\"page_params->company_id\":$CompanyId,\"page_params->step\":\"review\"})\r\n                while i < Len(notes){\r\n                    var note map\r\n                    note = notes[i]\r\n                    @1NotificationsProcess(\"NotificId\", Int(note[\"id\"]))\r\n                    @1NotificationsClose(\"NotificId\", Int(note[\"id\"]))\r\n                    i = i + 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "CompanyApprov",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract CompanyApprov {\r\n    data {\r\n        Id int\r\n        Step int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Step) == 1 {\r\n            m[\"approval_flags->name\"] = 1\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"approval_flags->legal\"] = 1\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"approval_flags->address\"] = 1\r\n        }\r\n        if Int($Step) == 4 {\r\n            m[\"approval_flags->registration\"] = 1\r\n        }\r\n        if Int($Step) == 5 {\r\n            m[\"approval_flags->license\"] = 1\r\n        }\r\n        DBUpdate(\"companies_list\", Int($Id), m)\r\n\r\n        $check_review = DBFind(\"companies_list\").Columns(\"approval_flags->name,approval_flags->legal,approval_flags->address,approval_flags->registration,approval_flags->license\").WhereId($Id).Row()\r\n        if Int($check_review[\"approval_flags.name\"]) == 1 && Int($check_review[\"approval_flags.legal\"]) == 1 && Int($check_review[\"approval_flags.address\"]) == 1 && Int($check_review[\"approval_flags.registration\"]) == 1 && Int($check_review[\"approval_flags.license\"]) == 1 {\r\n            NotificationsPartner(\"CompanyId,PageName,Action\",Int($Id),\"co_view\",\"Closed\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "IssuesSharesManager",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract IssuesSharesManager {\r\n    data {\r\n        ShareId int\r\n        Action string\r\n        NeedRefresh int\r\n        CurrentValue string\r\n    }\r\n\r\n    conditions {\r\n        var buffer map\r\n        buffer = DBFind(\"buffer_data\").Where({\"ecosystem\": $ecosystem_id, \"key\": \"shares_select\", \"account\": $account_id}).Columns(\"id,value\").Row()\r\n\r\n        if buffer {\r\n            $buffer_value = buffer[\"value\"]\r\n            $buffer_id = buffer[\"id\"]\r\n        } else {\r\n            $buffer_value = \"[]\"\r\n            $buffer_id = 0\r\n        }\r\n\r\n        if $NeedRefresh == 1 {\r\n            $buffer_value = $CurrentValue\r\n        }\r\n    }\r\n\r\n    action {\r\n        var shares_arr shares_new_arr array\r\n        shares_arr = JSONDecode($buffer_value)\r\n\r\n        if $Action == \"add\" {\r\n            var i int\r\n            while i < Len(shares_arr) {\r\n                if shares_arr[i] != $ShareId && shares_arr[i] != 0 {\r\n                    shares_new_arr = Append(shares_new_arr, shares_arr[i])\r\n                }\r\n                i = i + 1\r\n            }\r\n            if $ShareId != 0 {\r\n                shares_new_arr = Append(shares_new_arr, $ShareId)\r\n            }\r\n        }\r\n\r\n        if $Action == \"remove\" {\r\n            var i int\r\n            while i < Len(shares_arr) {\r\n                if shares_arr[i] != $ShareId && $ShareId != 0 {\r\n                    shares_new_arr = Append(shares_new_arr, shares_arr[i])\r\n                }\r\n                i = i + 1\r\n            }\r\n        }\r\n\r\n        var shares_new_str string\r\n        shares_new_str = JSONEncode(shares_new_arr)\r\n        @1BufferManager(\"Action,Key,Val\", \"set\", \"shares_select\", shares_new_str)\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "PoaUse",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaUse {\r\n    data {\r\n        CompanyId int\r\n        PoaSender string\r\n        ActionType string\r\n    }\r\n\r\n    conditions {\r\n        $POA_STATUS_ISSUED = 1\r\n        $POA_STATUS_ACTIVE = 2\r\n        $POA_STATUS_EXPIRED = 3\r\n        $POA_STATUS_REVOKED = 4\r\n\r\n        $ACTION_TYPE_BIDDING = \"bidding\"\r\n        $ACTION_TYPE_MEETING = \"meeting\"        \r\n\r\n        $poa = DBFind(\"poa_list\").Where({\"sender\": $PoaSender, \"recipient\": $account_id, \"company_id\": $CompanyId, \"status\": {\"$neq\": 4}}).Columns(\"id,status,date_start,date_end,flags->meeting,flags->bidding,approval_flags->file,approval_flags->sender,approval_flags->recipient,approval_flags->details\").Row()\r\n\r\n        if !$poa {\r\n            warning Sprintf(\"POA NOT FOUND! Shareholder [%v] did not give you a Power of Attorney.\", $PoaSender) \r\n        }\r\n\r\n        if Int($poa[\"approval_flags.file\"]) != 1 || Int($poa[\"approval_flags.sender\"]) != 1 || Int($poa[\"approval_flags.recipient\"]) != 1 || Int($poa[\"approval_flags.details\"]) != 1 {\r\n            warning \"IMPOSSIBLE TO USE POA! Your Power of Attorney has not approved.\"\r\n        }\r\n\r\n        if Int($poa[\"date_start\"]) > $block_time {\r\n            warning \"IMPOSSIBLE TO USE POA! Start date of your Power of Attorney has not yet come.\"\r\n        } \r\n\r\n        if Int($poa[\"date_end\"]) < $block_time {\r\n            warning \"IMPOSSIBLE TO USE POA! Your Power of Attorney has expired.\"\r\n        }\r\n\r\n        if $ActionType == $ACTION_TYPE_BIDDING && Int($poa[\"flags.bidding\"]) != 1 {\r\n            warning \"IMPOSSIBLE TO USE POA! Power of Attorney is not intended for bidding.\"\r\n        }\r\n\r\n        if $ActionType == $ACTION_TYPE_MEETING && Int($poa[\"flags.meeting\"]) != 1 {\r\n            warning \"IMPOSSIBLE TO USE POA! Power of Attorney is not intended for meeting.\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        if Int($poa[\"status\"]) == $POA_STATUS_ISSUED && Int($poa[\"date_start\"]) < $block_time {\r\n            DBUpdate(\"poa_list\", Int($poa[\"id\"]), {\"status\": $POA_STATUS_ACTIVE})\r\n        }\r\n\r\n        if Int($poa[\"status\"]) == $POA_STATUS_ACTIVE && Int($poa[\"date_end\"]) < $block_time {\r\n            DBUpdate(\"poa_list\", Int($poa[\"id\"]), {\"status\": $POA_STATUS_EXPIRED})\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "IssuesApprov",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract IssuesApprov {\r\n    data {\r\n        Id int\r\n        Step int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Step) == 1 {\r\n            m[\"approval_flags->name\"] = 1\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"approval_flags->description\"] = 1\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"approval_flags->settings\"] = 1\r\n        }\r\n        DBUpdate(\"voting_issues\", Int($Id), m)\r\n\r\n        //close notific\r\n        $check_close = DBFind(\"voting_issues\").WhereId($Id).Columns(\"id,approval_flags->name,approval_flags->description,approval_flags->settings,company_id\").Row()\r\n        if $check_close[\"approval_flags.name\"] == 1 && $check_close[\"approval_flags.description\"] == 1 && $check_close[\"approval_flags.settings\"] == 1 {\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_close[\"company_id\"]), \"co_issues_list\", \"Closed\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "MeetingRecalcResults",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingRecalcResults {\r\n    data {\r\n        MeetingId int\r\n        PointIndex int\r\n        Decision string\r\n        VoiceWeight int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingAccept\",\"@1MeetingReject\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"VOICE CANNOT BE REGISTERED! Meeting is not found.\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != $S_MEETING {\r\n            warning \"VOICE CANNOT BE REGISTERED! This meeting is not active.\"\r\n        }\r\n\r\n        $meeting_type = Int(meeting[\"meeting_type\"])\r\n        $company_id = Int(meeting[\"company_id\"])\r\n\r\n        $agenda_arr = JSONDecode(meeting[\"agenda\"])\r\n        if $PointIndex < 0 || $PointIndex >= Len($agenda_arr) {\r\n            warning \"VOICE CANNOT BE REGISTERED! Received ID is not on the agenda.\"\r\n        }\r\n        $point_map = $agenda_arr[$PointIndex]\r\n        if !$point_map[\"agenda_id\"] {\r\n            warning \"VOICE CANNOT BE REGISTERED! Question ID cannot be found on the agenda.\"\r\n        }\r\n\r\n        $agenda_id = Int($point_map[\"agenda_id\"])\r\n        $votes_total = Int($point_map[\"votes_total\"])\r\n        $votes_accepted = Int($point_map[\"votes_accepted\"])\r\n        $votes_rejected = Int($point_map[\"votes_rejected\"])\r\n        $percent_accepted = Float($point_map[\"percent_accepted\"])\r\n        $percent_rejected = Float($point_map[\"percent_rejected\"])\r\n    }\r\n\r\n    action {\r\n        // board members vote\r\n        if $meeting_type == $BOARDMEMBERS_AGENDA || $meeting_type == $BOARDMEMBERS_QUESTIONS { \r\n\r\n            var counting_arr array counting_total_votes int\r\n            counting_arr = DBFind(\"roles_participants\").Where({\"role->company_id\": $company_id, \"role->type\": 6, \"deleted\": 0, \"ecosystem\": $ecosystem_id})\r\n            counting_total_votes = Len(counting_arr)\r\n\r\n            if counting_total_votes < 1 {\r\n                warning \"VOICE CANNOT BE REGISTERED! Total amount of all shares on this issue is zero.\"\r\n            }\r\n\r\n            // add voice\r\n            if $Decision == \"accept\" {\r\n                $votes_accepted = $votes_accepted + $VoiceWeight\r\n            }\r\n            if $Decision == \"reject\" {\r\n                $votes_rejected = $votes_rejected + $VoiceWeight\r\n            }\r\n\r\n            // recalculate the results\r\n            $percent_accepted = Float($votes_accepted) * Float(100) / Float(counting_total_votes)\r\n            $percent_rejected = Float($votes_rejected) * Float(100) / Float(counting_total_votes)\r\n\r\n            // saving the overall result\r\n            $point_map[\"votes_total\"] = Str(counting_total_votes)\r\n            $point_map[\"votes_accepted\"] = Str($votes_accepted)\r\n            $point_map[\"votes_rejected\"] = Str($votes_rejected)\r\n            $point_map[\"percent_accepted\"] = Str($percent_accepted)\r\n            $point_map[\"percent_rejected\"] = Str($percent_rejected)\r\n            $agenda_arr[$PointIndex] = $point_map\r\n\r\n            var str_arr string\r\n            str_arr = JSONEncode($agenda_arr)\r\n            str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n            str_arr = Replace(str_arr, `\"{`, `{`)\r\n            str_arr = Replace(str_arr, `}\"`, `}`)\r\n\r\n            DBUpdate(\"meetings_list\", Int($MeetingId), {\"agenda\": str_arr})\r\n\r\n        // shareholders vote\r\n        } elif $meeting_type == $SHAREHOLDERS_AGENDA || $meeting_type == $SHAREHOLDERS_QUESTIONS  {\r\n            // get a list of shares that should vote on this issue\r\n            var shares string \r\n            shares = DBFind(\"voting_issues\").Where({\"id\": $agenda_id}).One(\"settings->shares\")\r\n            if Size(shares) == 0 {\r\n                warning \"VOICE CANNOT BE REGISTERED! No list of shares configured to meeting for this issue.\"\r\n            }\r\n            var shares_arr array\r\n            shares_arr = JSONDecode(shares)\r\n            if Len(shares_arr) == 0 {\r\n                warning \"VOICE CANNOT BE REGISTERED! No list of shares configured to meeting for this issue.\"\r\n            }            \r\n\r\n            // get shares list\r\n            var shares_list array j int\r\n            shares_list = DBFind(\"co_shares_list\").Where({\"id\": {\"$in\": shares_arr}}).Columns(\"total_amount\")\r\n\r\n            // if the shares were found\r\n            var counting_total_votes int\r\n            if Len(shares_list) > 0 {\r\n                // counting the total number of shares\r\n                while j < Len(shares_list) {\r\n                    var s map\r\n                    s = shares_list[j]\r\n\r\n                    var total_amount int\r\n                    total_amount = Int(s[\"total_amount\"])\r\n                    counting_total_votes = counting_total_votes + total_amount \r\n\r\n                    j = j + 1\r\n                }\r\n                \r\n            }\r\n            if counting_total_votes < 1 {\r\n                warning \"VOICE CANNOT BE REGISTERED! Total amount of all shares on this issue is zero.\"\r\n            }\r\n\r\n            // add voice\r\n            if $Decision == \"accept\" {\r\n                $votes_accepted = $votes_accepted + $VoiceWeight\r\n            }\r\n            if $Decision == \"reject\" {\r\n                $votes_rejected = $votes_rejected + $VoiceWeight\r\n            }\r\n\r\n            // recalculate the results\r\n            $percent_accepted = Float($votes_accepted) * Float(100) / Float(counting_total_votes)\r\n            $percent_rejected = Float($votes_rejected) * Float(100) / Float(counting_total_votes)\r\n\r\n            // saving the overall result\r\n            $point_map[\"votes_total\"] = Str(counting_total_votes)\r\n            $point_map[\"votes_accepted\"] = Str($votes_accepted)\r\n            $point_map[\"votes_rejected\"] = Str($votes_rejected)\r\n            $point_map[\"percent_accepted\"] = Str($percent_accepted)\r\n            $point_map[\"percent_rejected\"] = Str($percent_rejected)\r\n            $agenda_arr[$PointIndex] = $point_map\r\n\r\n            var str_arr string\r\n            str_arr = JSONEncode($agenda_arr)\r\n            str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n            str_arr = Replace(str_arr, `\"{`, `{`)\r\n            str_arr = Replace(str_arr, `}\"`, `}`)\r\n\r\n            DBUpdate(\"meetings_list\", Int($MeetingId), {\"agenda\": str_arr})\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingAccept",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingAccept {\r\n    data {\r\n        MeetingId int\r\n        PointIndex int\r\n        PoA string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"VOICE CANNOT BE REGISTERED! Meeting is not found.\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != $S_MEETING {\r\n            warning \"VOICE CANNOT BE REGISTERED! This meeting is not active.\"\r\n        }\r\n\r\n        $history_block = Int(meeting[\"history_block\"])\r\n        $meeting_type = Int(meeting[\"meeting_type\"])\r\n        $company_id = Int(meeting[\"company_id\"])\r\n\r\n        $agenda_arr = JSONDecode(meeting[\"agenda\"])\r\n        if $PointIndex < 0 || $PointIndex >= Len($agenda_arr) {\r\n            warning \"VOICE CANNOT BE REGISTERED! Received ID is not on the agenda.\"\r\n        }\r\n        $point_map = $agenda_arr[$PointIndex]\r\n        if !$point_map[\"agenda_id\"] {\r\n            warning \"VOICE CANNOT BE REGISTERED! Question ID cannot be found on the agenda.\"\r\n        } \r\n        $agenda_id = Int($point_map[\"agenda_id\"])\r\n\r\n        if $meeting_type == $SHAREHOLDERS_AGENDA || $meeting_type == $SHAREHOLDERS_QUESTIONS {\r\n            if Size($PoA) == 0 {\r\n                $sh_k = $account_id\r\n            } else {\r\n                $sh_k = $PoA\r\n            }\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->account\": $sh_k, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 5}).One(\"id\") {\r\n                warning \"VOICE CANNOT BE REGISTERED! You are not a Shareholder of the company.\"\r\n            }\r\n        } elif $meeting_type == $BOARDMEMBERS_AGENDA || $meeting_type == $BOARDMEMBERS_QUESTIONS {\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->account\": $account_id, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 6}).One(\"id\") {\r\n                warning \"VOICE CANNOT BE REGISTERED! You are not a Board Member of the company.\"\r\n            }\r\n        } else {\r\n            warning \"VOICE CANNOT BE REGISTERED! Type of meeting is not defined.\"\r\n        }\r\n    }\r\n\r\n    func RemoveBadData(securities_history array) array {\r\n        var securities_history_cleaned array \r\n        var s_id int i int\r\n\r\n        while i < Len(securities_history) {\r\n            var h map\r\n            h = securities_history[i]\r\n\r\n            if s_id != Int(h[\"shares_id\"]) {\r\n                securities_history_cleaned = Append(securities_history_cleaned, h)\r\n                s_id = Int(h[\"shares_id\"])\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        return securities_history_cleaned\r\n    }\r\n\r\n    func WriteResult(voice_weight int, shares_id int) {\r\n        var m map\r\n        m[\"decision\"] = 1 * voice_weight\r\n        m[\"shares_id\"] = shares_id\r\n        m[\"date_decision\"] = $block_time\r\n        m[\"meeting_id\"] = $MeetingId\r\n        m[\"meeting_type\"] = $meeting_type\r\n        m[\"participant\"] = $k_i\r\n        m[\"point_index\"] = $PointIndex\r\n        DBInsert(\"meetings_participants\", m)\r\n    }\r\n\r\n    action {\r\n        // board members vote\r\n        if $meeting_type == $BOARDMEMBERS_AGENDA || $meeting_type == $BOARDMEMBERS_QUESTIONS {\r\n            $k_i = $account_id\r\n\r\n            // board member has weight = 1\r\n            WriteResult(1, 0)\r\n            MeetingRecalcResults(\"MeetingId,PointIndex,Decision,VoiceWeight\", $MeetingId, $PointIndex, \"accept\", 1)\r\n\r\n        // shareholders vote\r\n        } elif $meeting_type == $SHAREHOLDERS_AGENDA || $meeting_type == $SHAREHOLDERS_QUESTIONS {\r\n\r\n            // get a list of shares that should vote on this issue\r\n            var shares string \r\n            shares = DBFind(\"voting_issues\").Where({\"id\": $agenda_id}).One(\"settings->shares\")\r\n            if Size(shares) == 0 {\r\n                warning \"VOICE CANNOT BE REGISTERED! No list of shares configured to meeting for this issue.\"\r\n            }\r\n            var shares_arr array\r\n            shares_arr = JSONDecode(shares)\r\n            if Len(shares_arr) == 0 {\r\n                warning \"VOICE CANNOT BE REGISTERED! No list of shares configured to meeting for this issue.\"\r\n            }            \r\n\r\n            if Size($PoA) == 0 {\r\n                $k_i = $account_id\r\n            } else {\r\n                PoaUse(\"CompanyId,PoaSender,ActionType\", $company_id, $PoA, \"meeting\")\r\n                $k_i = $PoA \r\n            }\r\n\r\n            // get historical shares data (return all data less than history_block)\r\n            var securities_history array\r\n            securities_history = DBFind(\"companies_securities_history\").Where({\"company_id\": $company_id, \"owner\": $k_i, \"shares_id\": {\"$in\": shares_arr}, \"history_block\": {\"$lt\": $history_block}}).Order([{history_block:\"-1\"},{id:\"-1\"}]).Columns(\"shares_id,history_balance\")\r\n\r\n            // remove bad historical data (leave only unique shares_id)\r\n            var securities_history_cleaned array j int\r\n            securities_history_cleaned = RemoveBadData(securities_history)\r\n            \r\n            // if the shares were found\r\n            if Len(securities_history_cleaned) > 0 {\r\n                // write all the shares (ordinary, privileged and others)\r\n                var VoiceWeight int\r\n                while j < Len(securities_history_cleaned) {\r\n                    var h map\r\n                    h = securities_history_cleaned[j]\r\n\r\n                    var history_balance int\r\n                    history_balance = Int(h[\"history_balance\"])\r\n                    VoiceWeight = VoiceWeight + history_balance\r\n                    var shares_id int\r\n                    shares_id = Int(h[\"shares_id\"])\r\n\r\n                    WriteResult(history_balance, shares_id)\r\n\r\n                    j = j + 1\r\n                }\r\n                MeetingRecalcResults(\"MeetingId,PointIndex,Decision,VoiceWeight\", $MeetingId, $PointIndex, \"accept\", VoiceWeight)\r\n            } else {\r\n                // write 0 to see this member vote\r\n                WriteResult(0, 0)\r\n                MeetingRecalcResults(\"MeetingId,PointIndex,Decision,VoiceWeight\", $MeetingId, $PointIndex, \"accept\", 0)\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingEdit {\r\n    data {\r\n        Id int \"optional\"\r\n        CompanyId int\r\n        MeetingType int \"optional\"\r\n\r\n        MeetingBDFormat string\r\n        MeetingBDAgenda string\r\n        MeetingBDPlace string\r\n        MeetingBDInitiated string\r\n        MeetingBDDateFromD string\r\n        MeetingBDDateFromT string\r\n        MeetingBDDateUntilD string\r\n        MeetingBDDateUntilT string\r\n\r\n        MeetingSHIssuer string\r\n        MeetingSHLegalForm string\r\n        MeetingSHPlaceResults string\r\n        MeetingSHInitiated string\r\n        MeetingSHDateFromD string\r\n        MeetingSHDateFromT string\r\n        MeetingSHDateUntilD string\r\n        MeetingSHDateUntilT string\r\n\r\n        AgendaIdArr array\r\n        AgendaDesArr array\r\n\r\n        Matters string\r\n    }\r\n\r\n    func getTimeZoneCompany(com_id int) string {\r\n        var timezone string\r\n        timezone = DBFind(\"companies_list\").Where({\"id\": com_id}).One(\"address->timezone\")\r\n        if Size(timezone) == 0 {\r\n            timezone = \"America/Danmarkshavn\"\r\n        }\r\n        return timezone\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func addZeroSeconds(s string) string {\r\n        if Size(s) == 5 {\r\n            s = Sprintf(\"%v:00\", s)\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(d) == 0 {\r\n            d = \"2000-01-01\"\r\n        }\r\n        if Size(t) == 0 {\r\n            t = \"00:00:00\"\r\n        }\r\n        dt = Sprintf(\"%v %v\", trimZeroTime(d), addZeroSeconds(t))\r\n        return dt\r\n    }\r\n\r\n    func fixDatetimes() {\r\n        var timezone string\r\n        timezone = getTimeZoneCompany($CompanyId)\r\n\r\n        $MeetingBDDateFrom = UnixDateTimeLocation(dateAddTime($MeetingBDDateFromD, $MeetingBDDateFromT), timezone)\r\n        $MeetingBDDateUntil = UnixDateTimeLocation(dateAddTime($MeetingBDDateUntilD, $MeetingBDDateUntilT), timezone)\r\n        $MeetingSHDateFrom = UnixDateTimeLocation(dateAddTime($MeetingSHDateFromD, $MeetingSHDateFromT), timezone)\r\n        $MeetingSHDateUntil = UnixDateTimeLocation(dateAddTime($MeetingSHDateUntilD, $MeetingSHDateUntilT), timezone)\r\n    }\r\n\r\n    func sendingNotice() {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n\r\n        // get the AppParam\r\n        var role_law_firm_junior role_shareholder role_agent int\r\n        role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        role_shareholder = Int(DBFind(\"roles\").Where({\"company_id\": $CompanyId, \"role_type\": 5}).One(\"id\"))\r\n        role_agent = Int(DBFind(\"roles\").Where({\"company_id\": $CompanyId, \"role_type\": 7}).One(\"id\"))\r\n\r\n        // get other parameters\r\n        var icon header body page string params map\r\n        icon = \"icon-note\"\r\n        header = \"Agenda of the meeting\"\r\n        body = \"Waiting for decision of all shareholders\"\r\n        page = \"bd_meeting_view\"\r\n        params[\"meeting_id\"] = $MeetingId   \r\n\r\n        // sending notice\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_shareholder, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_shareholder, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_agent, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_agent, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        if Int($Id) == 0 {\r\n            // if creating a new vote\r\n            if Int($MeetingType) == $SHAREHOLDERS_AGENDA {\r\n                // if shareholders vote\r\n                if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n                    warning LangRes(\"access_denied\", \"en\")\r\n                }\r\n            } elif Int($MeetingType) == $BOARDMEMBERS_AGENDA || Int($MeetingType) == $BOARDMEMBERS_QUESTIONS {\r\n                // if board members vote\r\n                if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 6, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n                    warning LangRes(\"access_denied\", \"en\")\r\n                }\r\n            } else {\r\n                warning \"Type of meeting is not defined!\"\r\n            }\r\n        } else {\r\n            // if editing a vote\r\n            if Int($MeetingType) == $SHAREHOLDERS_AGENDA {\r\n                // if shareholders vote\r\n                if !DBFind(\"meetings_list\").Where({\"id\": $Id, \"meeting_shareholders->initiated\": $account_id}).Row() {\r\n                    warning LangRes(\"access_denied\", \"en\")\r\n                }\r\n            } elif Int($MeetingType) == $BOARDMEMBERS_AGENDA || Int($MeetingType) == $BOARDMEMBERS_QUESTIONS {\r\n                // if board members vote\r\n                if !DBFind(\"meetings_list\").Where({\"id\": $Id, \"meeting_bd->initiated\": $account_id}).Row() {\r\n                    warning LangRes(\"access_denied\", \"en\")\r\n                }\r\n            } else {\r\n                warning \"Type of meeting is not defined!\"\r\n            }\r\n        }\r\n\r\n        fixDatetimes()\r\n\r\n        if Int($MeetingType) == $SHAREHOLDERS_AGENDA {\r\n            if $MeetingSHDateFrom <= $block_time {\r\n                warning \"PERIOD FROM less than current date!\"\r\n            }\r\n            if $MeetingSHDateUntil <= $MeetingSHDateFrom {\r\n                warning \"PERIOD UNTIL less than PERIOD FROM!\"\r\n            }\r\n        } elif Int($MeetingType) == $BOARDMEMBERS_AGENDA {\r\n            if $MeetingSHDateFrom <= $block_time {\r\n                warning \"PERIOD FROM less than current date!\"\r\n            }\r\n            if $MeetingSHDateUntil <= $MeetingSHDateFrom {\r\n                warning \"PERIOD UNTIL less than PERIOD FROM!\"\r\n            }\r\n            if $MeetingBDDateFrom <= $block_time {\r\n                warning \"PERIOD FROM less than current date!\"\r\n            }\r\n            if $MeetingBDDateUntil <= $MeetingBDDateFrom {\r\n                warning \"PERIOD UNTIL less than PERIOD FROM!\"\r\n            }\r\n        } elif Int($MeetingType) == $BOARDMEMBERS_QUESTIONS {\r\n            if $MeetingBDDateFrom <= $block_time {\r\n                warning \"PERIOD FROM less than current date!\"\r\n            }\r\n            if $MeetingBDDateUntil <= $MeetingBDDateFrom {\r\n                warning \"PERIOD UNTIL less than PERIOD FROM!\"\r\n            }\r\n        } else {\r\n            warning \"Type of meeting is not defined!\"\r\n        }\r\n    }\r\n    \r\n    action {\r\n        var m map\r\n\r\n        if Int($Id) == 0 {\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"meeting_type\"] = $MeetingType\r\n            m[\"date_created\"] = $block_time\r\n            m[\"history_block\"] = $block\r\n\r\n            if Int($MeetingType) == $SHAREHOLDERS_AGENDA {\r\n                m[\"status\"] = $S_MEETING\r\n            } else {\r\n                m[\"status\"] = $S_MEETING_WAITING\r\n            }\r\n        }\r\n\r\n        if Int($MeetingType) == $SHAREHOLDERS_AGENDA {\r\n            // ----shareholders vote------------------------\r\n            if Int($Id) == 0 {\r\n                m[\"meeting_shareholders->issuer\"] = $MeetingSHIssuer\r\n            }\r\n            m[\"meeting_shareholders->legal_form\"] = $MeetingSHLegalForm\r\n            m[\"meeting_shareholders->place_results\"] = $MeetingSHPlaceResults\r\n            if Int($Id) == 0 {\r\n                m[\"meeting_shareholders->initiated\"] = $MeetingSHInitiated\r\n            }\r\n            m[\"meeting_shareholders->date_from\"] = $MeetingSHDateFrom\r\n            m[\"meeting_shareholders->date_until\"] = $MeetingSHDateUntil\r\n        }\r\n\r\n        if Int($MeetingType) == $BOARDMEMBERS_AGENDA {\r\n            // ----board members vote-----------------------\r\n            m[\"meeting_bd->format\"] = $MeetingBDFormat\r\n            m[\"meeting_bd->agenda\"] = $MeetingBDAgenda\r\n            m[\"meeting_bd->place\"] = $MeetingBDPlace\r\n            if Int($Id) == 0 {\r\n                m[\"meeting_bd->initiated\"] = $MeetingBDInitiated\r\n            }\r\n            m[\"meeting_bd->date_from\"] = $MeetingBDDateFrom\r\n            m[\"meeting_bd->date_until\"] = $MeetingBDDateUntil\r\n\r\n            // ----shareholders vote------------------------\r\n            if Int($Id) == 0 {\r\n                m[\"meeting_shareholders->issuer\"] = $MeetingSHIssuer\r\n            }\r\n            m[\"meeting_shareholders->legal_form\"] = $MeetingSHLegalForm\r\n            m[\"meeting_shareholders->place_results\"] = $MeetingSHPlaceResults\r\n            if Int($Id) == 0 {\r\n                m[\"meeting_shareholders->initiated\"] = $MeetingSHInitiated\r\n            }\r\n            m[\"meeting_shareholders->date_from\"] = $MeetingSHDateFrom\r\n            m[\"meeting_shareholders->date_until\"] = $MeetingSHDateUntil\r\n        }\r\n\r\n        if Int($MeetingType) == $BOARDMEMBERS_QUESTIONS {\r\n            // ----board members vote-----------------------\r\n            m[\"meeting_bd->format\"] = $MeetingBDFormat\r\n            m[\"meeting_bd->agenda\"] = $MeetingBDAgenda\r\n            m[\"meeting_bd->place\"] = $MeetingBDPlace\r\n            if Int($Id) == 0 {\r\n                m[\"meeting_bd->initiated\"] = $MeetingBDInitiated\r\n            }\r\n            m[\"meeting_bd->date_from\"] = $MeetingBDDateFrom\r\n            m[\"meeting_bd->date_until\"] = $MeetingBDDateUntil\r\n        }\r\n\r\n        // ----agenda---------------------------------------\r\n        var i int a_arr array\r\n        while i < Len($AgendaIdArr) {\r\n            var p map\r\n            p[\"agenda_id\"] = Str($AgendaIdArr[i])\r\n            p[\"description\"] = Str($AgendaDesArr[i])\r\n            p[\"votes_total\"] = \"0\"\r\n            p[\"votes_accepted\"] = \"0\"\r\n            p[\"votes_rejected\"] = \"0\"\r\n            p[\"percent_accepted\"] = \"0\"\r\n            p[\"percent_rejected\"] = \"0\"\r\n            p[\"result_point\"] = \"0\"\r\n            p[\"result_agenda\"] = \"0\"\r\n            a_arr = Append(a_arr, JSONEncode(p))\r\n            i = i + 1\r\n        }\r\n        var str_arr string\r\n        str_arr = JSONEncode(a_arr)\r\n        str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n        str_arr = Replace(str_arr, `\"{`, `{`)\r\n        str_arr = Replace(str_arr, `}\"`, `}`)\r\n        m[\"agenda\"] = str_arr\r\n\r\n        // ----matters--------------------------------------\r\n        m[\"matters\"] = $Matters\r\n\r\n        if Int($Id) == 0 {\r\n            $MeetingId = DBInsert(\"meetings_list\", m)\r\n\r\n            // sending notice\r\n            if Int($MeetingType) == $SHAREHOLDERS_AGENDA {\r\n                sendingNotice()\r\n            }\r\n        } else {\r\n            DBUpdate(\"meetings_list\", Int($Id), m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingStartBdAgenda",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingStartBdAgenda {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingUpdateStatuses\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    func sendingNotice() {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n\r\n        // get the AppParam\r\n        var role_law_firm_junior role_board_member int\r\n        role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        role_board_member = Int(DBFind(\"roles\").Where({\"company_id\": $company_id, \"role_type\": 6}).One(\"id\"))\r\n\r\n        // get other parameters\r\n        var icon header body page string params map\r\n        icon = \"icon-note\"\r\n        header = \"Agenda of the meeting\"\r\n        body = \"Waiting for decision of all board members\"\r\n        page = \"bd_meeting_view\"\r\n        params[\"meeting_id\"] = $MeetingId   \r\n\r\n        // sending notice\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_board_member, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_board_member, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if meeting {\r\n            $company_id = Int(meeting[\"company_id\"])\r\n        }\r\n    }\r\n\r\n    action {\r\n        // sending notice\r\n        sendingNotice()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "IssuesDel",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract IssuesDel {\r\n    data {\r\n        IssueId int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"deleted\"] = $block_time\r\n        m[\"date_deleted\"] = $block_time\r\n        DBUpdate(\"voting_issues\", $IssueId, m)\r\n\r\n        //close notific\r\n        $check_close = DBFind(\"voting_issues\").WhereId($IssueId).Columns(\"id,company_id\").Row()\r\n        NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_close[\"company_id\"]), \"co_issues_list\", \"Closed\")\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "MeetingStartBdQuestions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingStartBdQuestions {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingUpdateStatuses\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    func sendingNotice() {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n\r\n        // get the AppParam\r\n        var role_law_firm_junior role_board_member int\r\n        role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        role_board_member = Int(DBFind(\"roles\").Where({\"company_id\": $company_id, \"role_type\": 6}).One(\"id\"))\r\n\r\n        // get other parameters\r\n        var icon header body page string params map\r\n        icon = \"icon-note\"\r\n        header = \"Meetings of board members\"\r\n        body = \"Waiting for decision of all board members\"\r\n        page = \"bd_meeting_view\"\r\n        params[\"meeting_id\"] = $MeetingId   \r\n\r\n        // sending notice\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_board_member, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_board_member, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if meeting {\r\n            $company_id = Int(meeting[\"company_id\"])\r\n        }\r\n    }\r\n\r\n    action {\r\n        // sending notice\r\n        sendingNotice()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "IssuesEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract IssuesEdit {\r\n    data {\r\n        Step int\r\n        Id int \"optional\"\r\n        CompanyId int \"optional\"\r\n\r\n        Name string \"optional\"\r\n        Description string \"optional\"\r\n\r\n        Percentage string \"optional\"\r\n        Participants string \"optional\"\r\n        Shares string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n\r\n        if Int($Id) == 0 {\r\n            if DBFind(\"voting_issues\").Where({\"name\": $Name, \"company_id\": $CompanyId, \"deleted\": 0}).Row() {\r\n                warning \"ISSUE WITH THIS NAME ALREADY EXISTS! You must specify a unique name.\"\r\n            }\r\n        }\r\n        if Int($Step) == 3 {\r\n            if Float($Percentage) < 1 || Float($Percentage) > 100 {\r\n                warning Sprintf(\"WRONG PERCENT NUMBER: %v. Percentages should be in the range of 1 to 100.\", Float($Percentage))\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"approval_flags->name\"] = 0\r\n            m[\"approval_flags->description\"] = 0\r\n            m[\"approval_flags->settings\"] = 0\r\n        }\r\n\r\n        if Int($Step) == 1 {\r\n            m[\"name\"] = $Name\r\n            m[\"approval_flags->name\"] = 0\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"description\"] = $Description\r\n            m[\"approval_flags->description\"] = 0\r\n        }\r\n\r\n        if Int($Step) == 3 {\r\n            m[\"settings->percentage\"] = $Percentage\r\n            m[\"settings->participants\"] = $Participants\r\n            if $Participants == \"Shareholder\" {\r\n                m[\"settings->shares\"] = $Shares\r\n            } else {\r\n                m[\"settings->shares\"] = \"\"\r\n            }\r\n            m[\"approval_flags->settings\"] = 0\r\n        }\r\n\r\n        if Int($Id) == 0 {\r\n            $new_id = DBInsert(\"voting_issues\", m)\r\n\r\n            // get the App\r\n            $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n            // get the AppParam\r\n            var params map voting_questions string\r\n            params = DBFind(\"app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app, \"name\": \"voting_questions\"}).Row()\r\n            voting_questions = Str(params[\"value\"])\r\n\r\n            if !Contains(voting_questions, $Name) {\r\n                voting_questions = voting_questions + \"\\n\" + $Name + \";\"\r\n                EditAppParam(\"Id,Value\", Int(params[\"id\"]), voting_questions)\r\n            }\r\n\r\n            $company_id = DBFind(\"voting_issues\").Where({\"id\":$new_id}).One(\"company_id\")\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($company_id), \"co_issues_list\", \"Send\")\r\n        } else {\r\n            DBUpdate(\"voting_issues\", Int($Id), m)\r\n\r\n            $company_id = DBFind(\"voting_issues\").Where({\"id\":$Id}).One(\"company_id\")\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($company_id), \"co_issues_list\", \"Send\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "MeetingStartShQuestions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingStartShQuestions {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingUpdateStatuses\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    func rewriteAgenda() {\r\n        if Len($agenda_arr) > 0 {\r\n            var str_arr string\r\n            str_arr = JSONEncode($agenda_arr)\r\n            str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n            str_arr = Replace(str_arr, `\"{`, `{`)\r\n            str_arr = Replace(str_arr, `}\"`, `}`)\r\n            DBUpdate(\"meetings_list\", Int($MeetingId), {\"agenda\": str_arr})\r\n        }\r\n    }\r\n\r\n    func sendingNotice() {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n\r\n        // get the AppParam\r\n        var role_law_firm_junior role_shareholder role_agent int\r\n        role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        role_shareholder = Int(DBFind(\"roles\").Where({\"company_id\": $company_id, \"role_type\": 5}).One(\"id\"))\r\n        role_agent = Int(DBFind(\"roles\").Where({\"company_id\": $company_id, \"role_type\": 7}).One(\"id\"))\r\n\r\n        // get other parameters\r\n        var icon header body page string params map\r\n        icon = \"icon-note\"\r\n        header = \"Meetings of Shareholders\"\r\n        body = \"Waiting for decision of all shareholders\"\r\n        page = \"bd_meeting_view\"\r\n        params[\"meeting_id\"] = $MeetingId   \r\n\r\n        // sending notice\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_shareholder, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_shareholder, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_agent, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_agent, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n    }\r\n\r\n    func closingNotice() {\r\n        var notific_arr array n_map map i int\r\n        notific_arr = DBFind(\"notifications\").Columns(\"id\").Where({\"page_name\": \"bd_meeting_view\", \"page_params->meeting_id\": $MeetingId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\r\n        while i < Len(notific_arr) {\r\n            n_map = notific_arr[i]\r\n            NotificationsProcess(\"NotificId\", Int(n_map[\"id\"]))\r\n            NotificationsClose(\"NotificId\", Int(n_map[\"id\"]))\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        // settings of company\r\n        $quorum_shares = 100\r\n        $percentage_shares = 100\r\n        $quorum_boardmembers = 100\r\n        $percentage_boardmembers = 100\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if meeting {\r\n            $company_id = Int(meeting[\"company_id\"])\r\n            $agenda_arr = JSONDecode(meeting[\"agenda\"])\r\n\r\n            var sttngs map\r\n            sttngs = DBFind(\"companies_list\").Where({\"id\": $company_id}).Columns(\"settings->quorum_shares,settings->percentage_shares,settings->quorum_boardmembers,settings->percentage_boardmembers\").Row()\r\n            $quorum_shares = Float(sttngs[\"settings.quorum_shares\"])\r\n            $percentage_shares = Float(sttngs[\"settings.percentage_shares\"])\r\n            $quorum_boardmembers = Float(sttngs[\"settings.quorum_boardmembers\"])\r\n            $percentage_boardmembers = Float(sttngs[\"settings.percentage_boardmembers\"])\r\n        } else {\r\n            $agenda_arr = JSONDecode(\"[]\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var j int\r\n\r\n        // review all agenda\r\n        while j < Len($agenda_arr) {\r\n            var p map\r\n            p = $agenda_arr[j]\r\n\r\n            // voting percentage SUPPORTED\r\n            var percent_accepted float\r\n            percent_accepted = Float(p[\"percent_accepted\"])\r\n\r\n            // if that's enough, point will be added to the agenda\r\n            if Float(percent_accepted) > Float($percentage_shares) {\r\n                p[\"result_agenda\"] = \"1\"\r\n                p[\"votes_total\"] = \"0\"\r\n                p[\"votes_accepted\"] = \"0\"\r\n                p[\"votes_rejected\"] = \"0\"\r\n                p[\"percent_accepted\"] = \"0\"\r\n                p[\"percent_rejected\"] = \"0\"\r\n            } else {\r\n                p[\"result_agenda\"] = \"-1\"\r\n                p[\"votes_total\"] = \"0\"\r\n                p[\"votes_accepted\"] = \"0\"\r\n                p[\"votes_rejected\"] = \"0\"\r\n                p[\"percent_accepted\"] = \"0\"\r\n                p[\"percent_rejected\"] = \"0\"\r\n            }\r\n\r\n            $agenda_arr[j] = p\r\n            j = j + 1\r\n        }\r\n\r\n        // rewriting the result\r\n        rewriteAgenda()\r\n\r\n        // sending notice\r\n        closingNotice()\r\n        sendingNotice()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingUpdateStatuses",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingUpdateStatuses {\r\n    data {}\r\n\r\n    func changeStatus(from, to map, contract_name string) {\r\n        var requests array i int req map\r\n        requests = DBFind(\"meetings_list\").Where(from)\r\n\r\n        var contract_id int\r\n        contract_id = GetContractByName(contract_name)\r\n\r\n        while i < Len(requests) {\r\n            req = requests[i]\r\n\r\n            if contract_id > 0 {\r\n                var par map\r\n                par[\"MeetingId\"] = Int(req[\"id\"])\r\n                CallContract(contract_name, par)\r\n            }\r\n\r\n            DBUpdate(\"meetings_list\", Int(req[\"id\"]), to)\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n       // ======START meeting==========================================\r\n       changeStatus({\"status\": $S_MEETING, \"meeting_shareholders->date_from\": {\"$lt\": $block_time}, \"meeting_type\": $SHAREHOLDERS_AGENDA},\r\n                    {\"meeting_type\": $SHAREHOLDERS_QUESTIONS},\r\n                    \"MeetingStartShQuestions\")\r\n       changeStatus({\"status\": $S_MEETING_WAITING, \"meeting_shareholders->date_from\": {\"$lt\": $block_time}, \"meeting_type\": $SHAREHOLDERS_QUESTIONS},\r\n                    {\"status\": $S_MEETING},\r\n                    \"\")\r\n       changeStatus({\"status\": $S_MEETING_WAITING, \"meeting_bd->date_from\": {\"$lt\": $block_time}, \"meeting_type\": $BOARDMEMBERS_AGENDA},\r\n                    {\"status\": $S_MEETING},\r\n                    \"MeetingStartBdAgenda\")\r\n       changeStatus({\"status\": $S_MEETING_WAITING, \"meeting_bd->date_from\": {\"$lt\": $block_time}, \"meeting_type\": $BOARDMEMBERS_QUESTIONS},\r\n                    {\"status\": $S_MEETING},\r\n                    \"MeetingStartBdQuestions\")\r\n\r\n       // ======STOP meeting===========================================\r\n       changeStatus({\"status\": $S_MEETING, \"meeting_shareholders->date_until\": {\"$lt\": $block_time}, \"meeting_type\": $SHAREHOLDERS_QUESTIONS},\r\n                    {\"status\": $S_MEETING_FINISHED},\r\n                    \"MeetingStopShQuestions\")\r\n       changeStatus({\"status\": $S_MEETING, \"meeting_bd->date_until\": {\"$lt\": $block_time}, \"meeting_type\": $BOARDMEMBERS_AGENDA},\r\n                    {\"status\": $S_MEETING_FINISHED},\r\n                    \"MeetingStopBdAgenda\")\r\n       changeStatus({\"status\": $S_MEETING, \"meeting_bd->date_until\": {\"$lt\": $block_time}, \"meeting_type\": $BOARDMEMBERS_QUESTIONS},\r\n                    {\"status\": $S_MEETING_FINISHED},\r\n                    \"MeetingStopBdQuestions\")\r\n\r\n       // ======LOG recording==========================================\r\n       var t map\r\n       t[\"date_created\"] = BlockTime()\r\n       DBInsert(\"timer_test\", t)\r\n       $result = BlockTime()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingStopBdQuestions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingStopBdQuestions {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingUpdateStatuses\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    func rewriteAgenda() {\r\n        if Len($agenda_arr) > 0 {\r\n            var str_arr string\r\n            str_arr = JSONEncode($agenda_arr)\r\n            str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n            str_arr = Replace(str_arr, `\"{`, `{`)\r\n            str_arr = Replace(str_arr, `}\"`, `}`)\r\n            DBUpdate(\"meetings_list\", Int($MeetingId), {\"agenda\": str_arr})\r\n        }\r\n    }\r\n\r\n    func closingNotice() {\r\n        var notific_arr array n_map map i int\r\n        notific_arr = DBFind(\"notifications\").Columns(\"id\").Where({\"page_name\": \"bd_meeting_view\", \"page_params->meeting_id\": $MeetingId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\r\n        while i < Len(notific_arr) {\r\n            n_map = notific_arr[i]\r\n            NotificationsProcess(\"NotificId\", Int(n_map[\"id\"]))\r\n            NotificationsClose(\"NotificId\", Int(n_map[\"id\"]))\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        // settings of company\r\n        $quorum_shares = 100\r\n        $percentage_shares = 100\r\n        $quorum_boardmembers = 100\r\n        $percentage_boardmembers = 100\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if meeting {\r\n            $company_id = Int(meeting[\"company_id\"])\r\n            $agenda_arr = JSONDecode(meeting[\"agenda\"])\r\n\r\n            var sttngs map\r\n            sttngs = DBFind(\"companies_list\").Where({\"id\": $company_id}).Columns(\"settings->quorum_shares,settings->percentage_shares,settings->quorum_boardmembers,settings->percentage_boardmembers\").Row()\r\n            $quorum_shares = Float(sttngs[\"settings.quorum_shares\"])\r\n            $percentage_shares = Float(sttngs[\"settings.percentage_shares\"])\r\n            $quorum_boardmembers = Float(sttngs[\"settings.quorum_boardmembers\"])\r\n            $percentage_boardmembers = Float(sttngs[\"settings.percentage_boardmembers\"])\r\n        } else {\r\n            $agenda_arr = JSONDecode(\"[]\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var j int\r\n\r\n        // review all agenda\r\n        while j < Len($agenda_arr) {\r\n            var p map\r\n            p = $agenda_arr[j]\r\n\r\n            // count amount of the percentage of voters\r\n            var quorum float\r\n            quorum = Float(p[\"percent_accepted\"]) + Float(p[\"percent_rejected\"])\r\n\r\n            // if that's enough, voting is considered successful, but result is not yet known\r\n            if Float(quorum) > Float($quorum_boardmembers) {\r\n\r\n                // count the number of votes\r\n                var votes_total votes_accepted votes_rejected int\r\n                votes_accepted = Int(p[\"votes_accepted\"])\r\n                votes_rejected = Int(p[\"votes_rejected\"])\r\n                votes_total = votes_accepted + votes_rejected \r\n\r\n                // count new percentages ACCEPTED and REJECTED\r\n                var percent_accepted percent_rejected float\r\n                if votes_total > 0 {\r\n                    percent_accepted = Float(votes_accepted) * Float(100) / Float(votes_total)\r\n                    percent_rejected = Float(votes_rejected) * Float(100) / Float(votes_total)\r\n                } else {\r\n                    percent_accepted = Float(0)\r\n                    percent_rejected = Float(0)\r\n                }\r\n\r\n                // write the result of calculations\r\n                p[\"votes_total\"] = Str(votes_total)\r\n                p[\"percent_accepted\"] = Str(percent_accepted)\r\n                p[\"percent_rejected\"] = Str(percent_rejected)\r\n\r\n                var agenda_id int\r\n                agenda_id = Int(p[\"agenda_id\"])\r\n\r\n                // get the percentage for the current point\r\n                var agenda_percentage float\r\n                agenda_percentage = Float(DBFind(\"voting_issues\").Where({\"id\": agenda_id}).One(\"settings->percentage\"))\r\n\r\n                // if that's enough, decision ACCAPTED\r\n                if percent_accepted >= agenda_percentage {\r\n                    p[\"result_point\"] = \"1\"\r\n                } else {\r\n                    p[\"result_point\"] = \"-1\"\r\n                }\r\n            } else {\r\n\r\n                // quorum is not enough\r\n                p[\"result_point\"] = \"0\"\r\n            }\r\n\r\n            $agenda_arr[j] = p\r\n            j = j + 1\r\n        }\r\n\r\n        // rewriting the result\r\n        rewriteAgenda()\r\n\r\n        // closing notice\r\n        closingNotice()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingStopBdAgenda",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingStopBdAgenda {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingUpdateStatuses\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    func rewriteAgenda() {\r\n        if Len($agenda_arr) > 0 {\r\n            var str_arr string\r\n            str_arr = JSONEncode($agenda_arr)\r\n            str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n            str_arr = Replace(str_arr, `\"{`, `{`)\r\n            str_arr = Replace(str_arr, `}\"`, `}`)\r\n            DBUpdate(\"meetings_list\", Int($MeetingId), {\"agenda\": str_arr})\r\n        }\r\n    }\r\n\r\n    func sendingNotice() {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n\r\n        // get the AppParam\r\n        var role_law_firm_junior role_shareholder role_agent int\r\n        role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        role_shareholder = Int(DBFind(\"roles\").Where({\"company_id\": $company_id, \"role_type\": 5}).One(\"id\"))\r\n        role_agent = Int(DBFind(\"roles\").Where({\"company_id\": $company_id, \"role_type\": 7}).One(\"id\"))\r\n\r\n        // get other parameters\r\n        var icon header body page string params map\r\n        icon = \"icon-note\"\r\n        header = \"Meetings of Shareholders\"\r\n        body = \"Waiting for decision of all shareholders\"\r\n        page = \"bd_meeting_view\"\r\n        params[\"meeting_id\"] = $MeetingId   \r\n\r\n        // sending notice\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_shareholder, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_shareholder, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": role_agent, \"deleted\": 0}).One(\"id\") {\r\n            NotificationsSend(\"Rid,Sender,CurrentRid,Icon,Header,Body,Page,Params,EcosystemId,Closure\", role_agent, 2, role_law_firm_junior, icon, header, body, page, params, $ecosystem_id, 1)\r\n        }\r\n    }\r\n\r\n    func closingNotice() {\r\n        var notific_arr array n_map map i int\r\n        notific_arr = DBFind(\"notifications\").Columns(\"id\").Where({\"page_name\": \"bd_meeting_view\", \"page_params->meeting_id\": $MeetingId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\r\n        while i < Len(notific_arr) {\r\n            n_map = notific_arr[i]\r\n            NotificationsProcess(\"NotificId\", Int(n_map[\"id\"]))\r\n            NotificationsClose(\"NotificId\", Int(n_map[\"id\"]))\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        // settings of company\r\n        $quorum_shares = 100\r\n        $percentage_shares = 100\r\n        $quorum_boardmembers = 100\r\n        $percentage_boardmembers = 100\r\n\r\n        $meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if $meeting {\r\n            $company_id = Int($meeting[\"company_id\"])\r\n            $agenda_arr = JSONDecode($meeting[\"agenda\"])\r\n\r\n            var sttngs map\r\n            sttngs = DBFind(\"companies_list\").Where({\"id\": $company_id}).Columns(\"settings->quorum_shares,settings->percentage_shares,settings->quorum_boardmembers,settings->percentage_boardmembers\").Row()\r\n            $quorum_shares = Float(sttngs[\"settings.quorum_shares\"])\r\n            $percentage_shares = Float(sttngs[\"settings.percentage_shares\"])\r\n            $quorum_boardmembers = Float(sttngs[\"settings.quorum_boardmembers\"])\r\n            $percentage_boardmembers = Float(sttngs[\"settings.percentage_boardmembers\"])\r\n        } else {\r\n            $agenda_arr = JSONDecode(\"[]\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var j int\r\n\r\n        // review all agenda\r\n        while j < Len($agenda_arr) {\r\n            var p map\r\n            p = $agenda_arr[j]\r\n\r\n            // consider participating\r\n            var votes_total int\r\n            votes_total = Int(p[\"votes_accepted\"]) + Int(p[\"votes_rejected\"])\r\n\r\n            // consider quorum\r\n            var quorum float\r\n            if votes_total > 0 {\r\n                quorum = Float(p[\"votes_accepted\"]) * Float(100) / Float(votes_total)\r\n            } else {\r\n                quorum = Float(0)\r\n            }\r\n\r\n            // if that's enough, point will be added to the agenda\r\n            if Float(quorum) > Float($percentage_boardmembers) {\r\n                p[\"result_agenda\"] = \"1\"\r\n            } else {\r\n                p[\"result_agenda\"] = \"-1\"\r\n            }\r\n\r\n            $agenda_arr[j] = p\r\n            j = j + 1\r\n        }\r\n\r\n        // write the result\r\n        rewriteAgenda()\r\n\r\n        // CREATE A NEW VOTE FOR SHAREHOLDERS\r\n        // rewriting the agenda\r\n        var k int\r\n        while k < Len($agenda_arr) {\r\n            var p map\r\n            p = $agenda_arr[k]\r\n            p[\"votes_total\"] = \"0\"\r\n            p[\"result_point\"] = \"0\"\r\n            p[\"votes_accepted\"] = \"0\"\r\n            p[\"votes_rejected\"] = \"0\"\r\n            p[\"percent_accepted\"] = \"0\"\r\n            p[\"percent_rejected\"] = \"0\"\r\n            $agenda_arr[k] = p\r\n            k = k + 1\r\n        }\r\n        var str_arr_new string\r\n        if Len($agenda_arr) > 0 {\r\n            str_arr_new = JSONEncode($agenda_arr)\r\n            str_arr_new = Replace(str_arr_new, `\\\"`, `\"`)\r\n            str_arr_new = Replace(str_arr_new, `\"{`, `{`)\r\n            str_arr_new = Replace(str_arr_new, `}\"`, `}`)\r\n        }\r\n\r\n        // Closing notice\r\n        closingNotice()\r\n\r\n        // rewriting other parameters\r\n        var m map\r\n        m[\"agenda\"] = str_arr_new\r\n        m[\"company_id\"] = $meeting[\"company_id\"]\r\n        m[\"date_created\"] = $block_time\r\n        m[\"history_block\"] = $block\r\n        m[\"matters\"] = $meeting[\"matters\"]\r\n        m[\"meeting_shareholders\"] = $meeting[\"meeting_shareholders\"]\r\n        m[\"meeting_type\"] = \"12\"\r\n        m[\"status\"] = \"1\"\r\n        $MeetingId = DBInsert(\"meetings_list\", m)\r\n\r\n        // sending notice\r\n        sendingNotice()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingStopShQuestions",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingStopShQuestions {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1MeetingUpdateStatuses\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"ACCESS IS DENIED! Contract cannot be executed from this location.\"\r\n        }\r\n    }\r\n\r\n    func rewriteAgenda() {\r\n        if Len($agenda_arr) > 0 {\r\n            var str_arr string\r\n            str_arr = JSONEncode($agenda_arr)\r\n            str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n            str_arr = Replace(str_arr, `\"{`, `{`)\r\n            str_arr = Replace(str_arr, `}\"`, `}`)\r\n            DBUpdate(\"meetings_list\", Int($MeetingId), {\"agenda\": str_arr})\r\n        }\r\n    }\r\n\r\n    func closingNotice() {\r\n        var notific_arr array n_map map i int\r\n        notific_arr = DBFind(\"notifications\").Columns(\"id\").Where({\"page_name\": \"bd_meeting_view\", \"page_params->meeting_id\": $MeetingId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\r\n        while i < Len(notific_arr) {\r\n            n_map = notific_arr[i]\r\n            NotificationsProcess(\"NotificId\", Int(n_map[\"id\"]))\r\n            NotificationsClose(\"NotificId\", Int(n_map[\"id\"]))\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        // settings of company\r\n        $quorum_shares = 100\r\n        $percentage_shares = 100\r\n        $quorum_boardmembers = 100\r\n        $percentage_boardmembers = 100\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if meeting {\r\n            $company_id = Int(meeting[\"company_id\"])\r\n            $agenda_arr = JSONDecode(meeting[\"agenda\"])\r\n\r\n            var sttngs map\r\n            sttngs = DBFind(\"companies_list\").Where({\"id\": $company_id}).Columns(\"settings->quorum_shares,settings->percentage_shares,settings->quorum_boardmembers,settings->percentage_boardmembers\").Row()\r\n            $quorum_shares = Float(sttngs[\"settings.quorum_shares\"])\r\n            $percentage_shares = Float(sttngs[\"settings.percentage_shares\"])\r\n            $quorum_boardmembers = Float(sttngs[\"settings.quorum_boardmembers\"])\r\n            $percentage_boardmembers = Float(sttngs[\"settings.percentage_boardmembers\"])\r\n        } else {\r\n            $agenda_arr = JSONDecode(\"[]\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var j int\r\n\r\n        // review all agenda\r\n        while j < Len($agenda_arr) {\r\n            var p map\r\n            p = $agenda_arr[j]\r\n\r\n            var result_agenda int\r\n            result_agenda = Int(p[\"result_agenda\"])\r\n\r\n            // if point is on agenda\r\n            if result_agenda == 1 {\r\n\r\n                // count amount of the percentage of voters\r\n                var quorum float\r\n                quorum = Float(p[\"percent_accepted\"]) + Float(p[\"percent_rejected\"])\r\n\r\n                // if that's enough, voting is considered successful, but result is not yet known\r\n                if Float(quorum) > Float($quorum_shares) {\r\n\r\n                    // count the number of votes\r\n                    var votes_total votes_accepted votes_rejected int\r\n                    votes_accepted = Int(p[\"votes_accepted\"])\r\n                    votes_rejected = Int(p[\"votes_rejected\"])\r\n                    votes_total = votes_accepted + votes_rejected \r\n\r\n                    // count new percentages ACCEPTED and REJECTED\r\n                    var percent_accepted percent_rejected float\r\n                    if votes_total > 0 {\r\n                        percent_accepted = Float(votes_accepted) * Float(100) / Float(votes_total)\r\n                        percent_rejected = Float(votes_rejected) * Float(100) / Float(votes_total)\r\n                    } else {\r\n                        percent_accepted = Float(0)\r\n                        percent_rejected = Float(0)\r\n                    }\r\n\r\n                    // write the result of calculations\r\n                    p[\"votes_total\"] = Str(votes_total)\r\n                    p[\"percent_accepted\"] = Str(percent_accepted)\r\n                    p[\"percent_rejected\"] = Str(percent_rejected)\r\n\r\n                    var agenda_id int\r\n                    agenda_id = Int(p[\"agenda_id\"])\r\n\r\n                    // get the percentage for the current point\r\n                    var agenda_percentage float\r\n                    agenda_percentage = Float(DBFind(\"voting_issues\").Where({\"id\": agenda_id}).One(\"settings->percentage\"))\r\n\r\n                    // if that's enough, decision ACCAPTED\r\n                    if percent_accepted >= agenda_percentage {\r\n                        p[\"result_point\"] = \"1\"\r\n                    } else {\r\n                        p[\"result_point\"] = \"-1\"\r\n                    }\r\n                } else {\r\n\r\n                    // quorum is not enough\r\n                    p[\"result_point\"] = \"0\"\r\n                }\r\n            }\r\n\r\n            $agenda_arr[j] = p\r\n            j = j + 1\r\n        }\r\n\r\n        // rewriting the result\r\n        rewriteAgenda()\r\n\r\n        // closing notice\r\n        closingNotice()\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "IssuesInstall",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract IssuesInstall {\r\n    data {\r\n        CompanyId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1CompanyEdit\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"Access is denied. Issues can not be created\"\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $voting_questions = AppParam(Int($app), \"voting_questions\", $ecosystem_id)\r\n        $voting_questions = Replace($voting_questions, \"\\n\", \"\")\r\n        $voting_questions = Replace($voting_questions, \"\\r\", \"\")\r\n    }\r\n\r\n    action {\r\n        var questions_arr array i int\r\n        questions_arr = Split($voting_questions, \";\")\r\n\r\n        while i < Len(questions_arr) {\r\n            var question string\r\n            question = questions_arr[i]\r\n\r\n            if Size(question) > 0 {\r\n                var m map\r\n                m[\"deleted\"] = 0\r\n                m[\"date_created\"] = $block_time\r\n                m[\"company_id\"] = $CompanyId\r\n                m[\"approval_flags->name\"] = 0\r\n                m[\"approval_flags->description\"] = 0\r\n                m[\"approval_flags->settings\"] = 0\r\n                m[\"name\"] = question\r\n                m[\"description\"] = \"\"\r\n                m[\"settings->percentage\"] = \"50\"\r\n                m[\"settings->participants\"] = \"Board Member\"\r\n                m[\"settings->shares\"] = \"\"\r\n                DBInsert(\"voting_issues\", m)\r\n            }\r\n\r\n            i = i + 1\r\n        }\r\n        NotificationsPartner(\"CompanyId,PageName,Action\", Int($CompanyId), \"co_issues_list\", \"Send\")\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "PoaApprov",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaApprov {\r\n    data {\r\n        Id int\r\n        Step int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Step) == 1 {\r\n            m[\"approval_flags->sender\"] = 1\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"approval_flags->recipient\"] = 1\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"approval_flags->details\"] = 1\r\n        }\r\n        if Int($Step) == 4 {\r\n            m[\"approval_flags->file\"] = 1\r\n        }\r\n        DBUpdate(\"poa_list\", Int($Id), m)\r\n\r\n        $check_approve = DBFind(\"poa_list\").Columns(\"id,company_id,approval_flags->sender,approval_flags->recipient,approval_flags->details,approval_flags->file\").WhereId($Id).Row()\r\n        if $check_approve[\"approval_flags.sender\"] == 1 && $check_approve[\"approval_flags.recipient\"] == 1 && $check_approve[\"approval_flags.details\"] == 1 && $check_approve[\"approval_flags.file\"] == 1 {\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_approve[\"company_id\"]), \"poa_list\", \"Closed\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "PoaDel",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaDel {\r\n    data {\r\n        PoaId int\r\n    }\r\n\r\n    conditions {\r\n        $POA_STATUS_ISSUED = 1\r\n        $POA_STATUS_ACTIVE = 2\r\n        $POA_STATUS_EXPIRED = 3\r\n        $POA_STATUS_REVOKED = 4\r\n\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"status\"] = $POA_STATUS_REVOKED\r\n        DBUpdate(\"poa_list\", Int($PoaId), m)\r\n\r\n        //close notific\r\n        $check_approve = DBFind(\"poa_list\").Columns(\"id,company_id\").WhereId($PoaId).Row()\r\n        NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_approve[\"company_id\"]), \"poa_list\", \"Closed\")\r\n\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "RolesAssign",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract RolesAssign {\r\n    data {\r\n        Rid int\r\n        MemberAccount string\r\n    }\r\n\r\n    func getMemberInfo(kid string) map {\r\n        var res member map\r\n        member = DBFind(\"members\").Where({\"ecosystem\": $ecosystem_id, \"account\": kid}).Row()\r\n        if member {\r\n            res[\"account\"] = kid\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            member = DBFind(\"keys\").Where({\"ecosystem\": $ecosystem_id, \"account\": kid, \"deleted\": 0}).Row()\r\n            if member {\r\n                res[\"account\"] = kid\r\n                res[\"member_name\"] = kid\r\n                res[\"image_id\"] = 0\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    conditions {\r\n        @1DeveloperCondition()\r\n\r\n        $role = DBFind(\"roles\").Where({\"id\": $Rid}).Columns(\"id,deleted,role_type,role_name,image_id,company_id\").Row()\r\n        if Int($role[\"role_type\"]) == 2 {\r\n            warning LangRes(\"elective_role_voting_only\", \"en\")\r\n        }\r\n        if !$role {\r\n            warning LangRes(\"role_not_found\", \"en\")\r\n        }\r\n        if !DBFind(\"keys\").Where({\"ecosystem\": $ecosystem_id, \"account\": $MemberAccount, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"key_not_found\", \"en\")\r\n        }\r\n\r\n        if $role[\"deleted\"] == 1 {\r\n            warning LangRes(\"role_deleted_request_impossible\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        if DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": $Rid, \"member->account\": $MemberAccount, \"deleted\": 0}).One(\"id\") {\r\n            warning Sprintf(\"Account '%v' is already assigned to this role\", $MemberAccount)\r\n        }\r\n\r\n        var role member appointer map\r\n        role[\"id\"] = $role[\"id\"]\r\n        role[\"type\"] = $role[\"role_type\"]\r\n        role[\"name\"] = $role[\"role_name\"]\r\n        role[\"image_id\"] = $role[\"image_id\"]\r\n        role[\"company_id\"] = $role[\"company_id\"]\r\n\r\n        member = getMemberInfo($MemberAccount)\r\n        appointer = getMemberInfo($account_id)\r\n        var m map\r\n        m[\"role\"] = role\r\n        m[\"member\"] = member\r\n        m[\"appointed\"] = appointer\r\n        m[\"date_created\"] = $block_time\r\n        m[\"ecosystem\"] = $ecosystem_id\r\n        DBInsert(\"roles_participants\", m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "MeetingReject",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MeetingReject {\r\n    data {\r\n        MeetingId int\r\n        PointIndex int\r\n        PoA string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // MeetingType\r\n        $SHAREHOLDERS_AGENDA = 11       // shareholders vote for the agenda\r\n        $SHAREHOLDERS_QUESTIONS = 12    // shareholders vote for their questions\r\n        $BOARDMEMBERS_AGENDA = 21       // board members vote for the agenda\r\n        $BOARDMEMBERS_QUESTIONS = 22    // board members vote for their questions\r\n\r\n        // status\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_MEETING_FINISHED = 3\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_list\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"VOICE CANNOT BE REGISTERED! Meeting is not found.\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != $S_MEETING {\r\n            warning \"VOICE CANNOT BE REGISTERED! This meeting is not active.\"\r\n        }\r\n\r\n        $history_block = Int(meeting[\"history_block\"])\r\n        $meeting_type = Int(meeting[\"meeting_type\"])\r\n        $company_id = Int(meeting[\"company_id\"])\r\n\r\n        $agenda_arr = JSONDecode(meeting[\"agenda\"])\r\n        if $PointIndex < 0 || $PointIndex >= Len($agenda_arr) {\r\n            warning \"VOICE CANNOT BE REGISTERED! Received ID is not on the agenda.\"\r\n        }\r\n        $point_map = $agenda_arr[$PointIndex]\r\n        if !$point_map[\"agenda_id\"] {\r\n            warning \"VOICE CANNOT BE REGISTERED! Question ID cannot be found on the agenda.\"\r\n        } \r\n        $agenda_id = Int($point_map[\"agenda_id\"])\r\n\r\n        if $meeting_type == $SHAREHOLDERS_AGENDA || $meeting_type == $SHAREHOLDERS_QUESTIONS {\r\n            if Size($PoA) == 0 {\r\n                $sh_k = $account_id\r\n            } else {\r\n                $sh_k = $PoA\r\n            }\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->account\": $sh_k, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 5}).One(\"id\") {\r\n                warning \"VOICE CANNOT BE REGISTERED! You are not a Shareholder of the company.\"\r\n            }\r\n        } elif $meeting_type == $BOARDMEMBERS_AGENDA || $meeting_type == $BOARDMEMBERS_QUESTIONS {\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->account\": $account_id, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 6}).One(\"id\") {\r\n                warning \"VOICE CANNOT BE REGISTERED! You are not a Board Member of the company.\"\r\n            }\r\n        } else {\r\n            warning \"VOICE CANNOT BE REGISTERED! Type of meeting is not defined.\"\r\n        }\r\n    }\r\n\r\n    func RemoveBadData(securities_history array) array {\r\n        var securities_history_cleaned array \r\n        var s_id int i int\r\n\r\n        while i < Len(securities_history) {\r\n            var h map\r\n            h = securities_history[i]\r\n\r\n            if s_id != Int(h[\"shares_id\"]) {\r\n                securities_history_cleaned = Append(securities_history_cleaned, h)\r\n                s_id = Int(h[\"shares_id\"])\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        return securities_history_cleaned\r\n    }\r\n\r\n    func WriteResult(voice_weight int, shares_id int) {\r\n        var m map\r\n        m[\"decision\"] = -1 * voice_weight\r\n        m[\"shares_id\"] = shares_id\r\n        m[\"date_decision\"] = $block_time\r\n        m[\"meeting_id\"] = $MeetingId\r\n        m[\"meeting_type\"] = $meeting_type\r\n        m[\"participant\"] = $k_i\r\n        m[\"point_index\"] = $PointIndex\r\n        DBInsert(\"meetings_participants\", m)\r\n    }\r\n\r\n    action {\r\n        // board members vote\r\n        if $meeting_type == $BOARDMEMBERS_AGENDA || $meeting_type == $BOARDMEMBERS_QUESTIONS {\r\n            $k_i = $account_id\r\n\r\n            // board member has weight = 1\r\n            WriteResult(1, 0)\r\n            MeetingRecalcResults(\"MeetingId,PointIndex,Decision,VoiceWeight\", $MeetingId, $PointIndex, \"reject\", 1)\r\n\r\n        // shareholders vote\r\n        } elif $meeting_type == $SHAREHOLDERS_AGENDA || $meeting_type == $SHAREHOLDERS_QUESTIONS {\r\n\r\n            // get a list of shares that should vote on this issue\r\n            var shares string \r\n            shares = DBFind(\"voting_issues\").Where({\"id\": $agenda_id}).One(\"settings->shares\")\r\n            if Size(shares) == 0 {\r\n                warning \"VOICE CANNOT BE REGISTERED! No list of shares configured to meeting for this issue.\"\r\n            }\r\n            var shares_arr array\r\n            shares_arr = JSONDecode(shares)\r\n            if Len(shares_arr) == 0 {\r\n                warning \"VOICE CANNOT BE REGISTERED! No list of shares configured to meeting for this issue.\"\r\n            }            \r\n\r\n            if Size($PoA) == 0 {\r\n                $k_i = $account_id\r\n            } else {\r\n                PoaUse(\"CompanyId,PoaSender,ActionType\", $company_id, $PoA, \"meeting\")\r\n                $k_i = $PoA \r\n            }\r\n\r\n            // get historical shares data (return all data less than history_block)\r\n            var securities_history array\r\n            securities_history = DBFind(\"companies_securities_history\").Where({\"company_id\": $company_id, \"owner\": $k_i, \"shares_id\": {\"$in\": shares_arr}, \"history_block\": {\"$lt\": $history_block}}).Order([{history_block:\"-1\"},{id:\"-1\"}]).Columns(\"shares_id,history_balance\")\r\n\r\n            // remove bad historical data (leave only unique shares_id)\r\n            var securities_history_cleaned array j int\r\n            securities_history_cleaned = RemoveBadData(securities_history)\r\n            \r\n            // if the shares were found\r\n            if Len(securities_history_cleaned) > 0 {\r\n                // write all the shares (ordinary, privileged and others)\r\n                var VoiceWeight int\r\n                while j < Len(securities_history_cleaned) {\r\n                    var h map\r\n                    h = securities_history_cleaned[j]\r\n\r\n                    var history_balance int\r\n                    history_balance = Int(h[\"history_balance\"])\r\n                    VoiceWeight = VoiceWeight + history_balance\r\n                    var shares_id int\r\n                    shares_id = Int(h[\"shares_id\"])\r\n\r\n                    WriteResult(history_balance, shares_id)\r\n\r\n                    j = j + 1\r\n                }\r\n                MeetingRecalcResults(\"MeetingId,PointIndex,Decision,VoiceWeight\", $MeetingId, $PointIndex, \"reject\", VoiceWeight)\r\n            } else {\r\n                // write 0 to see this member vote\r\n                WriteResult(0, 0)\r\n                MeetingRecalcResults(\"MeetingId,PointIndex,Decision,VoiceWeight\", $MeetingId, $PointIndex, \"reject\", 0)\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "ProfileEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract ProfileEdit {\r\n    data {\r\n        MemberAccount string \"optional\"\r\n        PublicKey string \"optional\"\r\n        ImageId string \"optional\"\r\n\r\n        ApprovalFlag int \"optional\"\r\n\r\n        KYCFlag int \"optional\"\r\n        KYCBinaryId int \"optional\"\r\n\r\n        Phone string \"optional\"\r\n        Email string \"optional\"\r\n        IsCompany string \"optional\"\r\n        CompanyName string \"optional\"\r\n        CompanyTradeName string \"optional\"\r\n        CompanyRegNumber string \"optional\"\r\n        CompanyAddress string \"optional\"\r\n        PersonalName string \"optional\"\r\n        PersonalAddress string \"optional\"\r\n        PersonalID string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        $app_id = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\", \"deleted\": 0}).One(\"id\")\r\n        $ImageId = Int($ImageId)\r\n\r\n        if Size($MemberAccount) == 0 {\r\n            warning \"Member Account is empty\"\r\n        }\r\n\r\n        $member = DBFind(\"members\").Where({\"ecosystem\": $ecosystem_id, \"account\": $MemberAccount}).Row()\r\n    }\r\n\r\n    action {\r\n        var m map\r\n\r\n        if $ImageId > 0 {\r\n            $Data = DBFind(\"binaries\").Where({\"ecosystem\": $ecosystem_id, \"id\": $ImageId}).One(\"data\")\r\n            $ImageId = UploadBinary(\"Name,Data,ApplicationId,MemberAccount\", \"avatar\", $Data, Int($app_id), $MemberAccount)\r\n            m[\"image_id\"] = $ImageId\r\n        }\r\n\r\n        if $member {\r\n            if $ApprovalFlag == 1 {\r\n                m[\"member_info->approval_flag\"] = 1\r\n            } elif $KYCFlag == 1 {\r\n                $Data = DBFind(\"binaries\").Where({\"ecosystem\": $ecosystem_id, \"id\": $KYCBinaryId}).One(\"data\")\r\n                $kyc_id = UploadBinary(\"Name,Data,ApplicationId,MemberAccount\", \"kyc_doc\", $Data, Int($app_id), $MemberAccount)\r\n                m[\"member_info->kyc_binary_id\"] = $kyc_id\r\n                m[\"member_info->approval_flag\"] = 0\r\n            } else {\r\n                if $IsCompany == \"true\" {\r\n                    m[\"member_info->is_company\"] = \"true\"\r\n                    m[\"member_info->company_name\"] = $CompanyName\r\n                    m[\"member_info->trade_name\"] = $CompanyTradeName\r\n                    m[\"member_info->reg_number\"] = $CompanyRegNumber\r\n                    m[\"member_info->company_address\"] = $CompanyAddress\r\n                    m[\"member_info->personal_name\"] = \"\"\r\n                    m[\"member_info->personal_address\"] = \"\"\r\n                    m[\"member_info->personal_id\"] = \"\"\r\n                } else {\r\n                    m[\"member_info->is_company\"] = \"\"\r\n                    m[\"member_info->company_name\"] = \"\"\r\n                    m[\"member_info->trade_name\"] = \"\"\r\n                    m[\"member_info->reg_number\"] = \"\"\r\n                    m[\"member_info->company_address\"] = \"\"\r\n                    m[\"member_info->personal_name\"] = $PersonalName\r\n                    m[\"member_info->personal_address\"] = $PersonalAddress\r\n                    m[\"member_info->personal_id\"] = $PersonalID\r\n                }\r\n                m[\"member_info->phone\"] = $Phone\r\n                m[\"member_info->email\"] = $Email\r\n\r\n                m[\"member_info->approval_flag\"] = 0\r\n\r\n                NotificationsPartner(\"CompanyId,PageName,Action\", 0, \"settings_sh_list\", \"Send\")\r\n            }\r\n\r\n            DBUpdateExt(\"members\", {\"ecosystem\": $ecosystem_id, \"account\": $MemberAccount}, m)\r\n            //close notific\r\n            $check_close = DBFind(\"members\").Where({\"account\": $MemberAccount}).Columns(\"id,account,member_info->approval_flag\").Row()\r\n            if Int($check_close[\"member_info.approval_flag\"]) == 1 {\r\n                NotificationsPartner(\"CompanyId,PageName,Action\", 0, \"settings_sh_list\", \"Closed\")\r\n            }\r\n        } else {\r\n            m[\"account\"] = $MemberAccount\r\n            m[\"member_name\"] = $MemberAccount\r\n            m[\"ecosystem\"] = $ecosystem_id\r\n\r\n            if $IsCompany == \"true\" {\r\n                m[\"member_info->is_company\"] = \"true\"\r\n                m[\"member_info->company_name\"] = $CompanyName\r\n                m[\"member_info->trade_name\"] = $CompanyTradeName\r\n                m[\"member_info->reg_number\"] = $CompanyRegNumber\r\n                m[\"member_info->company_address\"] = $CompanyAddress\r\n                m[\"member_info->personal_name\"] = \"\"\r\n                m[\"member_info->personal_address\"] = \"\"\r\n                m[\"member_info->personal_id\"] = \"\"\r\n            } else {\r\n                m[\"member_info->is_company\"] = \"\"\r\n                m[\"member_info->company_name\"] = \"\"\r\n                m[\"member_info->trade_name\"] = \"\"\r\n                m[\"member_info->reg_number\"] = \"\"\r\n                m[\"member_info->company_address\"] = \"\"\r\n                m[\"member_info->personal_name\"] = $PersonalName\r\n                m[\"member_info->personal_address\"] = $PersonalAddress\r\n                m[\"member_info->personal_id\"] = $PersonalID\r\n            }\r\n            m[\"member_info->phone\"] = $Phone\r\n            m[\"member_info->email\"] = $Email\r\n\r\n            m[\"member_info->approval_flag\"] = 0\r\n            DBInsert(\"members\", m)\r\n\r\n            //send notific\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", 0, \"settings_sh_list\", \"Send\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "PoaEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaEdit {\r\n    data {\r\n        Step int\r\n        Id int \"optional\"\r\n        CompanyId int \"optional\"\r\n\r\n        PoaSender string \"optional\"\r\n        PoaRecipient string \"optional\"\r\n\r\n        DateStartD string \"optional\"\r\n        DateStartT string \"optional\"\r\n        DateEndD string \"optional\"\r\n        DateEndT string \"optional\"\r\n        FlagMeeting string \"optional\"\r\n        FlagBidding string \"optional\"\r\n\r\n        DOCBinaryId int \"optional\"\r\n    }\r\n\r\n    func getTimeZoneCompany(com_id int) string {\r\n        var timezone string\r\n        timezone = DBFind(\"companies_list\").Where({\"id\": com_id}).One(\"address->timezone\")\r\n        if Size(timezone) == 0 {\r\n            timezone = \"America/Danmarkshavn\"\r\n        }\r\n        return timezone\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func addZeroSeconds(s string) string {\r\n        if Size(s) == 5 {\r\n            s = Sprintf(\"%v:00\", s)\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(d) == 0 {\r\n            d = \"2000-01-01\"\r\n        }\r\n        if Size(t) == 0 {\r\n            t = \"00:00:00\"\r\n        }\r\n        dt = Sprintf(\"%v %v\", trimZeroTime(d), addZeroSeconds(t))\r\n        return dt\r\n    }\r\n\r\n    func fixDatetimes() {\r\n        var timezone string\r\n        if Int($Id) == 0 {\r\n            timezone = getTimeZoneCompany($CompanyId)\r\n        } else {\r\n            var com_id int\r\n            com_id = Int(DBFind(\"poa_list\").Where({\"id\": $Id}).One(\"company_id\"))\r\n            timezone = getTimeZoneCompany(com_id)\r\n        }\r\n\r\n        $DateStart = UnixDateTimeLocation(dateAddTime($DateStartD, $DateStartT), timezone)\r\n        $DateEnd = UnixDateTimeLocation(dateAddTime($DateEndD, $DateEndT), timezone)\r\n    }\r\n\r\n    func getStatus() int {\r\n        var status int\r\n\r\n        if $DateStart > $block_time {\r\n            status = $POA_STATUS_ISSUED\r\n        }\r\n        if $DateStart <= $block_time {\r\n            status = $POA_STATUS_ACTIVE\r\n        }\r\n        if $DateEnd <= $block_time {\r\n            status = $POA_STATUS_EXPIRED\r\n        }\r\n\r\n        return status\r\n    }\r\n\r\n    conditions {\r\n        $POA_STATUS_ISSUED = 1\r\n        $POA_STATUS_ACTIVE = 2\r\n        $POA_STATUS_EXPIRED = 3\r\n        $POA_STATUS_REVOKED = 4\r\n\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n\r\n        fixDatetimes()\r\n\r\n        if Int($Id) == 0 || Int($Step) == 3 {\r\n            if $DateStart < 631152000 {\r\n                warning \"PERIOD FROM not correct!\"\r\n            }\r\n            if $DateEnd <= $DateStart {\r\n                warning \"PERIOD UNTIL less than PERIOD FROM!\"\r\n            }\r\n        }\r\n        if Int($Id) == 0 || Int($Step) == 1 {\r\n            if DBFind(\"poa_list\").Where({\"sender\": $PoaSender, \"company_id\": $CompanyId, \"status\": {\"$neq\": 4}}).Row() {\r\n                warning \"Selected Shareholder already has Power of Attorney.\"\r\n            }\r\n        } else {\r\n            if DBFind(\"poa_list\").Where({\"id\": $Id, \"status\": 4}).Row() {\r\n                warning \"EDITING IS FORBIDDEN! This power of attorney has been revoked.\"\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"sender\"] = $PoaSender\r\n            m[\"recipient\"] = $PoaRecipient\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"date_start\"] = $DateStart\r\n            m[\"date_end\"] = $DateEnd\r\n            m[\"date_created\"] = $block_time\r\n            if $FlagMeeting == \"true\" {\r\n                m[\"flags->meeting\"] = \"1\"\r\n            } else {\r\n                m[\"flags->meeting\"] = \"0\"\r\n            }\r\n            if $FlagBidding == \"true\" {\r\n                m[\"flags->bidding\"] = \"1\"\r\n            } else {\r\n                m[\"flags->bidding\"] = \"0\"\r\n            }\r\n            m[\"status\"] = getStatus()\r\n            m[\"approval_flags->sender\"] = 0\r\n            m[\"approval_flags->recipient\"] = 0\r\n            m[\"approval_flags->details\"] = 0\r\n            m[\"approval_flags->file\"] = 0\r\n        } else {\r\n            if Int($Step) == 1 {\r\n                m[\"sender\"] = $PoaSender\r\n                m[\"approval_flags->sender\"] = 0\r\n            }\r\n            if Int($Step) == 2 {\r\n                m[\"recipient\"] = $PoaRecipient\r\n                m[\"approval_flags->recipient\"] = 0\r\n            }\r\n            if Int($Step) == 3 {\r\n                m[\"date_start\"] = $DateStart\r\n                m[\"date_end\"] = $DateEnd\r\n                if $FlagMeeting == \"true\" {\r\n                    m[\"flags->meeting\"] = \"1\"\r\n                } else {\r\n                    m[\"flags->meeting\"] = \"0\"\r\n                }\r\n                if $FlagBidding == \"true\" {\r\n                    m[\"flags->bidding\"] = \"1\"\r\n                } else {\r\n                    m[\"flags->bidding\"] = \"0\"\r\n                }\r\n                m[\"status\"] = getStatus()\r\n                m[\"approval_flags->details\"] = 0\r\n            }\r\n            if Int($Step) == 4 {\r\n                m[\"file_id\"] = $DOCBinaryId\r\n                m[\"approval_flags->file\"] = 0\r\n            }\r\n        }\r\n\r\n        if Int($Id) == 0 {\r\n            $new_id = DBInsert(\"poa_list\", m)\r\n\r\n            var role_agent int\r\n            role_agent = Int(DBFind(\"roles\").Where({\"company_id\": $CompanyId, \"role_type\": 7, \"deleted\": 0, \"ecosystem\": $ecosystem_id}).One(\"id\"))\r\n            if !DBFind(\"roles_participants\").Where({\"member->account\": $PoaRecipient, \"role->id\": role_agent, \"deleted\": 0, \"ecosystem\": $ecosystem_id}).One(\"id\") {\r\n                RolesAssign(\"Rid,MemberAccount\", role_agent, $PoaRecipient)\r\n            }\r\n\r\n            $company_id = Int(DBFind(\"poa_list\").WhereId($new_id).One(\"company_id\"))\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($company_id), \"poa_list\", \"Send\")\r\n        } else {\r\n            DBUpdate(\"poa_list\", Int($Id), m)\r\n\r\n            $company_id = Int(DBFind(\"poa_list\").WhereId($Id).One(\"company_id\"))\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($company_id), \"poa_list\", \"Send\")\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "CompanyEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract CompanyEdit {\r\n    data {\r\n        Step int\r\n        Id int \"optional\"\r\n\r\n        Name string \"optional\"\r\n        TraderName string \"optional\"\r\n\r\n        LegalForm string \"optional\"\r\n        \r\n        TimeZone string \"optional\"\r\n        AddressCountry string \"optional\"\r\n        AddressStreet string \"optional\"\r\n        AddressHouseNumber string \"optional\"\r\n        AddressCity string \"optional\"\r\n        AddressPostalCode string \"optional\"\r\n\r\n        RegistrationAuthority string \"optional\"\r\n        RegistrationNumber string \"optional\"\r\n        RegistrationDate string \"optional\"\r\n        RegistrationDuration string \"optional\"\r\n        FlagUnlimited string \"optional\"\r\n\r\n        FlagLicense string \"optional\"\r\n        LicenseNumber string \"optional\"\r\n        LicenseAuthority string \"optional\"\r\n        LicenseActivity string \"optional\"\r\n        LicenseIssueDate string \"optional\"\r\n        LicenseValidUntil string \"optional\"\r\n\r\n        PercentageShares string \"optional\"\r\n        QuorumShares string \"optional\"\r\n        PercentageBoardMembers string \"optional\"\r\n        QuorumBoardMembers string \"optional\"\r\n    }\r\n\r\n    func getTimeZoneCompany(com_id int) string {\r\n        var timezone string\r\n        timezone = DBFind(\"companies_list\").Where({\"id\": com_id}).One(\"address->timezone\")\r\n        if Size(timezone) == 0 {\r\n            timezone = \"America/Danmarkshavn\"\r\n        }\r\n        return timezone\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func addZeroSeconds(s string) string {\r\n        if Size(s) == 5 {\r\n            s = Sprintf(\"%v:00\", s)\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(d) == 0 {\r\n            d = \"2000-01-01\"\r\n        }\r\n        if Size(t) == 0 {\r\n            t = \"00:00:00\"\r\n        }\r\n        dt = Sprintf(\"%v %v\", trimZeroTime(d), addZeroSeconds(t))\r\n        return dt\r\n    }\r\n\r\n    func fixDatetimes() {\r\n        var timezone string\r\n        timezone = getTimeZoneCompany($Id)\r\n\r\n        $registration_date = UnixDateTimeLocation(dateAddTime($RegistrationDate, \"00:00\"), timezone)\r\n        $registration_duration = UnixDateTimeLocation(dateAddTime($RegistrationDuration, \"00:00\"), timezone)\r\n        $license_issue_date = UnixDateTimeLocation(dateAddTime($LicenseIssueDate, \"00:00\"), timezone)\r\n        $license_valid_until = UnixDateTimeLocation(dateAddTime($LicenseValidUntil, \"00:00\"), timezone)\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n\r\n        fixDatetimes()\r\n\r\n        if Int($Step) == 6 {\r\n            if Float($PercentageShares) < 1 || Float($PercentageShares) > 100 {\r\n                warning Sprintf(\"WRONG PERCENT OF SHARES NUMBER: %v. Percentages should be in the range of 1 to 100.\", Float($PercentageShares))\r\n            }\r\n            if Float($QuorumShares) < 1 || Float($QuorumShares) > 100 {\r\n                warning Sprintf(\"WRONG QUORUM OF SHARES NUMBER: %v. Quorum should be in the range of 1 to 100.\", Float($QuorumShares))\r\n            }\r\n            if Float($PercentageBoardMembers) < 1 || Float($PercentageBoardMembers) > 100 {\r\n                warning Sprintf(\"WRONG PERCENTAGE OF VOTES NUMBER: %v. Percentages should be in the range of 1 to 100.\", Float($PercentageBoardMembers))\r\n            }\r\n            if Float($QuorumBoardMembers) < 1 || Float($QuorumBoardMembers) > 100 {\r\n                warning Sprintf(\"WRONG QUORUM OF VOTES NUMBER: %v. Quorum should be in the range of 1 to 100.\", Float($QuorumBoardMembers))\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time\r\n            m[\"approval_flags->name\"] = 0\r\n            m[\"approval_flags->legal\"] = 0\r\n            m[\"approval_flags->address\"] = 0\r\n            m[\"approval_flags->registration\"] = 0\r\n            m[\"approval_flags->license\"] = 0\r\n            m[\"settings->percentage_shares\"] = \"10\"\r\n            m[\"settings->quorum_shares\"] = \"50\"\r\n            m[\"settings->percentage_boardmembers\"] = \"25\"\r\n            m[\"settings->quorum_boardmembers\"] = \"50\"\r\n        }\r\n\r\n        if Int($Step) == 1 {\r\n            m[\"name\"] = $Name\r\n            m[\"trader_name\"] = $TraderName\r\n            m[\"approval_flags->name\"] = 0\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"legal_form\"] = $LegalForm\r\n            m[\"approval_flags->legal\"] = 0\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"address->timezone\"] = $TimeZone\r\n            m[\"address->country\"] = $AddressCountry\r\n            m[\"address->street\"] = $AddressStreet\r\n            m[\"address->house_number\"] = $AddressHouseNumber\r\n            m[\"address->city\"] = $AddressCity\r\n            m[\"address->postal_code\"] = $AddressPostalCode\r\n            m[\"approval_flags->address\"] = 0\r\n        }\r\n        if Int($Step) == 4 {\r\n            m[\"registration->authority\"] = $RegistrationAuthority\r\n            m[\"registration->number\"] = $RegistrationNumber\r\n            m[\"registration->date\"] = $registration_date\r\n            if $FlagUnlimited == \"true\" {\r\n                m[\"registration->duration\"] = 0\r\n            } else {\r\n                m[\"registration->duration\"] = $registration_duration\r\n            }\r\n            m[\"approval_flags->registration\"] = 0\r\n        }\r\n        if Int($Step) == 5 {\r\n            if $FlagLicense == \"true\" {\r\n                m[\"license->number\"] = $LicenseNumber\r\n                m[\"license->authority\"] = $LicenseAuthority\r\n                m[\"license->activity\"] = $LicenseActivity\r\n                m[\"license->issue_date\"] = $license_issue_date\r\n                m[\"license->valid_until\"] = $license_valid_until\r\n            } else {\r\n                m[\"license->number\"] = \"\"\r\n                m[\"license->authority\"] = \"\"\r\n                m[\"license->activity\"] = \"\"\r\n                m[\"license->issue_date\"] = 0\r\n                m[\"license->valid_until\"] = 0\r\n            }\r\n            m[\"approval_flags->license\"] = 0\r\n        }\r\n        if Int($Step) == 6 {\r\n            m[\"settings->percentage_shares\"] = $PercentageShares\r\n            m[\"settings->quorum_shares\"] = $QuorumShares\r\n            m[\"settings->percentage_boardmembers\"] = $PercentageBoardMembers\r\n            m[\"settings->quorum_boardmembers\"] = $QuorumBoardMembers\r\n        }\r\n\r\n        if Int($Id) == 0 {\r\n            $new_id = DBInsert(\"companies_list\", m)\r\n\r\n            $role_client = \"Issuer (\" + $Name + \")\"\r\n            $role_shareholder = \"Shareholder (\" + $Name + \")\"\r\n            $role_board_member = \"Board Member (\" + $Name + \")\"\r\n            $role_agent = \"Agent (\" + $Name + \")\"\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_client, 4, $new_id)\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_shareholder, 5, $new_id)\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_board_member, 6, $new_id)\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_agent, 7, $new_id)\r\n\r\n            IssuesInstall(\"CompanyId\", $new_id)\r\n        } else {\r\n            DBUpdate(\"companies_list\", Int($Id), m)\r\n\r\n            if Int($Step) != 6 {\r\n                NotificationsPartner(\"CompanyId,PageName,Action\", Int($Id), \"co_view\", \"Send\")\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "RolesUnassign",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract RolesUnassign {\r\n    data {\r\n        RowId int\r\n    }\r\n\r\n    conditions {\r\n        @1DeveloperCondition()\r\n\r\n        var assigned map\r\n        assigned = DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"id\": $RowId, \"deleted\": 0}).Columns(\"id,role->id\").Row()\r\n        if !assigned {\r\n            warning \"The role participant is not found\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"deleted\"] = $block_time\r\n        m[\"date_deleted\"] = $block_time\r\n        DBUpdate(\"roles_participants\", $RowId, m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesEdit {\r\n    data {\r\n        SharesId int\r\n        Id int \"optional\"\r\n        CompanyId int \"optional\"\r\n        Owner string \"optional\"\r\n\r\n        Wizard int \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n\r\n        $shares_info = DBFind(\"co_shares_list\").Columns(\"id,details,details->type\").WhereId($SharesId).Row()\r\n        $share_type = Str($shares_info[\"details.type\"])\r\n        if DBFind(\"companies_securities\").Where({\"info\":$share_type,\"deleted\":0,\"company_id\":$CompanyId,\"owner\":$Owner}) {\r\n            warning (\"User already has shares with type \"+ $share_type)\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"shares_id\"] = $SharesId\r\n            m[\"info\"] = $share_type\r\n            m[\"owner\"] = $Owner\r\n            m[\"balance\"] = 0\r\n        }\r\n        \r\n        if Int($Id) == 0 {\r\n            $insert_id = DBInsert(\"companies_securities\", m)\r\n\r\n            var role_shareholder int\r\n            role_shareholder = Int(DBFind(\"roles\").Where({\"company_id\": $CompanyId, \"role_type\": 5, \"deleted\": 0, \"ecosystem\": $ecosystem_id}).One(\"id\"))\r\n            if !DBFind(\"roles_participants\").Where({\"member->account\": $Owner, \"role->id\": role_shareholder, \"deleted\": 0, \"ecosystem\": $ecosystem_id}).One(\"id\") {\r\n                RolesAssign(\"Rid,MemberAccount\", role_shareholder, $Owner)\r\n            }\r\n\r\n            if $Wizard == 1 {\r\n                var buffer_data map\r\n                $BufferKey = \"new_user_reg\"\r\n                buffer_data[\"add_member\"] = $Owner\r\n                buffer_data[\"securities_id\"] = $insert_id\r\n                BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n            }\r\n        } else {\r\n            if !DBFind(\"companies_securities_history\").Where({\"security_id\":$Id,\"owner\":$Owner}){\r\n                DBUpdate(\"companies_securities\", Int($Id), {\"deleted\":1})\r\n            } else {\r\n                warning \"Securities cannot be removed\"\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesHistoryApprov",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesHistoryApprov {\r\n    data {\r\n        Id int\r\n        Step int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Step) == 1 {\r\n            m[\"approval_flags->order\"] = 1\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"approval_flags->comment\"] = 1\r\n        }\r\n        DBUpdate(\"companies_securities_history\", Int($Id), m)\r\n\r\n        //close notific\r\n        $check_close = DBFind(\"companies_securities_history\").WhereId($Id).Columns(\"id,approval_flags->order,approval_flags->comment,company_id\").Row()\r\n        if $check_close[\"approval_flags.order\"] == 1 && $check_close[\"approval_flags.comment\"] == 1 {\r\n            NotificationsPartner(\"CompanyId,PageName,Action,SecuritiesId\", Int($check_close[\"company_id\"]), \"co_securities_history_list\", \"Closed\", Int($Id))\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesMemberAmount",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesMemberAmount {\r\n    data {\r\n        Amount int\r\n        SecuritiesId int\r\n\r\n        RecountType string \"optional\"\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1SecuritiesHistoryEdit\",\"@1SecuritiesTransfer\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"Amount recount cannot be performed\"\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n    }\r\n\r\n    action {\r\n        $check_amount_securities = DBFind(\"companies_securities\").WhereId($SecuritiesId).Row()\r\n        $shares_id = Int($check_amount_securities[\"shares_id\"])\r\n        $check_amount_total = DBFind(\"co_shares_list\").WhereId(Int($shares_id)).Row()\r\n        $amount_member = Int($check_amount_securities[\"balance\"])\r\n\r\n        $percent_securities = (Float($amount_member) / Float($check_amount_total[\"total_amount\"])) * Float(100)\r\n\r\n        if $RecountType != \"order\" {\r\n            if Int($check_amount_total[\"amount\"]) + Int($Amount) > Int($check_amount_total[\"total_amount\"]) {\r\n                warning \"Amount greater than total shares\"\r\n            }\r\n            DBUpdate(\"co_shares_list\",Int($shares_id),{\"+amount\":$Amount})\r\n        }\r\n        DBUpdate(\"companies_securities\",$SecuritiesId,{\"share_percent\":$percent_securities})\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesHistoryEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesHistoryEdit {\r\n    data {\r\n        Id int \"optional\"\r\n        SecuritiesId int \"optional\"\r\n\r\n        OrderType int\r\n        OrderDate string\r\n        Amount int\r\n        Comments string\r\n    }\r\n\r\n    func getTimeZoneCompany(com_id int) string {\r\n        var timezone string\r\n        timezone = DBFind(\"companies_list\").Where({\"id\": com_id}).One(\"address->timezone\")\r\n        if Size(timezone) == 0 {\r\n            timezone = \"America/Danmarkshavn\"\r\n        }\r\n        return timezone\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func addZeroSeconds(s string) string {\r\n        if Size(s) == 5 {\r\n            s = Sprintf(\"%v:00\", s)\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(d) == 0 {\r\n            d = \"2000-01-01\"\r\n        }\r\n        if Size(t) == 0 {\r\n            t = \"00:00:00\"\r\n        }\r\n        dt = Sprintf(\"%v %v\", trimZeroTime(d), addZeroSeconds(t))\r\n        return dt\r\n    }\r\n\r\n    conditions {\r\n        $Amount = Replace(Str($Amount), `-`, ``)\r\n        $Amount = Int($Amount)\r\n        if $OrderDate == \"\" {\r\n            warning \"Order date cannot be empty\"\r\n        }\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n        // get the shares_id\r\n        $shares_id = DBFind(\"companies_securities\").WhereId($SecuritiesId).One(\"shares_id\")\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n        if Int($Id) == 0 {\r\n            $securities = DBFind(\"companies_securities\").Where({\"id\": $SecuritiesId}).Columns(\"company_id,owner,balance,shares_id\").Row()\r\n            if !$securities {\r\n                warning \"Securities is not found\"\r\n            }\r\n        } else {\r\n            $securities_history_info = DBFind(\"companies_securities_history\").Where({\"id\": $Id}).Row()\r\n            $securities_history = Int($securities_history_info[\"security_id\"])\r\n            if !$securities_history {\r\n                warning \"Securities history is not found\"\r\n            }\r\n            if Int($securities_history_info[\"transaction_type\"]) == 1 {\r\n                warning \"Editing orders with Transaction type is not possible\"\r\n            }\r\n        }\r\n        if Int($Id) == 0 {\r\n            $check_balance_old = DBFind(\"companies_securities\").WhereId($SecuritiesId).One(\"balance\")\r\n        } else {\r\n            $check_balance_old = DBFind(\"companies_securities\").WhereId(Int($securities_history)).One(\"balance\")\r\n        }\r\n        if $OrderType == -1 {\r\n            if Int($Id) == 0 {\r\n                if Int($Amount) > Int($check_balance_old) {\r\n                    warning (\"Sale amount is greater than current balance\")\r\n                }\r\n            } else {\r\n                if Int($securities_history_info[\"order_type\"]) == 1 {\r\n                    $total_amount_recount = Int($Amount) + Int($securities_history_info[\"order_amount\"])\r\n                    if Int($check_balance_old) - Int($total_amount_recount) < 0 {\r\n                        warning (\"Sale amount is greater than current balance\")\r\n                    }\r\n                } else {\r\n                    if Int($check_balance_old) - Int($Amount) < 0 {\r\n                        warning (\"Sale amount is greater than current balance\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var timezone string\r\n        if Int($Id) == 0 {\r\n            timezone = getTimeZoneCompany(Int($securities[\"company_id\"]))\r\n        } else {\r\n            timezone = getTimeZoneCompany(Int($securities_history_info[\"company_id\"]))\r\n        }\r\n\r\n        if $original_contract == \"ExcelParseConfirm\"{\r\n            $order_date = UnixDateTimeLocation($OrderDate, timezone)\r\n        } else {\r\n            $order_date = UnixDateTimeLocation(dateAddTime($OrderDate, \"00:00\"), timezone)\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"company_id\"] = $securities[\"company_id\"]\r\n            m[\"date_created\"] = $block_time\r\n            m[\"owner\"] = $securities[\"owner\"]\r\n            m[\"security_id\"] = $SecuritiesId\r\n            m[\"history_block\"] = $block\r\n            m[\"shares_id\"] = $securities[\"shares_id\"]\r\n        }\r\n\r\n        m[\"approval_flags->order\"] = 0\r\n        m[\"approval_flags->comment\"] = 0\r\n        m[\"order_type\"] = $OrderType\r\n        m[\"order_date\"] = $order_date\r\n        m[\"order_amount\"] = $Amount\r\n        m[\"order_comments\"] = $Comments\r\n\r\n        if Int($Id) == 0 {\r\n            DBInsert(\"companies_securities_history\", m)\r\n            SecuritiesHistoryRecount(\"SecuritiesId\", $SecuritiesId)\r\n            $check_balance_new = DBFind(\"companies_securities\").WhereId($SecuritiesId).One(\"balance\")\r\n            $check_balance_recount = Int($check_balance_new) - Int($check_balance_old)\r\n            SecuritiesMemberAmount(\"SecuritiesId,Amount\", $SecuritiesId,Int($check_balance_recount))\r\n\r\n            NotificationsPartner(\"CompanyId,PageName,Action,SecuritiesId\", Int($securities[\"company_id\"]), \"co_securities_history_list\", \"Send\", $SecuritiesId)\r\n        } else {\r\n            DBUpdate(\"companies_securities_history\", Int($Id), m)\r\n            SecuritiesHistoryRecount(\"SecuritiesId\", Int($securities_history))\r\n            $check_balance_new = DBFind(\"companies_securities\").WhereId(Int($securities_history)).One(\"balance\")\r\n            $check_balance_recount = Int($check_balance_new) - Int($check_balance_old)\r\n            SecuritiesMemberAmount(\"SecuritiesId,Amount\", Int($securities_history),Int($check_balance_recount))\r\n\r\n            NotificationsPartner(\"CompanyId,PageName,Action,SecuritiesId\", Int($securities_history_info[\"company_id\"]), \"co_securities_history_list\", \"Send\", Int($securities_history_info[\"security_id\"]))\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "ExcelParseConfirm",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract ExcelParseConfirm {\r\n    data {\r\n        MemberWallet string\r\n        CompanyId int\r\n        SecuritiesId int\r\n    }\r\n\r\n    conditions {}\r\n\r\n    action {\r\n        var requests array i line_amount int req map\r\n        requests = DBFind(\"security_intermediate_data\").Where({\"owner\": $MemberWallet, \"company_id\": $CompanyId, \"manager\": $account_id, \"securities_id\": $SecuritiesId, \"deleted\": 0})\r\n        if Len(requests) > 0 {\r\n            i = 0\r\n            while i < Len(requests) {\r\n                req = requests[i]\r\n                $Secdate = DateTime(Int(req[\"date\"]))\r\n                if Int(req[\"amount\"]) > 0 {\r\n                    SecuritiesHistoryEdit(\"OrderType,OrderDate,SecuritiesId,Amount,Comments\", 1, $Secdate, $SecuritiesId, Int(req[\"amount\"]), req[\"comments\"])\r\n                } else {\r\n                    line_amount = Int(Str(Replace(req[\"amount\"], \"-\", \"\")))\r\n                    SecuritiesHistoryEdit(\"OrderType,OrderDate,SecuritiesId,Amount,Comments\", -1, $Secdate, $SecuritiesId, line_amount, req[\"comments\"])\r\n                }\r\n                i = i + 1\r\n            }\r\n        } else {\r\n            warning LangRes(\"security_not_found\",\"en\")\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesTransfer",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesTransfer {\r\n    data {\r\n        OrderId int\r\n    }\r\n\r\n    func getPermission() int {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1SecuritiesOrderSign\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    conditions {\r\n       getPermission()   //getting permission to run\r\n    }\r\n\r\n    action {\r\n        var order m map securities_previous_owner securities_new_owner int\r\n        order = DBFind(\"companies_orders_securities\").WhereId($OrderId).Row()\r\n        $comp_id = Int(order[\"company_id\"])\r\n        $prev_owner = Str(order[\"previous_owner\"])\r\n        $new_owner = Str(order[\"new_owner\"])\r\n        $shares_id = Int(order[\"shares_id\"])\r\n        securities_previous_owner = Int(DBFind(\"companies_securities\").Where({\"company_id\":$comp_id,\"deleted\":0,\"owner\":$prev_owner,\"shares_id\":$shares_id}).One(\"id\"))\r\n        securities_new_owner = Int(DBFind(\"companies_securities\").Where({\"company_id\":$comp_id,\"deleted\":0,\"owner\":$new_owner,\"shares_id\":$shares_id}).One(\"id\"))\r\n        $comment = \"Sale and Purchase Agreement (shares transferred to \"+$new_owner+\")\"\r\n        m[\"company_id\"] = $comp_id\r\n        m[\"shares_id\"] = $shares_id\r\n        m[\"date_created\"] = $block_time\r\n        m[\"owner\"] = $prev_owner\r\n        m[\"order_comments\"] = $comment\r\n        m[\"security_id\"] = securities_previous_owner\r\n        m[\"approval_flags->order\"] = 1\r\n        m[\"approval_flags->comment\"] = 1\r\n        m[\"order_type\"] = -1\r\n        m[\"order_date\"] = Int(order[\"order_date\"])\r\n        m[\"order_amount\"] = Int(order[\"order_amount\"])\r\n        m[\"transaction_type\"] = 1\r\n        m[\"history_block\"] = $block\r\n\r\n        DBInsert(\"companies_securities_history\", m) // - amount previous owner\r\n        SecuritiesHistoryRecount(\"SecuritiesId\", securities_previous_owner)\r\n        SecuritiesMemberAmount(\"SecuritiesId,Amount,RecountType\", securities_previous_owner,Int(order[\"order_amount\"]),\"order\")\r\n\r\n        $comment = \"Sale and Purchase Agreement (shares obtained from \"+$prev_owner+\")\"\r\n        m[\"order_comments\"] = $comment\r\n        m[\"owner\"] = $new_owner\r\n        m[\"security_id\"] = securities_new_owner\r\n        m[\"order_type\"] = 1\r\n        m[\"transaction_type\"] = 1\r\n        m[\"history_block\"] = $block\r\n\r\n        DBInsert(\"companies_securities_history\", m) // + amount new owner\r\n        SecuritiesHistoryRecount(\"SecuritiesId\", securities_new_owner)\r\n        SecuritiesMemberAmount(\"SecuritiesId,Amount,RecountType\", securities_new_owner,Int(order[\"order_amount\"]),\"order\")\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesOrderTransfer",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesOrderTransfer {\r\n    data {\r\n        PreviousOwner string\r\n        NewOwner string\r\n        Amount int\r\n        OrderDate string\r\n        CompanyId int\r\n        SharesId int\r\n    }\r\n\r\n    func getTimeZoneCompany(com_id int) string {\r\n        var timezone string\r\n        timezone = DBFind(\"companies_list\").Where({\"id\": com_id}).One(\"address->timezone\")\r\n        if Size(timezone) == 0 {\r\n            timezone = \"America/Danmarkshavn\"\r\n        }\r\n        return timezone\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func addZeroSeconds(s string) string {\r\n        if Size(s) == 5 {\r\n            s = Sprintf(\"%v:00\", s)\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(d) == 0 {\r\n            d = \"2000-01-01\"\r\n        }\r\n        if Size(t) == 0 {\r\n            t = \"00:00:00\"\r\n        }\r\n        dt = Sprintf(\"%v %v\", trimZeroTime(d), addZeroSeconds(t))\r\n        return dt\r\n    }\r\n\r\n    conditions {\r\n        if $OrderDate == \"\" {\r\n            warning \"Order date cannot be empty\"\r\n        }\r\n        $Amount = Replace(Str($Amount), `-`, ``)\r\n        $Amount = Int($Amount)\r\n        if $Amount == 0 {\r\n            warning \"Amount cannot be empty\"\r\n        }\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $PreviousOwner, \"deleted\": 0}).Row() {\r\n            warning \"The previous owner of the securities was not found in the company\"\r\n        }\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $NewOwner, \"deleted\": 0}).Row() {\r\n            warning \"The new owner of the securities was not found in the company\"\r\n        }\r\n        $securities = DBFind(\"companies_securities\").Where({\"company_id\": $CompanyId, \"owner\": $PreviousOwner, \"shares_id\": $SharesId, \"deleted\": 0}).Columns(\"id,company_id,owner,balance,shares_id\").Row()\r\n        if !$securities {\r\n            warning \"Securities is not found\"\r\n        }\r\n        if $Amount > Int($securities[\"balance\"]){\r\n            warning \"Previous owner balance less than the amount\"\r\n        }\r\n\r\n        var timezone string\r\n        timezone = getTimeZoneCompany(Int($CompanyId))\r\n        $order_date = UnixDateTimeLocation(dateAddTime($OrderDate, \"00:00\"), timezone)\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"order_signs->previous_owner_sign\"] = \"\"\r\n        m[\"order_signs->previous_owner_sign_time\"] = \"\"\r\n        m[\"order_signs->new_owner_sign\"] = \"\"\r\n        m[\"order_signs->new_owner_sign_time\"] = \"\"\r\n        m[\"order_signs->issuer_sign\"] = \"\"\r\n        m[\"order_signs->issuer_sign_time\"] = \"\"\r\n        m[\"order_signs->comments\"] = \"\"\r\n        m[\"order_signs->reject_step\"] = \"\"\r\n        m[\"company_id\"] = $CompanyId\r\n        m[\"date_created\"] = $block_time\r\n        m[\"order_amount\"] = $Amount\r\n        m[\"order_date\"] = $order_date\r\n        m[\"new_owner\"] = $NewOwner\r\n        m[\"previous_owner\"] = $PreviousOwner\r\n        m[\"shares_id\"] = $SharesId\r\n        DBInsert(\"companies_orders_securities\", m)\r\n\r\n        //send notific\r\n        NotificationsPartner(\"CompanyId,PageName,Action\", Int($CompanyId), \"co_securities_orders_list\", \"Send\")\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesOrderTransferEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesOrderTransferEdit {\r\n    data {\r\n        OrderId int\r\n        PreviousOwner string \"optional\"\r\n        NewOwner string \"optional\"\r\n        Amount int \"optional\"\r\n        OrderDate string \"optional\"\r\n        DOCBinaryId int \"optional\"\r\n        ApprovalFlag int \"optional\"\r\n        CompanyId int \"optional\"\r\n        Del int \"optional\"\r\n    }\r\n\r\n    func getTimeZoneCompany(com_id int) string {\r\n        var timezone string\r\n        timezone = DBFind(\"companies_list\").Where({\"id\": com_id}).One(\"address->timezone\")\r\n        if Size(timezone) == 0 {\r\n            timezone = \"America/Danmarkshavn\"\r\n        }\r\n        return timezone\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n    func addZeroSeconds(s string) string {\r\n        if Size(s) == 5 {\r\n            s = Sprintf(\"%v:00\", s)\r\n        }\r\n        return s\r\n    }\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(d) == 0 {\r\n            d = \"2000-01-01\"\r\n        }\r\n        if Size(t) == 0 {\r\n            t = \"00:00:00\"\r\n        }\r\n        dt = Sprintf(\"%v %v\", trimZeroTime(d), addZeroSeconds(t))\r\n        return dt\r\n    }\r\n\r\n    func closeNotes(notific_order_id int) {\r\n        var notes array i int\r\n        $notific_company_id = Int(DBFind(\"@1companies_orders_securities\").WhereId(notific_order_id).One(\"company_id\"))\r\n        notes = DBFind(\"@1notifications\").Where({\"closed\": 0, \"ecosystem\": $ecosystem_id, \"page_name\": \"co_securities_orders_list\", \"page_params->company_id\": $notific_company_id, \"page_params->step\":\"review\"})\r\n        while i < Len(notes){\r\n            var note map\r\n            note = notes[i]\r\n            @1NotificationsProcess(\"NotificId\", Int(note[\"id\"]))\r\n            @1NotificationsClose(\"NotificId\", Int(note[\"id\"]))\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if $ApprovalFlag {\r\n            $check_access = Int(DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->account\": $account_id, \"deleted\": 0}).One(\"id\"))\r\n            if $check_access == 0 {\r\n                warning LangRes(\"access_denied\", \"en\")\r\n            }\r\n        } else {\r\n            if DBFind(\"companies_orders_securities\").Where({\"id\": $OrderId,\"approval_flags\": 1}).Row() {\r\n                warning \"Data has been verified. Editing is not possible\"\r\n            }\r\n            if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n                warning LangRes(\"access_denied\", \"en\")\r\n            }\r\n            if $Amount {\r\n                $shares_info = DBFind(\"companies_orders_securities\").WhereId($OrderId).Row()\r\n                $PreviousOwnerId = Str($shares_info[\"previous_owner\"])\r\n                $shares = Int($shares_info[\"shares_id\"])\r\n                $securities = DBFind(\"companies_securities\").Where({\"shares_id\":$shares, \"company_id\": $CompanyId, \"owner\": $PreviousOwnerId, \"deleted\": 0}).Columns(\"id,company_id,owner,balance\").Row()\r\n                $Amount = Replace(Str($Amount), `-`, ``)\r\n                $Amount = Int($Amount)\r\n                if $Amount == 0 {\r\n                    warning \"Amount cannot be empty\"\r\n                }\r\n                if $Amount > Int($securities[\"balance\"]){\r\n                    warning \"Previous owner balance less than the amount\"\r\n                }\r\n                if $OrderDate == \"\" {\r\n                    warning \"Order date cannot be empty\"\r\n                }\r\n                var timezone string\r\n                timezone = getTimeZoneCompany(Int($CompanyId))\r\n                $order_date = UnixDateTimeLocation(dateAddTime($OrderDate, \"00:00\"), timezone)\r\n            } else {\r\n                if $PreviousOwner {\r\n                    if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $PreviousOwner, \"deleted\": 0}).Row() {\r\n                        warning \"The previous owner of the securities was not found in the company\"\r\n                    }\r\n                    if !DBFind(\"companies_securities\").Where({\"company_id\": $CompanyId, \"owner\": $PreviousOwner}).Row() {\r\n                        warning \"Securities ID not found\"\r\n                    }\r\n                }\r\n                if $NewOwner {\r\n                    if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->account\": $NewOwner, \"deleted\": 0}).Row() {\r\n                        warning \"The new owner of the securities was not found in the company\"\r\n                    }\r\n                    if !DBFind(\"companies_securities\").Where({\"company_id\": $CompanyId, \"owner\": $NewOwner}).Row() {\r\n                        warning \"Securities ID not found\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if $DOCBinaryId > 0 {\r\n            m[\"file_id\"] = $DOCBinaryId\r\n        }\r\n        if $ApprovalFlag {\r\n            var param map\r\n            m[\"approval_flags\"] = 1\r\n            m[\"status\"] = 1\r\n            param[\"order_id\"] = $OrderId\r\n            param[\"step\"] = 1\r\n            $order_info = DBFind(\"companies_orders_securities\").WhereId($OrderId).Row()\r\n            //send notification previous owner\r\n            $PreviousOwnerAccount = Str($order_info[\"previous_owner\"])\r\n            $PreviousOwnerId = $PreviousOwnerAccount\r\n            $check_company_id = Int($order_info[\"company_id\"])\r\n            NotificationsSend(\"CurrentRid,MemberAccount,Sender,Icon,Header,Body,Page,Rid,Closure,EcosystemId,Params\", $role_law_firm_partner, $PreviousOwnerId, 2, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"details_view\", \"en\"), \"co_se_order_sign\", 0, 0, $ecosystem_id,param)\r\n            //check POA previous owner\r\n            $poa_info = DBFind(\"poa_list\").Where({\"company_id\": $check_company_id, \"sender\": $PreviousOwnerAccount, \"status\": {\"$neq\": 4}}).One(\"recipient\")\r\n            if $poa_info != nil {\r\n                NotificationsSend(\"CurrentRid,MemberAccount,Sender,Icon,Header,Body,Page,Rid,Closure,EcosystemId,Params\", $role_law_firm_partner, $poa_info, 2, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"details_view\", \"en\"), \"co_se_order_sign\", 0, 0, $ecosystem_id,param)\r\n            }\r\n            //close notific\r\n            $check_close = DBFind(\"companies_orders_securities\").WhereId($OrderId).Columns(\"id,company_id\").Row()\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_close[\"company_id\"]), \"co_securities_orders_list\", \"Closed\")\r\n        }\r\n        if $PreviousOwner {\r\n            m[\"previous_owner\"] = $PreviousOwner\r\n        }\r\n        if $NewOwner {\r\n            m[\"new_owner\"] = $NewOwner\r\n        }\r\n        if $Amount {\r\n            m[\"order_amount\"] = $Amount\r\n            m[\"order_date\"] = $order_date\r\n        }\r\n        if $Del == 1 {\r\n            m[\"deleted\"] = $Del\r\n\r\n            //close notific\r\n            $check_close = DBFind(\"companies_orders_securities\").WhereId($OrderId).Columns(\"id,company_id\").Row()\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_close[\"company_id\"]), \"co_securities_orders_list\", \"Closed\")\r\n        }\r\n        DBUpdate(\"companies_orders_securities\",$OrderId,m)\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesOrderSign",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SecuritiesOrderSign {\r\n    data {\r\n        OrderId int\r\n        Action string\r\n        Comments string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        $check = DBFind(\"companies_orders_securities\").Columns(\"id,new_owner,company_id,previous_owner,status,order_signs,order_signs->previous_owner_sign,order_signs->new_owner_sign,order_signs->issuer_sign\").WhereId($OrderId).Row()\r\n        $check_company_id = Int($check[\"company_id\"])\r\n        if Int($check[\"status\"]) > 0 && Str($check[\"order_signs.previous_owner_sign\"]) == \"\" {\r\n            $PrevOwnerAccount = Str($check[\"previous_owner\"])\r\n            $poa_info = DBFind(\"poa_list\").Where({\"company_id\": $check_company_id, \"sender\": $PrevOwnerAccount, \"status\": {\"$neq\": 4}}).One(\"recipient\")\r\n            if $poa_info != nil {\r\n                if $poa_info != $account_id {\r\n                    warning \"You are not the Agent previous owner of the securities\"\r\n                }\r\n            } else {\r\n                if $check[\"previous_owner\"] != $account_id {\r\n                    warning \"You are not the previous owner of the securities\"\r\n                }\r\n            }\r\n            $step = 1\r\n        } elif Int($check[\"status\"]) > 0 && Str($check[\"order_signs.previous_owner_sign\"]) != \"\" && Str($check[\"order_signs.new_owner_sign\"]) == \"\" {\r\n            $NewOwnerAccount = Str($check[\"new_owner\"])\r\n            $poa_info = DBFind(\"poa_list\").Where({\"company_id\": $check_company_id, \"sender\": $NewOwnerAccount, \"status\": {\"$neq\": 4}}).One(\"recipient\")\r\n            if $poa_info != nil {\r\n                if $poa_info != $account_id {\r\n                    warning \"You are not the Agent new owner of the securities\"\r\n                }\r\n            } else {\r\n                if $check[\"new_owner\"] != $account_id {\r\n                    warning \"You are not the new owner of the securities\"\r\n                }\r\n            }\r\n            $step = 2\r\n        } elif Int($check[\"status\"]) > 0 && Str($check[\"order_signs.previous_owner_sign\"]) != \"\" && Str($check[\"order_signs.new_owner_sign\"]) != \"\" && Str($check[\"order_signs.issuer_sign\"]) == \"\" {\r\n            $c_id = Int($check[\"company_id\"])\r\n            $issuer_check = DBFind(\"roles_participants\").Columns(\"id,role,role->id\").Where({\"role->type\":4,\"member->account\":$account_id,\"role->company_id\":$c_id,\"deleted\":0,\"ecosystem\":$ecosystem_id}).Row()\r\n            if !$issuer_check[\"id\"] {\r\n                warning \"You are not the Issuer of the this company\"\r\n            }\r\n            $step = 3\r\n        } else {\r\n            warning \"Transaction Closed\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m param map\r\n        if $step == 1 {\r\n            //poa\r\n            $PrevOwnerId = $check[\"previous_owner\"]\r\n            if $PrevOwnerId != $account_id {\r\n                PoaUse(\"CompanyId,PoaSender,ActionType\", $check_company_id, $PrevOwnerAccount, \"bidding\")\r\n            }\r\n\r\n            if $Action == \"accept\" {\r\n                //sign previous owner keys\r\n                $pub = DBFind(\"keys\").Columns(\"id,pub,ecosystem\").Where({\"account\":$PrevOwnerId,\"ecosystem\":$ecosystem_id,\"deleted\":0}).One(\"pub\")\r\n                $pub_sign = Sha256($pub)\r\n                //send notification new owner\r\n                m[\"order_signs->previous_owner_sign\"] = $pub_sign\r\n                m[\"order_signs->previous_owner_sign_time\"] = $block_time\r\n                param[\"order_id\"] = Int($check[\"id\"])\r\n                param[\"step\"] = 2\r\n                $param_step = 2\r\n                $NewOwnerAccount = Str($check[\"new_owner\"])\r\n                $NewOwnerId = $NewOwnerAccount\r\n                NotificationsSend(\"MemberAccount,Sender,Icon,Header,Body,Page,Rid,Closure,EcosystemId,Params\",$NewOwnerId, 1, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"details_view\", \"en\"), \"co_se_order_sign\", 0, 0,$ecosystem_id,param)\r\n                //check POA previous owner\r\n                $poa_info = DBFind(\"poa_list\").Where({\"company_id\": $check_company_id, \"sender\": $NewOwnerAccount, \"status\": {\"$neq\": 4}}).One(\"recipient\")\r\n                if $poa_info != nil {\r\n                    $AgentId = $poa_info\r\n                    NotificationsSend(\"MemberAccount,Sender,Icon,Header,Body,Page,Rid,Closure,EcosystemId,Params\",$AgentId, 1, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"details_view\", \"en\"), \"co_se_order_sign\", 0, 0,$ecosystem_id,param)\r\n                }\r\n            } else {\r\n                if !$Comments {\r\n                    warning \"You must specify the reason for the refusal\"\r\n                }\r\n                m[\"status\"] = -1\r\n                m[\"order_signs->comments\"] = $Comments\r\n                m[\"order_signs->reject_step\"] = 1\r\n            }\r\n        }\r\n\r\n        if $step == 2 {\r\n            //poa\r\n            $NewOwnerId = $check[\"new_owner\"]\r\n            if $NewOwnerId != $account_id {\r\n                PoaUse(\"CompanyId,PoaSender,ActionType\", $check_company_id, $check[\"new_owner\"], \"bidding\")\r\n            }\r\n\r\n            if $Action == \"accept\" {\r\n                //sign new owner keys\r\n                $pub = DBFind(\"keys\").Columns(\"id,pub,ecosystem\").Where({\"account\":$NewOwnerId,\"ecosystem\":$ecosystem_id,\"deleted\":0}).One(\"pub\")\r\n                $pub_sign = Sha256($pub)\r\n                //send notification Issuer\r\n                $c_id = Int($check[\"company_id\"])\r\n                $issuer_id = Int(DBFind(\"roles\").Where({\"role_type\":4,\"company_id\":$c_id,\"deleted\":0,\"ecosystem\":$ecosystem_id}).One(\"id\"))\r\n                m[\"order_signs->new_owner_sign\"] = $pub_sign\r\n                m[\"order_signs->new_owner_sign_time\"] = $block_time\r\n                param[\"order_id\"] = Int($check[\"id\"])\r\n                m[\"status\"] = 2\r\n                NotificationsSend(\"Rid,Sender,Icon,Header,Body,Page,Params,Closure,EcosystemId\",$issuer_id, 1, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"details_view\", \"en\"), \"co_se_order_sign\",param,1,$ecosystem_id)\r\n            } else {\r\n                if !$Comments {\r\n                    warning \"You must specify the reason for the refusal\"\r\n                }\r\n                m[\"status\"] = -1\r\n                m[\"order_signs->comments\"] = $Comments\r\n                m[\"order_signs->reject_step\"] = 2\r\n            }\r\n        }\r\n\r\n        if $step == 3 {\r\n            if $Action == \"accept\" {\r\n                $pub = DBFind(\"keys\").Columns(\"id,pub,ecosystem\").Where({\"account\":$account_id,\"ecosystem\":$ecosystem_id,\"deleted\":0}).One(\"pub\")\r\n                $pub_sign = Sha256($pub)\r\n                m[\"order_signs->issuer_sign\"] = $pub_sign\r\n                m[\"order_signs->issuer_sign_time\"] = $block_time\r\n                m[\"status\"] = 3\r\n            } else {\r\n                if !$Comments {\r\n                    warning \"You must specify the reason for the refusal\"\r\n                }\r\n                m[\"status\"] = -1\r\n                m[\"order_signs->comments\"] = $Comments\r\n                m[\"order_signs->reject_step\"] = 3\r\n            }\r\n            $role_issuer_id = Int($issuer_check[\"role.id\"])\r\n            $NotificIdMap = DBFind(\"notifications\").Where({\"recipient->role_id\":$role_issuer_id,\"page_params->order_id\":$OrderId,\"closed\":0}).Row()\r\n            $NotificId = Int($NotificIdMap[\"id\"])\r\n            if Int($NotificIdMap[\"date_start_processing\"]) == 0 {\r\n                NotificationsProcess(\"NotificId\",Int($NotificId))\r\n            }\r\n            NotificationsClose(\"NotificId\",Int($NotificId))\r\n        }\r\n\r\n        DBUpdate(\"companies_orders_securities\",Int($check[\"id\"]),m)\r\n        if $step == 3 {\r\n            if $Action == \"accept\" {\r\n                SecuritiesTransfer(\"OrderId\",Int($check[\"id\"]))\r\n            }\r\n        }\r\n\r\n        //close notifications\r\n        var participants array i int\r\n        participants = DBFind(\"notifications\").Where({\"page_params->step\": $step,\"page_params->order_id\": $OrderId, \"closed\": 0}).Columns(\"id\")\r\n        while i < Len(participants) {\r\n            var p map\r\n            p = participants[i]\r\n            NotificationsClose(\"NotificId\",Int(p[\"id\"]))\r\n            i = i + 1\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SettingEntityEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SettingEntityEdit {\r\n    data {\r\n        EntityName string\r\n        EntityType string\r\n        Conditions string \"optional\"\r\n        CodeValue string \"optional\"\r\n        SelectMenu string \"optional\"\r\n        SelectApp int \"optional\"\r\n\r\n        Step int \"optional\"\r\n    }\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->type\": 8, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n\r\n        if $Step == 1 {\r\n            if $EntityType == \"New Page\" {\r\n                if DBFind(\"pages\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Page name already exists\"\r\n                }\r\n                ValidateCondition($Conditions,$ecosystem_id)\r\n            }\r\n            if $EntityType == \"Edit Page\" {\r\n                if !DBFind(\"pages\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Editable Page not found\"\r\n                }\r\n            }\r\n            if $EntityType == \"Edit Contract\" {\r\n                if !DBFind(\"contracts\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Editable Contract not found\"\r\n                }\r\n            }\r\n            if $EntityType == \"New Contract\" {\r\n                if DBFind(\"contracts\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Contract name already exists\"\r\n                }\r\n            }\r\n            if $EntityType == \"New AppParam\" {\r\n                if DBFind(\"app_params\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"AppParam name already exists\"\r\n                }\r\n                ValidateCondition($Conditions,$ecosystem_id)\r\n            }\r\n            if $EntityType == \"Edit AppParam\" {\r\n                if !DBFind(\"app_params\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Editable AppParam not found\"\r\n                }\r\n            }\r\n            if $EntityType == \"New Block\" {\r\n                if DBFind(\"blocks\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Block name already exists\"\r\n                }\r\n                ValidateCondition($Conditions,$ecosystem_id)\r\n            }\r\n            if $EntityType == \"Edit Block\" {\r\n                if !DBFind(\"blocks\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Editable Block not found\"\r\n                }\r\n            }\r\n            if $EntityType == \"Edit Menu\" {\r\n                if !DBFind(\"menu\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Editable Menu not found\"\r\n                }\r\n            }\r\n            if $EntityType == \"New Param\" {\r\n                if DBFind(\"parameters\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Param name already exists\"\r\n                }\r\n                ValidateCondition($Conditions,$ecosystem_id)\r\n            }\r\n            if $EntityType == \"Edit Param\" {\r\n                if !DBFind(\"parameters\").Where({\"name\":$EntityName,\"ecosystem\":$ecosystem_id}) {\r\n                    warning \"Editable Param not found\"\r\n                }\r\n                \r\n            }\r\n            if $Conditions != \"\" {\r\n                ValidateCondition($Conditions,$ecosystem_id)\r\n            }\r\n        } else {\r\n            if $CodeValue == \"\" {\r\n                warning \"Value is empty\"\r\n            }\r\n        }\r\n    }\r\n    action {\r\n        if $Step != 1 {\r\n            var m  map\r\n\r\n            m[\"name\"] = $EntityName\r\n            m[\"date_created\"] = $block_time\r\n            m[\"value\"] = $CodeValue\r\n            m[\"sender\"] = $account_id\r\n            m[\"approval_flags->sign\"] = \"\"\r\n            m[\"approval_flags->sign_time\"] = \"\"\r\n            m[\"approval_flags->decision\"] = \"\"\r\n            m[\"type\"] = $EntityType\r\n            \r\n            if $SelectApp > 0 {\r\n                m[\"info->app_id\"] = $SelectApp\r\n            }\r\n            if $Conditions != \"\" {\r\n                m[\"conditions\"] = $Conditions\r\n            }\r\n            if $SelectMenu != \"\" {\r\n                m[\"info->menu\"] = $SelectMenu\r\n            }\r\n            $object_id = DBInsert(\"settings_entity_edit\",m)\r\n\r\n            var param map\r\n            param[\"subject_id\"] = Int($object_id)\r\n            \r\n            NotificationsSend(\"Rid,Sender,Icon,Header,Body,Page,Params,Closure,EcosystemId\",Int($role_law_firm_junior), 1, \"icon icon-envelope-open\", \"Editing an object\", LangRes(\"details_view\", \"en\"), \"settings_entity_editing_view\",param,1,$ecosystem_id)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SettingEntityEditSign",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SettingEntityEditSign {\r\n    data {\r\n        Action string\r\n        Id int\r\n    }\r\n    conditions {\r\n        // check role\r\n        $company_app_id = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        $check_access = AppParam(Int($company_app_id), \"role_law_firm_junior\", $ecosystem_id)\r\n        var rids int\r\n        rids = $check_access\r\n        \r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": rids, \"member->account\": $account_id, \"deleted\": 0}).Row(){\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n        $check_object = DBFind(\"settings_entity_edit\").Columns(\"id,name,value,conditions,type,info,info->menu,info->app_id,approval_flags,approval_flags->decision\").WhereId($Id).Row()\r\n        if Int($check_object[\"approval_flags.decision\"]) != 0 {\r\n            warning (\"The decision has already been made\")\r\n        }\r\n        $application_id = DBFind(\"applications\").Where({\"name\":\"Companies Registry\",\"deleted\":0,\"ecosystem\":$ecosystem_id}).One(\"id\")\r\n    }\r\n    action {\r\n        $pub = DBFind(\"keys\").Columns(\"id,pub,ecosystem\").Where({\"account\":$account_id,\"ecosystem\":$ecosystem_id,\"deleted\":0}).One(\"pub\")\r\n        $pub_sign = Sha256($pub)\r\n        if Str($check_object[\"type\"]) == \"New Page\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                m[\"approval_flags->decision\"] = 1\r\n                NewPage(\"ApplicationId,Name,Value,Menu,Conditions\",Int($check_object[\"info.app_id\"]),Str($check_object[\"name\"]),Str($check_object[\"value\"]),Str($check_object[\"info.menu\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"Edit Page\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                $object_id = DBFind(\"pages\").Where({\"name\":$object_name,\"ecosystem\":$ecosystem_id}).One(\"id\")\r\n                m[\"approval_flags->decision\"] = 1\r\n                EditPage(\"Id,Value,Conditions,Menu\",Int($object_id),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]),Str($check_object[\"info.menu\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"Edit Contract\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                m[\"approval_flags->decision\"] = 1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"New Contract\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                m[\"approval_flags->decision\"] = 1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"New AppParam\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                m[\"approval_flags->decision\"] = 1\r\n                NewAppParam(\"ApplicationId,Name,Value,Conditions\",Int($check_object[\"info.app_id\"]),Str($check_object[\"name\"]),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"Edit AppParam\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                $object_id = DBFind(\"app_params\").Where({\"name\":$object_name,\"ecosystem\":$ecosystem_id}).One(\"id\")\r\n                m[\"approval_flags->decision\"] = 1\r\n                EditAppParam(\"Id,Value,Conditions\",Int($object_id),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"New Block\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                m[\"approval_flags->decision\"] = 1\r\n                NewBlock(\"ApplicationId,Name,Value,Conditions\",Int($check_object[\"info.app_id\"]),Str($check_object[\"name\"]),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"Edit Block\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                $object_id = DBFind(\"blocks\").Where({\"name\":$object_name,\"ecosystem\":$ecosystem_id}).One(\"id\")\r\n                m[\"approval_flags->decision\"] = 1\r\n                EditBlock(\"Id,Value,Conditions\",Int($object_id),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"Edit Menu\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                $object_id = DBFind(\"menu\").Where({\"name\":$object_name,\"ecosystem\":$ecosystem_id}).One(\"id\")\r\n                m[\"approval_flags->decision\"] = 1\r\n                EditMenu(\"Id,Value,Conditions\",Int($object_id),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"New Param\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                m[\"approval_flags->decision\"] = 1\r\n                NewParameter(\"Name,Value,Conditions\",Str($check_object[\"name\"]),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n        if Str($check_object[\"type\"]) == \"Edit Param\" {\r\n            var m map\r\n            m[\"approval_flags->sign_time\"] = $block_time\r\n            m[\"approval_flags->sign\"] = $pub_sign\r\n            if $Action == \"Accept\" {\r\n                $object_name = Str($check_object[\"name\"])\r\n                $object_id = DBFind(\"parameters\").Where({\"name\":$object_name,\"ecosystem\":$ecosystem_id}).One(\"id\")\r\n                m[\"approval_flags->decision\"] = 1\r\n                EditParameter(\"Id,Value,Conditions\",Int($object_id),Str($check_object[\"value\"]),Str($check_object[\"conditions\"]))\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            } else {\r\n                m[\"approval_flags->decision\"] = -1\r\n                DBUpdate(\"settings_entity_edit\",$Id,m)\r\n            }\r\n        }\r\n\r\n        $NotificIdMap = DBFind(\"notifications\").Where({\"page_params->subject_id\":$Id,\"closed\":0}).Row()\r\n        if Int($NotificIdMap[\"id\"]) > 0 {\r\n            if Int($NotificIdMap[\"date_start_processing\"]) == 0 {\r\n                NotificationsProcess(\"NotificId\",Int($NotificIdMap[\"id\"]))\r\n            }\r\n            NotificationsClose(\"NotificId\",Int($NotificIdMap[\"id\"]))\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SettingSupportMessSend",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SettingSupportMessSend {\r\n    data {\r\n        InquiryId int\r\n        Details string \"optional\"\r\n        Rid int \"optional\"\r\n        Action string \"optional\"\r\n        RoleForwarding int \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        $check_owner = DBFind(\"settings_support\").Columns(\"id,sender,role_recipient,processing_info,processing_info->account_id,status\").WhereId($InquiryId).Row()\r\n\r\n        if Int($check_owner[\"role_recipient\"]) != Int($Rid) && Str($check_owner[\"sender\"]) != $account_id {\r\n            warning \"Not enough rights to access the inquiry\"\r\n        }\r\n        if Str($check_owner[\"sender\"]) != $account_id && $check_owner[\"processing_info\"] != \"\" && Str($check_owner[\"processing_info.account_id\"]) != $account_id {\r\n            warning \"Not enough rights to access the inquiry\"\r\n        }\r\n        if Int($check_owner[\"status\"]) == 2 {\r\n            warning \"Inquiry closed by creator\"\r\n        }\r\n        if $Action == \"\" {\r\n            if $Details == \"\" {\r\n                warning \"Message is empty\"\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $Action == \"close\" {\r\n            if Str($check_owner[\"sender\"]) == $account_id {\r\n                var k map\r\n                k[\"status\"] = 2\r\n                k[\"date_closed\"] =$block_time\r\n                DBUpdate(\"settings_support\",$InquiryId,k)\r\n            } else {\r\n                warning \"You are not a inquiry creator\"\r\n            }\r\n        } elif $Action == \"forwarding\"{\r\n            if Int($check_owner[\"role_recipient\"]) == Int($Rid) && Int($check_owner[\"status\"]) == 0 {\r\n                  DBUpdate(\"settings_support\",$InquiryId,{\"role_recipient\":$RoleForwarding})\r\n            } else {\r\n                 warning \"Cannot redirect inquiry\"\r\n            }\r\n        } else {\r\n            if Str($check_owner[\"sender\"]) != $account_id && $check_owner[\"processing_info\"] == \"\" && Int($check_owner[\"role_recipient\"]) == $Rid {\r\n                var l map\r\n                l[\"processing_info->account_id\"] = $account_id\r\n                l[\"processing_info->date_start\"] = $block_time\r\n                l[\"status\"] = 1\r\n                DBUpdate(\"settings_support\",$InquiryId, l)\r\n            }\r\n            var m map\r\n            m[\"id_inquiry\"] = $InquiryId\r\n            m[\"sender\"] = $account_id\r\n            m[\"messange_text\"] = $Details\r\n            m[\"messange_date\"] = $block_time\r\n            DBInsert(\"settings_support_messanges\",m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SettingSupportSend",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SettingSupportSend {\r\n    data {\r\n        Subject string\r\n        Details string\r\n    }\r\n\r\n    conditions {\r\n        if $Subject == \"\" {\r\n            warning \"Subject is empty\"\r\n        }\r\n        if $Details == \"\" {\r\n            warning \"Details is empty\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        $role_rec = Int(DBFind(\"roles\").Where({\"role_name\":\"Admin\",\"ecosystem\":$ecosystem_id,\"deleted\":0}).One(\"id\"))\r\n\r\n        if Int($role_rec) == 0 {\r\n            warning \"Role recipient not found\"\r\n        }\r\n        var m l inquire_info map\r\n        inquire_info[\"subject\"] = $Subject\r\n        inquire_info[\"details\"] = $Details\r\n\r\n        m[\"inquiry_info\"] = inquire_info\r\n        m[\"date_created\"] = $block_time\r\n        m[\"role_recipient\"] = Int($role_rec)\r\n        m[\"sender\"] = $account_id\r\n\r\n        $id_inq = DBInsert(\"settings_support\",m)\r\n\r\n        l[\"id_inquiry\"] = Int($id_inq)\r\n        l[\"sender\"] = $account_id\r\n        l[\"messange_text\"] = Str($Details)\r\n        l[\"messange_date\"] = $block_time\r\n        DBInsert(\"settings_support_messanges\",l)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SharesApprov",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SharesApprov {\r\n    data {\r\n        Id int\r\n        Step int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_partner array\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        $check_approve = DBFind(\"co_shares_list\").WhereId($Id).Columns(\"id,approval_flags,approval_flags->total_amount,approval_flags->name,approval_flags->details,approval_flags->information\").Row()\r\n\r\n        var m map\r\n        if Int($Step) == 1 {\r\n            m[\"approval_flags->name\"] = 1\r\n            if $check_approve[\"approval_flags.details\"] == 1 && $check_approve[\"approval_flags.information\"] == 1 && $check_approve[\"approval_flags.total_amount\"] == 1 {\r\n                m[\"approval_flags->total_approval\"] = 1\r\n            }\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"approval_flags->details\"] = 1\r\n            if $check_approve[\"approval_flags.name\"] == 1 && $check_approve[\"approval_flags.information\"] == 1 && $check_approve[\"approval_flags.total_amount\"] == 1 {\r\n                m[\"approval_flags->total_approval\"] = 1\r\n            }\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"approval_flags->information\"] = 1\r\n            if $check_approve[\"approval_flags.name\"] == 1 && $check_approve[\"approval_flags.details\"] == 1 && $check_approve[\"approval_flags.total_amount\"] == 1 {\r\n                m[\"approval_flags->total_approval\"] = 1\r\n            }\r\n        }\r\n        if Int($Step) == 4 {\r\n            m[\"approval_flags->total_amount\"] = 1\r\n            if $check_approve[\"approval_flags.name\"] == 1 && $check_approve[\"approval_flags.details\"] == 1 && $check_approve[\"approval_flags.information\"] == 1 {\r\n                m[\"approval_flags->total_approval\"] = 1\r\n            }\r\n        }\r\n\r\n        DBUpdate(\"co_shares_list\", Int($Id), m)\r\n\r\n        //close notific\r\n        $check_close = DBFind(\"@1co_shares_list\").WhereId($Id).Columns(\"id,approval_flags->total_approval,company_id\").Row()\r\n        if $check_close[\"approval_flags.total_approval\"] == 1 {\r\n            NotificationsPartner(\"CompanyId,PageName,Action\", Int($check_close[\"company_id\"]), \"co_view\", \"Closed\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SharesEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract SharesEdit {\r\n    data {\r\n        Step int\r\n        SharesId int \"optional\"\r\n        CompanyId int \"optional\"\r\n\r\n        Name string \"optional\"\r\n\r\n        SharesType string \"optional\"\r\n        Nominal string \"optional\"\r\n        Other string \"optional\"\r\n\r\n        Info string \"optional\"\r\n\r\n        TotalAmount int \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        // access check\r\n        if !DBFind(\"roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->account\": $account_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"access_denied\", \"en\")\r\n        }\r\n        // check name\r\n        if Int($Step) == 1 {\r\n            if DBFind(\"co_shares_list\").Where({\"name\":$Name,\"company_id\":$CompanyId,\"deleted\":0}) {\r\n                warning \"Shares with this name already exists\"\r\n            }\r\n        }\r\n        if Int($Step) == 4 {\r\n            if Int($TotalAmount) < 0 {\r\n                warning \"Total amount of shares can not be negative\"\r\n            }\r\n        }\r\n        if $SharesId != 0 {\r\n            if DBFind(\"co_shares_list\").Columns(\"id,approval_flags,approval_flags->total_approval\").Where({\"id\": $SharesId, \"approval_flags->total_approval\": 1}) {\r\n                if Int($Step) == 5 {\r\n                    warning \"Shares cannot be deleted after confirmation by Partner\"\r\n                } else {\r\n                    warning \"Shares cannot be edited, after confirmation by Partner\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($SharesId) == 0 {\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"approval_flags->details\"] = 0\r\n            m[\"approval_flags->information\"] = 0\r\n            m[\"approval_flags->name\"] = 0\r\n            m[\"approval_flags->total_amount\"] = 0\r\n            m[\"approval_flags->total_approval\"] = 0\r\n        }\r\n\r\n        if Int($Step) == 1 {\r\n            m[\"name\"] = $Name\r\n            m[\"approval_flags->name\"] = 0\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"details->type\"] = $SharesType\r\n            m[\"details->nominal\"] = $Nominal\r\n            m[\"details->other\"] = $Other\r\n            m[\"approval_flags->details\"] = 0\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"info\"] = $Info\r\n            m[\"approval_flags->information\"] = 0\r\n        }\r\n        if Int($Step) == 4 {\r\n            m[\"total_amount\"] = $TotalAmount\r\n            m[\"approval_flags->total_amount\"] = 0\r\n        }\r\n        if Int($Step) == 5 {\r\n            m[\"deleted\"] = 1\r\n        }\r\n\r\n        if Int($SharesId) == 0 {\r\n            DBInsert(\"co_shares_list\", m)\r\n        } else {\r\n            DBUpdate(\"co_shares_list\", Int($SharesId), m)\r\n\r\n            //Partner notifications\r\n            $company_id = DBFind(\"co_shares_list\").Where({\"id\":$SharesId}).One(\"company_id\")\r\n            if Int($Step) == 5 {\r\n                NotificationsPartner(\"CompanyId,PageName,Action\", Int($company_id), \"co_view\", \"Closed\")\r\n            } else {\r\n                NotificationsPartner(\"CompanyId,PageName,Action\", Int($company_id), \"co_view\", \"Send\")\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "UploadFileExcel",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract UploadFileExcel {\r\n    data {\r\n        ApplicationId int\r\n        Data file\r\n        CompanyId int\r\n    }\r\n\r\n    conditions {\r\n        $Name = \"security_sharholders_excel\"\r\n        $Body = $Data[\"Body\"]\r\n        $DataMimeType = $Data[\"MimeType\"]\r\n    }\r\n\r\n    action {\r\n        var requests array i int req map\r\n        requests = DBFind(\"security_intermediate_data\").Where({\"manager\": $account_id, \"deleted\": 0})\r\n        if Len(requests) > 0 {\r\n            DBUpdateExt(\"security_intermediate_data\", {manager: $account_id, deleted: 0}, {deleted: 1})\r\n        }\r\n\r\n        $Id = UploadBinary(\"ApplicationId,Name,Data,DataMimeType\", $ApplicationId, $Name, $Body, $DataMimeType)\r\n        $result = $Id\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}