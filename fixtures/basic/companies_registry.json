{
    "name": "Companies Registry",
    "conditions": "ContractConditions(\"AdminCondition\")",
    "data": [
        {
            "Name": "cr_pager",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(#this_table#).Where(#where#).Order({\"id\": 1}).Count(records_count)\r\n\r\nIf(#pager_limit# < #records_count#){\r\n    If(#page_par#==\"\"){\r\n        SetVar(page_par,)\r\n    }\r\n    SetVar(previous_page, Calculate(Exp: #current_page# - 1, Type: int))\r\n    SetVar(next_page, Calculate(Exp: #current_page# + 1, Type: int))\r\n\r\n    SetVar(count_div_limit_int, Calculate(Exp: (#records_count# / #pager_limit#), Type: int))\r\n    SetVar(remainder, Calculate(Exp: (#records_count# / #pager_limit#) - #count_div_limit_int#, Type: float))\r\n    If(#remainder# != 0){\r\n        SetVar(last_page, Calculate(Exp: #count_div_limit_int# + 1, Type: int))\r\n    }.Else{\r\n        SetVar(last_page, #count_div_limit_int#)\r\n    }\r\n\r\n    SetVar(last_page_plus_one, Calculate(Exp: #last_page# + 1, Type: int))\r\n    SetVar(last_page_minus_one, Calculate(Exp: #last_page# - 1, Type: int))\r\n    SetVar(delta_last_page, Calculate(Exp: #last_page# - #current_page#))\r\n    SetVar(range_l, Calculate(Exp: #current_page# - 1, Type: int))\r\n    SetVar(range_r, Calculate(Exp: #current_page# + 2, Type: int))\r\n    SetVar(range_l_max, Calculate(Exp: #last_page# - #pager_limit#, Type: int))\r\n    SetVar(last_page_min_set, Calculate(Exp: #last_page_plus_one# - 3, Type: int))\r\n\r\n    If(#current_page# < 2){\r\n        If(#last_page# >= 4){\r\n            Range(src_pages, 1, 4)\r\n        }.Else{\r\n            Range(src_pages, 1, #last_page_plus_one#)\r\n        }\r\n    }.ElseIf(#delta_last_page# < 2){\r\n        If(#range_l_max# > 0){\r\n            Range(src_pages, #last_page_min_set#, #last_page_plus_one#)\r\n        }.Else{\r\n            Range(src_pages, 1, #last_page_plus_one#)\r\n        }\r\n    }.Else{\r\n        Range(src_pages, #range_l#, #range_r#)\r\n    }\r\n\r\n    Div(){\r\n        Span(Class: pull-left){\r\n            If(#current_page# < 3){\r\n            }.Else{\r\n                Button(Body: 1, Class: btn btn-default btn-grey-mini, Page: #this_page#, PageParams: \"current_page=1,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#\").Popup(Header: \"APLA ™\", Width: 45)\r\n                Span(Class: h4 mr-sm ml-sm, Body: ...)\r\n            }\r\n        }\r\n        Span(Class: pull-left){\r\n            ForList(src_pages){\r\n                Span(){\r\n                    If(#id# == #current_page#){\r\n                        Button(Body: #id#, Class: btn btn-primary btn-blue-mini, Page: #this_page#, PageParams: \"current_page=#id#,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#\").Popup(Header: \"APLA ™\", Width: 45)\r\n                    }.Else{\r\n                        Button(Body: #id#, Class: btn btn-default btn-grey-mini, Page: #this_page#, PageParams: \"current_page=#id#,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#\").Popup(Header: \"APLA ™\", Width: 45)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Span(Class: pull-left){\r\n            If(#current_page# >= #last_page_minus_one#){\r\n            }.Else{\r\n                Span(Class: h4 mr-sm ml-sm, Body: ...)\r\n                Button(Body: #last_page#, Class: btn btn-default btn-grey-mini, Page: #this_page#, PageParams: \"current_page=#last_page#,securities_id=#securities_id#,company_id=#company_id#,p1=#p1#,p2=#p2#,search=#search#,back_page=#back_page#\").Popup(Header: \"APLA ™\", Width: 45)\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "blocks"
        },
        {
            "Name": "cr_pager_header",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "If(#pager_limit# == \"\"){\n    SetVar(pager_limit, 25)\n}\nIf(#current_page# == \"\"){\n    SetVar(current_page, 1)\n}\nSetVar(pager_offset, Calculate(Exp: (#current_page# - 1) * #pager_limit#, Type: int))\nSetVar(current_page, #current_page#)",
            "Type": "blocks"
        },
        {
            "Name": "cr_voting_charts",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Div(row){\r\n    DBFind(meetings_participants_bd).Where({\"meeting_id\": #meeting_id#, \"type\": \"meeting\"}).Columns(\"id\").Count(participants_all)\r\n    DBFind(meetings_participants_bd).Where({\"meeting_id\": #meeting_id#, \"type\": \"meeting\", \"decision\": \"0\"}).Columns(\"id\").Count(participants_not_opinion)\r\n    DBFind(meetings_participants_bd).Where({\"meeting_id\": #meeting_id#, \"type\": \"meeting\", \"decision\": \"1\"}).Columns(\"id\").Count(participants_accept)\r\n    DBFind(meetings_participants_bd).Where({\"meeting_id\": #meeting_id#, \"type\": \"meeting\", \"decision\": \"-1\"}).Columns(\"id\").Count(participants_reject)\r\n    SetVar(participants_has_opinion, Calculate(#participants_accept#+#participants_reject#))\r\n\r\n    SetVar(percent_has_opinion, Calculate(#participants_has_opinion#*100/#participants_all#))\r\n    If(#participants_all# > 0){\r\n        SetVar(percent_has_opinion_des, Calculate(Exp: #participants_has_opinion#*100/#participants_all#, Type: float, Prec: 1))\r\n    }.Else{\r\n        SetVar(percent_has_opinion_des, 0)\r\n    }\r\n    SetVar(percent_accept, Calculate(#participants_accept#*100/#participants_all#))\r\n    SetVar(percent_reject, Calculate(#participants_reject#*100/#participants_all#))\r\n\r\n    Div(col-md-2)\r\n    Div(col-md-2){\r\n        Div(Class: text-center t4, Body: Rejected)\r\n        Div(Class: c100 center p#percent_reject# red){\r\n            Span(Body: #participants_reject#)\r\n            Div(Class: slice){\r\n                Div(Class: bar)\r\n                Div(Class: fill)\r\n            }\r\n        }\r\n    }\r\n    Div(col-md-4){\r\n        Div(Class: text-center t4, Body: Voted)\r\n        Div(Class: c100 center p#percent_has_opinion# orange){\r\n            Span(Body:#percent_has_opinion_des#%)\r\n            Div(Class: slice){\r\n                Div(Class: bar)\r\n                Div(Class: fill)\r\n            }\r\n        }\r\n    }\r\n    Div(col-md-2){\r\n        Div(Class: text-center t4, Body: Accepted)\r\n        Div(Class: c100 center p#percent_accept# green){\r\n            Span(Body: #participants_accept#)\r\n            Div(Class: slice){\r\n                Div(Class: bar)\r\n                Div(Class: fill)\r\n            }\r\n        }\r\n    }\r\n    Div(col-md-2)\r\n}.Style(\r\n    .t3 {font-size:24px;}\r\n    .t4 {font-size:18px;}\r\n    .t5 {font-size:14px;}\r\n    .t6 {font-size:12px;}\r\n    .break {word-break: break-all;}\r\n    .rect-auto,\r\n    .c100.p51 .slice,\r\n    .c100.p52 .slice,\r\n    .c100.p53 .slice,\r\n    .c100.p54 .slice,\r\n    .c100.p55 .slice,\r\n    .c100.p56 .slice,\r\n    .c100.p57 .slice,\r\n    .c100.p58 .slice,\r\n    .c100.p59 .slice,\r\n    .c100.p60 .slice,\r\n    .c100.p61 .slice,\r\n    .c100.p62 .slice,\r\n    .c100.p63 .slice,\r\n    .c100.p64 .slice,\r\n    .c100.p65 .slice,\r\n    .c100.p66 .slice,\r\n    .c100.p67 .slice,\r\n    .c100.p68 .slice,\r\n    .c100.p69 .slice,\r\n    .c100.p70 .slice,\r\n    .c100.p71 .slice,\r\n    .c100.p72 .slice,\r\n    .c100.p73 .slice,\r\n    .c100.p74 .slice,\r\n    .c100.p75 .slice,\r\n    .c100.p76 .slice,\r\n    .c100.p77 .slice,\r\n    .c100.p78 .slice,\r\n    .c100.p79 .slice,\r\n    .c100.p80 .slice,\r\n    .c100.p81 .slice,\r\n    .c100.p82 .slice,\r\n    .c100.p83 .slice,\r\n    .c100.p84 .slice,\r\n    .c100.p85 .slice,\r\n    .c100.p86 .slice,\r\n    .c100.p87 .slice,\r\n    .c100.p88 .slice,\r\n    .c100.p89 .slice,\r\n    .c100.p90 .slice,\r\n    .c100.p91 .slice,\r\n    .c100.p92 .slice,\r\n    .c100.p93 .slice,\r\n    .c100.p94 .slice,\r\n    .c100.p95 .slice,\r\n    .c100.p96 .slice,\r\n    .c100.p97 .slice,\r\n    .c100.p98 .slice,\r\n    .c100.p99 .slice,\r\n    .c100.p100 .slice {\r\n    clip: rect(auto, auto, auto, auto);\r\n    }\r\n    .pie,\r\n    .c100 .bar,\r\n    .c100.p51 .fill,\r\n    .c100.p52 .fill,\r\n    .c100.p53 .fill,\r\n    .c100.p54 .fill,\r\n    .c100.p55 .fill,\r\n    .c100.p56 .fill,\r\n    .c100.p57 .fill,\r\n    .c100.p58 .fill,\r\n    .c100.p59 .fill,\r\n    .c100.p60 .fill,\r\n    .c100.p61 .fill,\r\n    .c100.p62 .fill,\r\n    .c100.p63 .fill,\r\n    .c100.p64 .fill,\r\n    .c100.p65 .fill,\r\n    .c100.p66 .fill,\r\n    .c100.p67 .fill,\r\n    .c100.p68 .fill,\r\n    .c100.p69 .fill,\r\n    .c100.p70 .fill,\r\n    .c100.p71 .fill,\r\n    .c100.p72 .fill,\r\n    .c100.p73 .fill,\r\n    .c100.p74 .fill,\r\n    .c100.p75 .fill,\r\n    .c100.p76 .fill,\r\n    .c100.p77 .fill,\r\n    .c100.p78 .fill,\r\n    .c100.p79 .fill,\r\n    .c100.p80 .fill,\r\n    .c100.p81 .fill,\r\n    .c100.p82 .fill,\r\n    .c100.p83 .fill,\r\n    .c100.p84 .fill,\r\n    .c100.p85 .fill,\r\n    .c100.p86 .fill,\r\n    .c100.p87 .fill,\r\n    .c100.p88 .fill,\r\n    .c100.p89 .fill,\r\n    .c100.p90 .fill,\r\n    .c100.p91 .fill,\r\n    .c100.p92 .fill,\r\n    .c100.p93 .fill,\r\n    .c100.p94 .fill,\r\n    .c100.p95 .fill,\r\n    .c100.p96 .fill,\r\n    .c100.p97 .fill,\r\n    .c100.p98 .fill,\r\n    .c100.p99 .fill,\r\n    .c100.p100 .fill {\r\n        position: absolute;\r\n        border: 0.08em solid #307bbb;\r\n        width: 0.84em;\r\n        height: 0.84em;\r\n        clip: rect(0em, 0.5em, 1em, 0em);\r\n        border-radius: 50%;\r\n        -webkit-transform: rotate(0deg);\r\n        -moz-transform: rotate(0deg);\r\n        -ms-transform: rotate(0deg);\r\n        -o-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n    }\r\n    .pie-fill,\r\n    .c100.p51 .bar:after,\r\n    .c100.p51 .fill,\r\n    .c100.p52 .bar:after,\r\n    .c100.p52 .fill,\r\n    .c100.p53 .bar:after,\r\n    .c100.p53 .fill,\r\n    .c100.p54 .bar:after,\r\n    .c100.p54 .fill,\r\n    .c100.p55 .bar:after,\r\n    .c100.p55 .fill,\r\n    .c100.p56 .bar:after,\r\n    .c100.p56 .fill,\r\n    .c100.p57 .bar:after,\r\n    .c100.p57 .fill,\r\n    .c100.p58 .bar:after,\r\n    .c100.p58 .fill,\r\n    .c100.p59 .bar:after,\r\n    .c100.p59 .fill,\r\n    .c100.p60 .bar:after,\r\n    .c100.p60 .fill,\r\n    .c100.p61 .bar:after,\r\n    .c100.p61 .fill,\r\n    .c100.p62 .bar:after,\r\n    .c100.p62 .fill,\r\n    .c100.p63 .bar:after,\r\n    .c100.p63 .fill,\r\n    .c100.p64 .bar:after,\r\n    .c100.p64 .fill,\r\n    .c100.p65 .bar:after,\r\n    .c100.p65 .fill,\r\n    .c100.p66 .bar:after,\r\n    .c100.p66 .fill,\r\n    .c100.p67 .bar:after,\r\n    .c100.p67 .fill,\r\n    .c100.p68 .bar:after,\r\n    .c100.p68 .fill,\r\n    .c100.p69 .bar:after,\r\n    .c100.p69 .fill,\r\n    .c100.p70 .bar:after,\r\n    .c100.p70 .fill,\r\n    .c100.p71 .bar:after,\r\n    .c100.p71 .fill,\r\n    .c100.p72 .bar:after,\r\n    .c100.p72 .fill,\r\n    .c100.p73 .bar:after,\r\n    .c100.p73 .fill,\r\n    .c100.p74 .bar:after,\r\n    .c100.p74 .fill,\r\n    .c100.p75 .bar:after,\r\n    .c100.p75 .fill,\r\n    .c100.p76 .bar:after,\r\n    .c100.p76 .fill,\r\n    .c100.p77 .bar:after,\r\n    .c100.p77 .fill,\r\n    .c100.p78 .bar:after,\r\n    .c100.p78 .fill,\r\n    .c100.p79 .bar:after,\r\n    .c100.p79 .fill,\r\n    .c100.p80 .bar:after,\r\n    .c100.p80 .fill,\r\n    .c100.p81 .bar:after,\r\n    .c100.p81 .fill,\r\n    .c100.p82 .bar:after,\r\n    .c100.p82 .fill,\r\n    .c100.p83 .bar:after,\r\n    .c100.p83 .fill,\r\n    .c100.p84 .bar:after,\r\n    .c100.p84 .fill,\r\n    .c100.p85 .bar:after,\r\n    .c100.p85 .fill,\r\n    .c100.p86 .bar:after,\r\n    .c100.p86 .fill,\r\n    .c100.p87 .bar:after,\r\n    .c100.p87 .fill,\r\n    .c100.p88 .bar:after,\r\n    .c100.p88 .fill,\r\n    .c100.p89 .bar:after,\r\n    .c100.p89 .fill,\r\n    .c100.p90 .bar:after,\r\n    .c100.p90 .fill,\r\n    .c100.p91 .bar:after,\r\n    .c100.p91 .fill,\r\n    .c100.p92 .bar:after,\r\n    .c100.p92 .fill,\r\n    .c100.p93 .bar:after,\r\n    .c100.p93 .fill,\r\n    .c100.p94 .bar:after,\r\n    .c100.p94 .fill,\r\n    .c100.p95 .bar:after,\r\n    .c100.p95 .fill,\r\n    .c100.p96 .bar:after,\r\n    .c100.p96 .fill,\r\n    .c100.p97 .bar:after,\r\n    .c100.p97 .fill,\r\n    .c100.p98 .bar:after,\r\n    .c100.p98 .fill,\r\n    .c100.p99 .bar:after,\r\n    .c100.p99 .fill,\r\n    .c100.p100 .bar:after,\r\n    .c100.p100 .fill {\r\n    -webkit-transform: rotate(180deg);\r\n    -moz-transform: rotate(180deg);\r\n    -ms-transform: rotate(180deg);\r\n    -o-transform: rotate(180deg);\r\n    transform: rotate(180deg);\r\n    }\r\n    .c100 {\r\n        position: relative;\r\n        font-size: 100px;\r\n        width: 1em;\r\n        height: 1em;\r\n        border-radius: 50%;\r\n        float: left;\r\n        margin: 0 0.1em 0.1em 0;\r\n        background-color: #cccccc;\r\n    }\r\n    .c100 *,\r\n    .c100 *:before,\r\n    .c100 *:after {\r\n        -webkit-box-sizing: content-box;\r\n        -moz-box-sizing: content-box;\r\n        box-sizing: content-box;\r\n    }\r\n    .c100.center {\r\n        float: none;\r\n        margin: 0 auto;\r\n    }\r\n    .c100.big {\r\n        font-size: 240px;\r\n    }\r\n    .c100.small {\r\n        font-size: 80px;\r\n    }\r\n    .c100 > span {\r\n        position: absolute;\r\n        width: 100%;\r\n        z-index: 1;\r\n        left: 0;\r\n        top: 0;\r\n        width: 5em;\r\n        line-height: 5em;\r\n        font-size: 0.2em;\r\n        color: #cccccc;\r\n        display: block;\r\n        text-align: center;\r\n        white-space: nowrap;\r\n        -webkit-transition-property: all;\r\n        -moz-transition-property: all;\r\n        -o-transition-property: all;\r\n        transition-property: all;\r\n        -webkit-transition-duration: 0.2s;\r\n        -moz-transition-duration: 0.2s;\r\n        -o-transition-duration: 0.2s;\r\n        transition-duration: 0.2s;\r\n        -webkit-transition-timing-function: ease-out;\r\n        -moz-transition-timing-function: ease-out;\r\n        -o-transition-timing-function: ease-out;\r\n        transition-timing-function: ease-out;\r\n    }\r\n    .c100:after {\r\n        position: absolute;\r\n        top: 0.08em;\r\n        left: 0.08em;\r\n        display: block;\r\n        content: \" \";\r\n        border-radius: 50%;\r\n        background-color: #f5f5f5;\r\n        width: 0.84em;\r\n        height: 0.84em;\r\n        -webkit-transition-property: all;\r\n        -moz-transition-property: all;\r\n        -o-transition-property: all;\r\n        transition-property: all;\r\n        -webkit-transition-duration: 0.2s;\r\n        -moz-transition-duration: 0.2s;\r\n        -o-transition-duration: 0.2s;\r\n        transition-duration: 0.2s;\r\n        -webkit-transition-timing-function: ease-in;\r\n        -moz-transition-timing-function: ease-in;\r\n        -o-transition-timing-function: ease-in;\r\n        transition-timing-function: ease-in;\r\n    }\r\n    .c100 .slice {\r\n        position: absolute;\r\n        width: 1em;\r\n        height: 1em;\r\n        clip: rect(0em, 1em, 1em, 0.5em);\r\n    }\r\n    .c100.p1 .bar {\r\n        -webkit-transform: rotate(3.6deg);\r\n        -moz-transform: rotate(3.6deg);\r\n        -ms-transform: rotate(3.6deg);\r\n        -o-transform: rotate(3.6deg);\r\n        transform: rotate(3.6deg);\r\n    }\r\n    .c100.p2 .bar {\r\n        -webkit-transform: rotate(7.2deg);\r\n        -moz-transform: rotate(7.2deg);\r\n        -ms-transform: rotate(7.2deg);\r\n        -o-transform: rotate(7.2deg);\r\n        transform: rotate(7.2deg);\r\n    }\r\n    .c100.p3 .bar {\r\n        -webkit-transform: rotate(10.8deg);\r\n        -moz-transform: rotate(10.8deg);\r\n        -ms-transform: rotate(10.8deg);\r\n        -o-transform: rotate(10.8deg);\r\n        transform: rotate(10.8deg);\r\n    }\r\n    .c100.p4 .bar {\r\n        -webkit-transform: rotate(14.4deg);\r\n        -moz-transform: rotate(14.4deg);\r\n        -ms-transform: rotate(14.4deg);\r\n        -o-transform: rotate(14.4deg);\r\n        transform: rotate(14.4deg);\r\n    }\r\n    .c100.p5 .bar {\r\n        -webkit-transform: rotate(18deg);\r\n        -moz-transform: rotate(18deg);\r\n        -ms-transform: rotate(18deg);\r\n        -o-transform: rotate(18deg);\r\n        transform: rotate(18deg);\r\n    }\r\n    .c100.p6 .bar {\r\n        -webkit-transform: rotate(21.6deg);\r\n        -moz-transform: rotate(21.6deg);\r\n        -ms-transform: rotate(21.6deg);\r\n        -o-transform: rotate(21.6deg);\r\n        transform: rotate(21.6deg);\r\n    }\r\n    .c100.p7 .bar {\r\n        -webkit-transform: rotate(25.2deg);\r\n        -moz-transform: rotate(25.2deg);\r\n        -ms-transform: rotate(25.2deg);\r\n        -o-transform: rotate(25.2deg);\r\n        transform: rotate(25.2deg);\r\n    }\r\n    .c100.p8 .bar {\r\n        -webkit-transform: rotate(28.8deg);\r\n        -moz-transform: rotate(28.8deg);\r\n        -ms-transform: rotate(28.8deg);\r\n        -o-transform: rotate(28.8deg);\r\n        transform: rotate(28.8deg);\r\n    }\r\n    .c100.p9 .bar {\r\n        -webkit-transform: rotate(32.4deg);\r\n        -moz-transform: rotate(32.4deg);\r\n        -ms-transform: rotate(32.4deg);\r\n        -o-transform: rotate(32.4deg);\r\n        transform: rotate(32.4deg);\r\n    }\r\n    .c100.p10 .bar {\r\n        -webkit-transform: rotate(36deg);\r\n        -moz-transform: rotate(36deg);\r\n        -ms-transform: rotate(36deg);\r\n        -o-transform: rotate(36deg);\r\n        transform: rotate(36deg);\r\n    }\r\n    .c100.p11 .bar {\r\n        -webkit-transform: rotate(39.6deg);\r\n        -moz-transform: rotate(39.6deg);\r\n        -ms-transform: rotate(39.6deg);\r\n        -o-transform: rotate(39.6deg);\r\n        transform: rotate(39.6deg);\r\n    }\r\n    .c100.p12 .bar {\r\n        -webkit-transform: rotate(43.2deg);\r\n        -moz-transform: rotate(43.2deg);\r\n        -ms-transform: rotate(43.2deg);\r\n        -o-transform: rotate(43.2deg);\r\n        transform: rotate(43.2deg);\r\n    }\r\n    .c100.p13 .bar {\r\n        -webkit-transform: rotate(46.800000000000004deg);\r\n        -moz-transform: rotate(46.800000000000004deg);\r\n        -ms-transform: rotate(46.800000000000004deg);\r\n        -o-transform: rotate(46.800000000000004deg);\r\n        transform: rotate(46.800000000000004deg);\r\n    }\r\n    .c100.p14 .bar {\r\n        -webkit-transform: rotate(50.4deg);\r\n        -moz-transform: rotate(50.4deg);\r\n        -ms-transform: rotate(50.4deg);\r\n        -o-transform: rotate(50.4deg);\r\n        transform: rotate(50.4deg);\r\n    }\r\n        .c100.p15 .bar {\r\n        -webkit-transform: rotate(54deg);\r\n        -moz-transform: rotate(54deg);\r\n        -ms-transform: rotate(54deg);\r\n        -o-transform: rotate(54deg);\r\n        transform: rotate(54deg);\r\n    }\r\n        .c100.p16 .bar {\r\n        -webkit-transform: rotate(57.6deg);\r\n        -moz-transform: rotate(57.6deg);\r\n        -ms-transform: rotate(57.6deg);\r\n        -o-transform: rotate(57.6deg);\r\n        transform: rotate(57.6deg);\r\n    }\r\n        .c100.p17 .bar {\r\n        -webkit-transform: rotate(61.2deg);\r\n        -moz-transform: rotate(61.2deg);\r\n        -ms-transform: rotate(61.2deg);\r\n        -o-transform: rotate(61.2deg);\r\n        transform: rotate(61.2deg);\r\n    }\r\n    .c100.p18 .bar {\r\n        -webkit-transform: rotate(64.8deg);\r\n        -moz-transform: rotate(64.8deg);\r\n        -ms-transform: rotate(64.8deg);\r\n        -o-transform: rotate(64.8deg);\r\n        transform: rotate(64.8deg);\r\n    }\r\n        .c100.p19 .bar {\r\n        -webkit-transform: rotate(68.4deg);\r\n        -moz-transform: rotate(68.4deg);\r\n        -ms-transform: rotate(68.4deg);\r\n        -o-transform: rotate(68.4deg);\r\n        transform: rotate(68.4deg);\r\n    }\r\n    .c100.p20 .bar {\r\n        -webkit-transform: rotate(72deg);\r\n        -moz-transform: rotate(72deg);\r\n        -ms-transform: rotate(72deg);\r\n        -o-transform: rotate(72deg);\r\n        transform: rotate(72deg);\r\n    }\r\n    .c100.p21 .bar {\r\n        -webkit-transform: rotate(75.60000000000001deg);\r\n        -moz-transform: rotate(75.60000000000001deg);\r\n        -ms-transform: rotate(75.60000000000001deg);\r\n        -o-transform: rotate(75.60000000000001deg);\r\n        transform: rotate(75.60000000000001deg);\r\n    }\r\n    .c100.p22 .bar {\r\n        -webkit-transform: rotate(79.2deg);\r\n        -moz-transform: rotate(79.2deg);\r\n        -ms-transform: rotate(79.2deg);\r\n        -o-transform: rotate(79.2deg);\r\n        transform: rotate(79.2deg);\r\n    }\r\n    .c100.p23 .bar {\r\n        -webkit-transform: rotate(82.8deg);\r\n        -moz-transform: rotate(82.8deg);\r\n        -ms-transform: rotate(82.8deg);\r\n        -o-transform: rotate(82.8deg);\r\n        transform: rotate(82.8deg);\r\n    }\r\n    .c100.p24 .bar {\r\n        -webkit-transform: rotate(86.4deg);\r\n        -moz-transform: rotate(86.4deg);\r\n        -ms-transform: rotate(86.4deg);\r\n        -o-transform: rotate(86.4deg);\r\n        transform: rotate(86.4deg);\r\n    }\r\n    .c100.p25 .bar {\r\n        -webkit-transform: rotate(90deg);\r\n        -moz-transform: rotate(90deg);\r\n        -ms-transform: rotate(90deg);\r\n        -o-transform: rotate(90deg);\r\n        transform: rotate(90deg);\r\n    }\r\n    .c100.p26 .bar {\r\n        -webkit-transform: rotate(93.60000000000001deg);\r\n        -moz-transform: rotate(93.60000000000001deg);\r\n        -ms-transform: rotate(93.60000000000001deg);\r\n        -o-transform: rotate(93.60000000000001deg);\r\n        transform: rotate(93.60000000000001deg);\r\n    }\r\n    .c100.p27 .bar {\r\n        -webkit-transform: rotate(97.2deg);\r\n        -moz-transform: rotate(97.2deg);\r\n        -ms-transform: rotate(97.2deg);\r\n        -o-transform: rotate(97.2deg);\r\n        transform: rotate(97.2deg);\r\n    }\r\n    .c100.p28 .bar {\r\n        -webkit-transform: rotate(100.8deg);\r\n        -moz-transform: rotate(100.8deg);\r\n        -ms-transform: rotate(100.8deg);\r\n        -o-transform: rotate(100.8deg);\r\n        transform: rotate(100.8deg);\r\n    }\r\n    .c100.p29 .bar {\r\n        -webkit-transform: rotate(104.4deg);\r\n        -moz-transform: rotate(104.4deg);\r\n        -ms-transform: rotate(104.4deg);\r\n        -o-transform: rotate(104.4deg);\r\n        transform: rotate(104.4deg);\r\n    }\r\n    .c100.p30 .bar {\r\n        -webkit-transform: rotate(108deg);\r\n        -moz-transform: rotate(108deg);\r\n        -ms-transform: rotate(108deg);\r\n        -o-transform: rotate(108deg);\r\n        transform: rotate(108deg);\r\n    }\r\n    .c100.p31 .bar {\r\n        -webkit-transform: rotate(111.60000000000001deg);\r\n        -moz-transform: rotate(111.60000000000001deg);\r\n        -ms-transform: rotate(111.60000000000001deg);\r\n        -o-transform: rotate(111.60000000000001deg);\r\n        transform: rotate(111.60000000000001deg);\r\n    }\r\n    .c100.p32 .bar {\r\n        -webkit-transform: rotate(115.2deg);\r\n        -moz-transform: rotate(115.2deg);\r\n        -ms-transform: rotate(115.2deg);\r\n        -o-transform: rotate(115.2deg);\r\n        transform: rotate(115.2deg);\r\n    }\r\n    .c100.p33 .bar {\r\n        -webkit-transform: rotate(118.8deg);\r\n        -moz-transform: rotate(118.8deg);\r\n        -ms-transform: rotate(118.8deg);\r\n        -o-transform: rotate(118.8deg);\r\n        transform: rotate(118.8deg);\r\n    }\r\n    .c100.p34 .bar {\r\n        -webkit-transform: rotate(122.4deg);\r\n        -moz-transform: rotate(122.4deg);\r\n        -ms-transform: rotate(122.4deg);\r\n        -o-transform: rotate(122.4deg);\r\n        transform: rotate(122.4deg);\r\n    }\r\n    .c100.p35 .bar {\r\n        -webkit-transform: rotate(126deg);\r\n        -moz-transform: rotate(126deg);\r\n        -ms-transform: rotate(126deg);\r\n        -o-transform: rotate(126deg);\r\n        transform: rotate(126deg);\r\n    }\r\n    .c100.p36 .bar {\r\n        -webkit-transform: rotate(129.6deg);\r\n        -moz-transform: rotate(129.6deg);\r\n        -ms-transform: rotate(129.6deg);\r\n        -o-transform: rotate(129.6deg);\r\n        transform: rotate(129.6deg);\r\n    }\r\n    .c100.p37 .bar {\r\n        -webkit-transform: rotate(133.20000000000002deg);\r\n        -moz-transform: rotate(133.20000000000002deg);\r\n        -ms-transform: rotate(133.20000000000002deg);\r\n        -o-transform: rotate(133.20000000000002deg);\r\n        transform: rotate(133.20000000000002deg);\r\n    }\r\n    .c100.p38 .bar {\r\n        -webkit-transform: rotate(136.8deg);\r\n        -moz-transform: rotate(136.8deg);\r\n        -ms-transform: rotate(136.8deg);\r\n        -o-transform: rotate(136.8deg);\r\n        transform: rotate(136.8deg);\r\n    }\r\n    .c100.p39 .bar {\r\n        -webkit-transform: rotate(140.4deg);\r\n        -moz-transform: rotate(140.4deg);\r\n        -ms-transform: rotate(140.4deg);\r\n        -o-transform: rotate(140.4deg);\r\n        transform: rotate(140.4deg);\r\n    }\r\n    .c100.p40 .bar {\r\n        -webkit-transform: rotate(144deg);\r\n        -moz-transform: rotate(144deg);\r\n        -ms-transform: rotate(144deg);\r\n        -o-transform: rotate(144deg);\r\n        transform: rotate(144deg);\r\n    }\r\n    .c100.p41 .bar {\r\n        -webkit-transform: rotate(147.6deg);\r\n        -moz-transform: rotate(147.6deg);\r\n        -ms-transform: rotate(147.6deg);\r\n        -o-transform: rotate(147.6deg);\r\n        transform: rotate(147.6deg);\r\n    }\r\n    .c100.p42 .bar {\r\n        -webkit-transform: rotate(151.20000000000002deg);\r\n        -moz-transform: rotate(151.20000000000002deg);\r\n        -ms-transform: rotate(151.20000000000002deg);\r\n        -o-transform: rotate(151.20000000000002deg);\r\n        transform: rotate(151.20000000000002deg);\r\n    }\r\n    .c100.p43 .bar {\r\n        -webkit-transform: rotate(154.8deg);\r\n        -moz-transform: rotate(154.8deg);\r\n        -ms-transform: rotate(154.8deg);\r\n        -o-transform: rotate(154.8deg);\r\n        transform: rotate(154.8deg);\r\n    }\r\n    .c100.p44 .bar {\r\n        -webkit-transform: rotate(158.4deg);\r\n        -moz-transform: rotate(158.4deg);\r\n        -ms-transform: rotate(158.4deg);\r\n        -o-transform: rotate(158.4deg);\r\n        transform: rotate(158.4deg);\r\n    }\r\n    .c100.p45 .bar {\r\n        -webkit-transform: rotate(162deg);\r\n        -moz-transform: rotate(162deg);\r\n        -ms-transform: rotate(162deg);\r\n        -o-transform: rotate(162deg);\r\n        transform: rotate(162deg);\r\n    }\r\n    .c100.p46 .bar {\r\n        -webkit-transform: rotate(165.6deg);\r\n        -moz-transform: rotate(165.6deg);\r\n        -ms-transform: rotate(165.6deg);\r\n        -o-transform: rotate(165.6deg);\r\n        transform: rotate(165.6deg);\r\n    }\r\n    .c100.p47 .bar {\r\n        -webkit-transform: rotate(169.20000000000002deg);\r\n        -moz-transform: rotate(169.20000000000002deg);\r\n        -ms-transform: rotate(169.20000000000002deg);\r\n        -o-transform: rotate(169.20000000000002deg);\r\n        transform: rotate(169.20000000000002deg);\r\n    }\r\n    .c100.p48 .bar {\r\n        -webkit-transform: rotate(172.8deg);\r\n        -moz-transform: rotate(172.8deg);\r\n        -ms-transform: rotate(172.8deg);\r\n        -o-transform: rotate(172.8deg);\r\n        transform: rotate(172.8deg);\r\n    }\r\n    .c100.p49 .bar {\r\n        -webkit-transform: rotate(176.4deg);\r\n        -moz-transform: rotate(176.4deg);\r\n        -ms-transform: rotate(176.4deg);\r\n        -o-transform: rotate(176.4deg);\r\n        transform: rotate(176.4deg);\r\n    }\r\n    .c100.p50 .bar {\r\n        -webkit-transform: rotate(180deg);\r\n        -moz-transform: rotate(180deg);\r\n        -ms-transform: rotate(180deg);\r\n        -o-transform: rotate(180deg);\r\n        transform: rotate(180deg);\r\n    }\r\n    .c100.p51 .bar {\r\n        -webkit-transform: rotate(183.6deg);\r\n        -moz-transform: rotate(183.6deg);\r\n        -ms-transform: rotate(183.6deg);\r\n        -o-transform: rotate(183.6deg);\r\n        transform: rotate(183.6deg);\r\n    }\r\n    .c100.p52 .bar {\r\n        -webkit-transform: rotate(187.20000000000002deg);\r\n        -moz-transform: rotate(187.20000000000002deg);\r\n        -ms-transform: rotate(187.20000000000002deg);\r\n        -o-transform: rotate(187.20000000000002deg);\r\n        transform: rotate(187.20000000000002deg);\r\n    }\r\n    .c100.p53 .bar {\r\n        -webkit-transform: rotate(190.8deg);\r\n        -moz-transform: rotate(190.8deg);\r\n        -ms-transform: rotate(190.8deg);\r\n        -o-transform: rotate(190.8deg);\r\n        transform: rotate(190.8deg);\r\n    }\r\n    .c100.p54 .bar {\r\n        -webkit-transform: rotate(194.4deg);\r\n        -moz-transform: rotate(194.4deg);\r\n        -ms-transform: rotate(194.4deg);\r\n        -o-transform: rotate(194.4deg);\r\n        transform: rotate(194.4deg);\r\n    }\r\n    .c100.p55 .bar {\r\n        -webkit-transform: rotate(198deg);\r\n        -moz-transform: rotate(198deg);\r\n        -ms-transform: rotate(198deg);\r\n        -o-transform: rotate(198deg);\r\n        transform: rotate(198deg);\r\n    }\r\n    .c100.p56 .bar {\r\n        -webkit-transform: rotate(201.6deg);\r\n        -moz-transform: rotate(201.6deg);\r\n        -ms-transform: rotate(201.6deg);\r\n        -o-transform: rotate(201.6deg);\r\n        transform: rotate(201.6deg);\r\n    }\r\n    .c100.p57 .bar {\r\n        -webkit-transform: rotate(205.20000000000002deg);\r\n        -moz-transform: rotate(205.20000000000002deg);\r\n        -ms-transform: rotate(205.20000000000002deg);\r\n        -o-transform: rotate(205.20000000000002deg);\r\n        transform: rotate(205.20000000000002deg);\r\n    }\r\n    .c100.p58 .bar {\r\n        -webkit-transform: rotate(208.8deg);\r\n        -moz-transform: rotate(208.8deg);\r\n        -ms-transform: rotate(208.8deg);\r\n        -o-transform: rotate(208.8deg);\r\n        transform: rotate(208.8deg);\r\n    }\r\n    .c100.p59 .bar {\r\n        -webkit-transform: rotate(212.4deg);\r\n        -moz-transform: rotate(212.4deg);\r\n        -ms-transform: rotate(212.4deg);\r\n        -o-transform: rotate(212.4deg);\r\n        transform: rotate(212.4deg);\r\n    }\r\n    .c100.p60 .bar {\r\n        -webkit-transform: rotate(216deg);\r\n        -moz-transform: rotate(216deg);\r\n        -ms-transform: rotate(216deg);\r\n        -o-transform: rotate(216deg);\r\n        transform: rotate(216deg);\r\n    }\r\n    .c100.p61 .bar {\r\n        -webkit-transform: rotate(219.6deg);\r\n        -moz-transform: rotate(219.6deg);\r\n        -ms-transform: rotate(219.6deg);\r\n        -o-transform: rotate(219.6deg);\r\n        transform: rotate(219.6deg);\r\n    }\r\n    .c100.p62 .bar {\r\n        -webkit-transform: rotate(223.20000000000002deg);\r\n        -moz-transform: rotate(223.20000000000002deg);\r\n        -ms-transform: rotate(223.20000000000002deg);\r\n        -o-transform: rotate(223.20000000000002deg);\r\n        transform: rotate(223.20000000000002deg);\r\n    }\r\n    .c100.p63 .bar {\r\n        -webkit-transform: rotate(226.8deg);\r\n        -moz-transform: rotate(226.8deg);\r\n        -ms-transform: rotate(226.8deg);\r\n        -o-transform: rotate(226.8deg);\r\n        transform: rotate(226.8deg);\r\n    }\r\n    .c100.p64 .bar {\r\n        -webkit-transform: rotate(230.4deg);\r\n        -moz-transform: rotate(230.4deg);\r\n        -ms-transform: rotate(230.4deg);\r\n        -o-transform: rotate(230.4deg);\r\n        transform: rotate(230.4deg);\r\n    }\r\n    .c100.p65 .bar {\r\n        -webkit-transform: rotate(234deg);\r\n        -moz-transform: rotate(234deg);\r\n        -ms-transform: rotate(234deg);\r\n        -o-transform: rotate(234deg);\r\n        transform: rotate(234deg);\r\n    }\r\n    .c100.p66 .bar {\r\n        -webkit-transform: rotate(237.6deg);\r\n        -moz-transform: rotate(237.6deg);\r\n        -ms-transform: rotate(237.6deg);\r\n        -o-transform: rotate(237.6deg);\r\n        transform: rotate(237.6deg);\r\n    }\r\n    .c100.p67 .bar {\r\n        -webkit-transform: rotate(241.20000000000002deg);\r\n        -moz-transform: rotate(241.20000000000002deg);\r\n        -ms-transform: rotate(241.20000000000002deg);\r\n        -o-transform: rotate(241.20000000000002deg);\r\n        transform: rotate(241.20000000000002deg);\r\n    }\r\n    .c100.p68 .bar {\r\n        -webkit-transform: rotate(244.8deg);\r\n        -moz-transform: rotate(244.8deg);\r\n        -ms-transform: rotate(244.8deg);\r\n        -o-transform: rotate(244.8deg);\r\n        transform: rotate(244.8deg);\r\n    }\r\n    .c100.p69 .bar {\r\n        -webkit-transform: rotate(248.4deg);\r\n        -moz-transform: rotate(248.4deg);\r\n        -ms-transform: rotate(248.4deg);\r\n        -o-transform: rotate(248.4deg);\r\n        transform: rotate(248.4deg);\r\n    }\r\n    .c100.p70 .bar {\r\n        -webkit-transform: rotate(252deg);\r\n        -moz-transform: rotate(252deg);\r\n        -ms-transform: rotate(252deg);\r\n        -o-transform: rotate(252deg);\r\n        transform: rotate(252deg);\r\n    }\r\n    .c100.p71 .bar {\r\n        -webkit-transform: rotate(255.6deg);\r\n        -moz-transform: rotate(255.6deg);\r\n        -ms-transform: rotate(255.6deg);\r\n        -o-transform: rotate(255.6deg);\r\n        transform: rotate(255.6deg);\r\n    }\r\n    .c100.p72 .bar {\r\n        -webkit-transform: rotate(259.2deg);\r\n        -moz-transform: rotate(259.2deg);\r\n        -ms-transform: rotate(259.2deg);\r\n        -o-transform: rotate(259.2deg);\r\n        transform: rotate(259.2deg);\r\n    }\r\n    .c100.p73 .bar {\r\n        -webkit-transform: rotate(262.8deg);\r\n        -moz-transform: rotate(262.8deg);\r\n        -ms-transform: rotate(262.8deg);\r\n        -o-transform: rotate(262.8deg);\r\n        transform: rotate(262.8deg);\r\n    }\r\n    .c100.p74 .bar {\r\n        -webkit-transform: rotate(266.40000000000003deg);\r\n        -moz-transform: rotate(266.40000000000003deg);\r\n        -ms-transform: rotate(266.40000000000003deg);\r\n        -o-transform: rotate(266.40000000000003deg);\r\n        transform: rotate(266.40000000000003deg);\r\n    }\r\n    .c100.p75 .bar {\r\n        -webkit-transform: rotate(270deg);\r\n        -moz-transform: rotate(270deg);\r\n        -ms-transform: rotate(270deg);\r\n        -o-transform: rotate(270deg);\r\n        transform: rotate(270deg);\r\n    }\r\n    .c100.p76 .bar {\r\n        -webkit-transform: rotate(273.6deg);\r\n        -moz-transform: rotate(273.6deg);\r\n        -ms-transform: rotate(273.6deg);\r\n        -o-transform: rotate(273.6deg);\r\n        transform: rotate(273.6deg);\r\n    }\r\n    .c100.p77 .bar {\r\n        -webkit-transform: rotate(277.2deg);\r\n        -moz-transform: rotate(277.2deg);\r\n        -ms-transform: rotate(277.2deg);\r\n        -o-transform: rotate(277.2deg);\r\n        transform: rotate(277.2deg);\r\n    }\r\n    .c100.p78 .bar {\r\n        -webkit-transform: rotate(280.8deg);\r\n        -moz-transform: rotate(280.8deg);\r\n        -ms-transform: rotate(280.8deg);\r\n        -o-transform: rotate(280.8deg);\r\n        transform: rotate(280.8deg);\r\n    }\r\n    .c100.p79 .bar {\r\n        -webkit-transform: rotate(284.40000000000003deg);\r\n        -moz-transform: rotate(284.40000000000003deg);\r\n        -ms-transform: rotate(284.40000000000003deg);\r\n        -o-transform: rotate(284.40000000000003deg);\r\n        transform: rotate(284.40000000000003deg);\r\n    }\r\n    .c100.p80 .bar {\r\n        -webkit-transform: rotate(288deg);\r\n        -moz-transform: rotate(288deg);\r\n        -ms-transform: rotate(288deg);\r\n        -o-transform: rotate(288deg);\r\n        transform: rotate(288deg);\r\n    }\r\n    .c100.p81 .bar {\r\n        -webkit-transform: rotate(291.6deg);\r\n        -moz-transform: rotate(291.6deg);\r\n        -ms-transform: rotate(291.6deg);\r\n        -o-transform: rotate(291.6deg);\r\n        transform: rotate(291.6deg);\r\n    }\r\n    .c100.p82 .bar {\r\n        -webkit-transform: rotate(295.2deg);\r\n        -moz-transform: rotate(295.2deg);\r\n        -ms-transform: rotate(295.2deg);\r\n        -o-transform: rotate(295.2deg);\r\n        transform: rotate(295.2deg);\r\n    }\r\n    .c100.p83 .bar {\r\n        -webkit-transform: rotate(298.8deg);\r\n        -moz-transform: rotate(298.8deg);\r\n        -ms-transform: rotate(298.8deg);\r\n        -o-transform: rotate(298.8deg);\r\n        transform: rotate(298.8deg);\r\n    }\r\n    .c100.p84 .bar {\r\n        -webkit-transform: rotate(302.40000000000003deg);\r\n        -moz-transform: rotate(302.40000000000003deg);\r\n        -ms-transform: rotate(302.40000000000003deg);\r\n        -o-transform: rotate(302.40000000000003deg);\r\n        transform: rotate(302.40000000000003deg);\r\n    }\r\n    .c100.p85 .bar {\r\n        -webkit-transform: rotate(306deg);\r\n        -moz-transform: rotate(306deg);\r\n        -ms-transform: rotate(306deg);\r\n        -o-transform: rotate(306deg);\r\n        transform: rotate(306deg);\r\n    }\r\n    .c100.p86 .bar {\r\n        -webkit-transform: rotate(309.6deg);\r\n        -moz-transform: rotate(309.6deg);\r\n        -ms-transform: rotate(309.6deg);\r\n        -o-transform: rotate(309.6deg);\r\n        transform: rotate(309.6deg);\r\n    }\r\n    .c100.p87 .bar {\r\n        -webkit-transform: rotate(313.2deg);\r\n        -moz-transform: rotate(313.2deg);\r\n        -ms-transform: rotate(313.2deg);\r\n        -o-transform: rotate(313.2deg);\r\n        transform: rotate(313.2deg);\r\n    }\r\n    .c100.p88 .bar {\r\n        -webkit-transform: rotate(316.8deg);\r\n        -moz-transform: rotate(316.8deg);\r\n        -ms-transform: rotate(316.8deg);\r\n        -o-transform: rotate(316.8deg);\r\n        transform: rotate(316.8deg);\r\n    }\r\n    .c100.p89 .bar {\r\n        -webkit-transform: rotate(320.40000000000003deg);\r\n        -moz-transform: rotate(320.40000000000003deg);\r\n        -ms-transform: rotate(320.40000000000003deg);\r\n        -o-transform: rotate(320.40000000000003deg);\r\n        transform: rotate(320.40000000000003deg);\r\n    }\r\n    .c100.p90 .bar {\r\n        -webkit-transform: rotate(324deg);\r\n        -moz-transform: rotate(324deg);\r\n        -ms-transform: rotate(324deg);\r\n        -o-transform: rotate(324deg);\r\n        transform: rotate(324deg);\r\n    }\r\n    .c100.p91 .bar {\r\n        -webkit-transform: rotate(327.6deg);\r\n        -moz-transform: rotate(327.6deg);\r\n        -ms-transform: rotate(327.6deg);\r\n        -o-transform: rotate(327.6deg);\r\n        transform: rotate(327.6deg);\r\n    }\r\n    .c100.p92 .bar {\r\n        -webkit-transform: rotate(331.2deg);\r\n        -moz-transform: rotate(331.2deg);\r\n        -ms-transform: rotate(331.2deg);\r\n        -o-transform: rotate(331.2deg);\r\n        transform: rotate(331.2deg);\r\n    }\r\n    .c100.p93 .bar {\r\n        -webkit-transform: rotate(334.8deg);\r\n        -moz-transform: rotate(334.8deg);\r\n        -ms-transform: rotate(334.8deg);\r\n        -o-transform: rotate(334.8deg);\r\n        transform: rotate(334.8deg);\r\n    }\r\n    .c100.p94 .bar {\r\n        -webkit-transform: rotate(338.40000000000003deg);\r\n        -moz-transform: rotate(338.40000000000003deg);\r\n        -ms-transform: rotate(338.40000000000003deg);\r\n        -o-transform: rotate(338.40000000000003deg);\r\n        transform: rotate(338.40000000000003deg);\r\n    }\r\n    .c100.p95 .bar {\r\n        -webkit-transform: rotate(342deg);\r\n        -moz-transform: rotate(342deg);\r\n        -ms-transform: rotate(342deg);\r\n        -o-transform: rotate(342deg);\r\n        transform: rotate(342deg);\r\n    }\r\n    .c100.p96 .bar {\r\n        -webkit-transform: rotate(345.6deg);\r\n        -moz-transform: rotate(345.6deg);\r\n        -ms-transform: rotate(345.6deg);\r\n        -o-transform: rotate(345.6deg);\r\n        transform: rotate(345.6deg);\r\n    }\r\n    .c100.p97 .bar {\r\n        -webkit-transform: rotate(349.2deg);\r\n        -moz-transform: rotate(349.2deg);\r\n        -ms-transform: rotate(349.2deg);\r\n        -o-transform: rotate(349.2deg);\r\n        transform: rotate(349.2deg);\r\n    }\r\n    .c100.p98 .bar {\r\n        -webkit-transform: rotate(352.8deg);\r\n        -moz-transform: rotate(352.8deg);\r\n        -ms-transform: rotate(352.8deg);\r\n        -o-transform: rotate(352.8deg);\r\n        transform: rotate(352.8deg);\r\n    }\r\n    .c100.p99 .bar {\r\n        -webkit-transform: rotate(356.40000000000003deg);\r\n        -moz-transform: rotate(356.40000000000003deg);\r\n        -ms-transform: rotate(356.40000000000003deg);\r\n        -o-transform: rotate(356.40000000000003deg);\r\n        transform: rotate(356.40000000000003deg);\r\n    }\r\n    .c100.p100 .bar {\r\n        -webkit-transform: rotate(360deg);\r\n        -moz-transform: rotate(360deg);\r\n        -ms-transform: rotate(360deg);\r\n        -o-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n    }\r\n    .c100:hover {\r\n        cursor: default;\r\n    }\r\n    .c100:hover > span {\r\n        width: 3.33em;\r\n        line-height: 3.33em;\r\n        font-size: 0.3em;\r\n        color: #307bbb;\r\n    }\r\n    .c100:hover:after {\r\n        top: 0.04em;\r\n        left: 0.04em;\r\n        width: 0.92em;\r\n        height: 0.92em;\r\n    }\r\n    .c100.dark {\r\n        background-color: #777777;\r\n    }\r\n    .c100.dark .bar,\r\n    .c100.dark .fill {\r\n        border-color: #c6ff00 !important;\r\n    }\r\n    .c100.dark > span {\r\n        color: #777777;\r\n    }\r\n    .c100.dark:after {\r\n        background-color: #666666;\r\n    }\r\n    .c100.dark:hover > span {\r\n        color: #c6ff00;\r\n    }\r\n    .c100.green .bar,\r\n    .c100.green .fill {\r\n        border-color: #4db53c !important;\r\n    }\r\n    .c100.green:hover > span {\r\n        color: #4db53c;\r\n    }\r\n    .c100.green.dark .bar,\r\n    .c100.green.dark .fill {\r\n        border-color: #5fd400 !important;\r\n    }\r\n    .c100.green.dark:hover > span {\r\n        color: #5fd400;\r\n    }\r\n    .c100.orange .bar,\r\n    .c100.orange .fill {\r\n        border-color: #dd9d22 !important;\r\n    }\r\n    .c100.orange:hover > span {\r\n        color: #dd9d22;\r\n    }\r\n    .c100.orange.dark .bar,\r\n    .c100.orange.dark .fill {\r\n        border-color: #e08833 !important;\r\n    }\r\n    .c100.orange.dark:hover > span {\r\n        color: #e08833;\r\n    }\r\n    .c100.red .bar,\r\n    .c100.red .fill {\r\n        border-color: #f05050 !important;\r\n    }\r\n    .c100.red:hover > span {\r\n        color: #f05050;\r\n    }\r\n    .c100.red.dark .bar,\r\n    .c100.red.dark .fill {\r\n        border-color: #f47f7f !important;\r\n    }\r\n    .c100.red.dark:hover > span {\r\n        color: #f47f7f;\r\n    }\r\n)",
            "Type": "blocks"
        },
        {
            "Name": "notifications_roles",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1notifications, src).Where({\"ecosystem\": #ecosystem_id#, \"notification->type\": 2, \"recipient->role_id\": #role_id#, \"closed\":0}).Order({id:\"-1\"}).Columns(\"id,recipient->role_id,recipient->role_name,recipient->image_id,sender->type,sender->member_id,sender->member_name,sender->role_id,sender->role_name,notification->icon,notification->popup,page_name,page_params,date_created,date_closed,date_start_processing,processing_info->member_name,closed\").Custom(custom_recipient){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: RECIPIENT:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #recipient.role_name#)\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm mr-xl){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(custom_sender){\r\n    If(#sender.type#==1){\r\n        Div(txt-nowrap){\r\n            SetVar(OwnerId, #sender.member_id#)\r\n            DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            Span(Class: txt-table-hl, Body: SENDER:)\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }\r\n    If(#sender.type#==2){\r\n        Div(txt-nowrap){\r\n            Span(Class: txt-table-hl, Body: SENDER:)\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #sender.role_name#)\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }\r\n}.Custom(custom_info){\r\n     Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Sent: DateTime(DateTime: #date_created#, Format: \"DD.MM HH:MI\"))\r\n    If(#date_start_processing# == 0){\r\n        P(Class: txt-hidden p-10, Body: Status: Span(Class: text-warning, Body: Pending))\r\n    }.Else{\r\n        P(Class: txt-hidden p-10, Body: Status: Span(Class: text-success, Body: Active))\r\n    }\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: PAGE:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"notific_id=#id#\", Page: #page_name#, Body: View notice)\r\n    }\r\n}.Custom(actions){\r\n    If(#date_start_processing# == 0){\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: @1notifications_list, Contract: @1NotificationsProcess, Params: \"NotificId=#id#\", PageParams: \"type=1\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-primary, Body: Em(Class: icon-control-play fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to start processing the notification?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }.Else{\r\n        Button(Class: btn-xs btn-link pull-right mt, Page: @1notifications_list, Contract: @1NotificationsClose, Params: \"NotificId=#id#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }.Alert(Text: \"Do you want to close this notification?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Notifications\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: notifications_list, PageParams: \"type=0\"){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg){\r\n                                    Span(Em(Class: fa fa-square-o)).Style(font-size: 20px; margin-right: 3px;)\r\n                                    Span(Class: ml, Body: Personal notice)\r\n                                }\r\n                            }\r\n                            Em(Class: ml-xl)\r\n                            If(#role_id# > 0){\r\n                                DBFind(@1roles).Where({\"id\": #role_id#}).Vars(my)\r\n                                Span(Class: txt-hl-navigation){\r\n                                    Span(Em(Class: fa fa-check-square-o)).Style(font-size: 20px;)\r\n                                    Span(Class: ml, Body: Roles notice - #my_role_name#)\r\n                                }\r\n                            }.Else{\r\n                                Span(Class: txt-hl-navigation, Body: Roles notice){\r\n                                    Span(Em(Class: fa fa-check-square-o)).Style(font-size: 20px;)\r\n                                    Span(Class: ml, Body: Roles notice)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_page,=custom_sender,=custom_arrow,=custom_recipient,=custom_info,=actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "blocks"
        },
        {
            "Name": "notifications_single",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1notifications, src).Where({\"ecosystem\": #ecosystem_id#, \"notification->type\": 1, \"recipient->member_id\": #key_id#, \"closed\":0}).Order({id:\"-1\"}).Columns(\"id,recipient->member_id,recipient->member_name,recipient->image_id,sender->type,sender->member_id,sender->member_name,sender->role_id,sender->role_name,notification->icon,notification->popup,page_name,page_params,date_created,date_closed,closed\").Custom(custom_recipient){\r\n    Div(txt-nowrap){\r\n        SetVar(OwnerId, #recipient.member_id#)\r\n        DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: RECIPIENT:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm mr-xl){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(custom_sender){\r\n    If(#sender.type#==1){\r\n        Div(txt-nowrap){\r\n            SetVar(OwnerId, #sender.member_id#)\r\n            DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            Span(Class: txt-table-hl, Body: SENDER:)\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }\r\n    If(#sender.type#==2){\r\n        Div(txt-nowrap){\r\n            Span(Class: txt-table-hl, Body: SENDER:)\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold txt-nowrap, Body: #sender.role_name#)\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }\r\n}.Custom(custom_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Sent: DateTime(DateTime: #date_created#, Format: \"DD.MM HH:MI\"))\r\n    P(Class: txt-hidden p-10, Body: Status: Span(Class: text-success, Body: Active))\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: PAGE:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"notific_id=#id#\", Page: #page_name#, Body: View notice)\r\n    }\r\n}.Custom(actions){\r\n    Button(Class: btn-xs btn-link pull-right mt, Page: @1notifications_list, Contract: @1NotificationsClose, Params: \"NotificId=#id#\"){\r\n        Div(mt-xl){\r\n            Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n        }.Style(\r\n            display: inline-block;\r\n        )\r\n    }.Alert(Text: \"Do you want to close this notification?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Notifications\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg){\r\n                                Span(Body: Em(Class: fa fa-check-square-o)).Style(font-size: 20px;)\r\n                                Span(Class: ml, Body: Personal notice)\r\n                            }\r\n                            Em(Class: ml-xl)\r\n                            LinkPage(Page: notifications_list, PageParams: \"type=1\"){\r\n                                Span(Class: txt-hl-navigation-blue){\r\n                                    Span(Em(Class: fa fa-square-o)).Style(font-size: 20px; margin-right: 3px;)\r\n                                    Span(Class: ml, Body: Roles notice)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_page,=custom_sender,=custom_arrow,=custom_recipient,=custom_info,=actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "blocks"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Div(Class: pt-xl){\r\n    LinkPage(Class: nav-container, Page: shareholder_profile){\r\n        Div(Class: nav-icon fa icon-user)\r\n        Div(Class: nav-border)\r\n        Span(Class: nav-item){\r\n            Profile\r\n        }\r\n    }\r\n    LinkPage(Class: nav-container mt-lg, Page: notifications_list){\r\n        Div(Class: nav-icon fa icon-envelope)\r\n        Div(Class: nav-border)\r\n        Span(Class: nav-item){\r\n            Notifications\r\n        }\r\n    }\r\n    LinkPage(Class: nav-container, Page: shareholder_register){\r\n        Div(Class: nav-icon fa icon-layers)\r\n        Div(Class: nav-border)\r\n        Span(Class: nav-item){\r\n            Register of Shareholders\r\n        }\r\n    }\r\n    LinkPage(Class: nav-container mt-lg, Page: shareholder_meetings){\r\n        Div(Class: nav-icon fa icon-note)\r\n        Div(Class: nav-border)\r\n        Span(Class: nav-item){\r\n            Meetings of Shareholders\r\n        }\r\n    }\r\n    LinkPage(Class: nav-container mt-lg, Page: shareholder_directors){\r\n        Div(Class: nav-icon fa icon-calendar)\r\n        Div(Class: nav-border)\r\n        Span(Class: nav-item){\r\n            Board of Directors\r\n        }\r\n    }\r\n    LinkPage(Class: nav-container mt-lg, Page: shareholder_settings){\r\n        Div(Class: nav-icon fa icon-settings)\r\n        Div(Class: nav-border)\r\n        Span(Class: nav-item){\r\n            Settings\r\n        }\r\n    }\r\n}.Style(\r\n    a {\r\n        color: #909fa7;\r\n        text-decoration: none;\r\n    }\r\n    a:hover {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    a:active {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    a:active {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    a:link {\r\n        text-decoration: none;\r\n        #0577FC\r\n    }\r\n    .nav-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        position:relative;\r\n        height: 60px;\r\n    }\r\n    .nav-icon {\r\n        padding: 0 20px 0 20px;\r\n        font-size: 30px;\r\n        align-self: center;\r\n    }\r\n    .nav-border {\r\n        position:absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n        top: 0;\r\n        margin-left: 70px!important;\r\n        width: 4px;\r\n        background-color: #0677FA;\r\n        display:none;\r\n    }\r\n    .nav-container:hover .nav-border {\r\n        display: block!important;\r\n    }\r\n    .nav-container:active .nav-border {\r\n        display: block!important;\r\n    }\r\n     .nav-item {\r\n        flex-grow: 1;\r\n        align-items: center;\r\n        width: 50px;\r\n        padding: 0 20px 0 20px;\r\n        font-size: 18px;\r\n    }\r\n)",
            "Type": "menu"
        },
        {
            "Name": "column_amount_not_found",
            "Trans": "{\"en\": \"Column Amount not found\", \"ru\": \"Колонка Amount не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "column_comments_not_found",
            "Trans": "{\"en\": \"Column Comments not found\", \"ru\": \"Колонка Comments не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "column_date_not_found",
            "Trans": "{\"en\": \"Column Date not found\", \"ru\": \"Колонка Date не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "column_wallet_not_found",
            "Trans": "{\"en\": \"Column Wallet not found\", \"ru\": \"Колонка Wallet не найдена\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "security_not_found",
            "Trans": "{\"en\": \" Data about the securities of the specified user not found\", \"ru\": \"Данные о ценных бумагах пользователя не найдены\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "sharholdes_different_address",
            "Trans": "{\"en\": \"Shareholder wallet address is different from the wallet address in the uploaded file\", \"ru\": \"Адрес кошелька акционера отличается от адреса кошелька в загруженном файле\"}\r\n",
            "Type": "languages"
        },
        {
            "Name": "companies_list",
            "Columns": "[\r\n    {\r\n        \"name\":\"address\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"legal_form\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"license\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"name\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"registration\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"trader_name\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_orders_securities",
            "Columns": "[\r\n  {\r\n    \"name\":\"approval_flags\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"json\"\r\n  },\r\n  {\r\n    \"name\":\"company_id\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"date_created\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"file_id\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"new_owner\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"varchar\"\r\n  },\r\n  {\r\n    \"name\":\"order_amount\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"order_date\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"order_signs\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"json\"\r\n  },\r\n  {\r\n    \"name\":\"previous_owner\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"varchar\"\r\n  },\r\n  {\r\n    \"name\":\"security_id\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"status\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_securities",
            "Columns": "[\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"info\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"details\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"balance\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_securities_history",
            "Columns": "[\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"history_balance\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_comments\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"order_date\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"order_type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"owner\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"approval_flags\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"security_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"transaction_type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "meetings_bd",
            "Columns": "[\r\n    {\r\n        \"name\":\"agenda\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"company_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"matters\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"meeting\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"points\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"json\"\r\n    },\r\n    {\r\n        \"name\":\"status\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "meetings_participants_bd",
            "Columns": "[\r\n    {\r\n        \"name\":\"participant\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"type\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"meeting_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"decision\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_decision\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"point_index\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "security_intermediate_data",
            "Columns": "[\r\n  {\r\n    \"name\":\"amount\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"comments\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  },\r\n  {\r\n    \"name\":\"company_id\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"date\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"deleted\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"owner\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"varchar\"\r\n  },\r\n  {\r\n    \"name\":\"manager\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"varchar\"\r\n  },\r\n  {\r\n    \"name\":\"securities_id\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "settings_support",
            "Columns": "[\r\n  {\r\n    \"name\":\"date_closed\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"date_created\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"inquiry_info\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"json\"\r\n  },\r\n  {\r\n    \"name\":\"processing_info\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"json\"\r\n  },\r\n  {\r\n    \"name\":\"role_recipient\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"sender\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  },\r\n  {\r\n    \"name\":\"status\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "settings_support_messanges",
            "Columns": "[\r\n  {\r\n    \"name\":\"id_inquiry\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"messange_date\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"number\"\r\n  },\r\n  {\r\n    \"name\":\"messange_text\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"text\"\r\n  },\r\n  {\r\n    \"name\":\"sender\",\r\n    \"conditions\":\"true\",\r\n    \"type\":\"varchar\"\r\n  }\r\n]\r\n",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "timer_test",
            "Columns": "[\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "companies_legal_form",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Joint-Stock Company,Limited Liability Company",
            "Type": "app_params"
        },
        {
            "Name": "companies_security_type",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Ordinary shares,Other shares",
            "Type": "app_params"
        },
        {
            "Name": "db_meeting_status",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Meeting is on hold,Meeting is active,Voting rejected,Voting is on hold,Voting is active,Voting is over",
            "Type": "app_params"
        },
        {
            "Name": "role_law_firm_junior",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "role_law_firm_partner",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "roles_types",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "@1assigned_role,@1elective_role,@1system_role,Issuer,Shareholder,Board Member,Board of Directors",
            "Type": "app_params"
        },
        {
            "Name": "voting_questions",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Approval of the priority areas of activity and the financial and business plan of the Company,\r\nApproval of the dividend policy of the Company,\r\nSubmission to the general meeting of shareholders of issues on the reorganization or liquidation of the Company,\r\nSubmission to the general meeting of shareholders of questions on increasing or decreasing the authorized capital of the Company,\r\nDecision on listing of the Company's shares and / or the Company's securities convertible into its shares,\r\nDetermining the price of material transactions of the Company,\r\nConsideration of material issues of the activities of legal entities controlled by the Company,\r\nConsideration of recommendations in relation to a voluntary or mandatory offer received by the Company,\r\nConsideration of recommendations on the amount of dividends on the Company's shares",
            "Type": "app_params"
        },
        {
            "Name": "bd_meeting_add",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(And(#filter_role_company_id#>0,#filter_role_type#==6)){\r\n    SetVar(filter_access, 1)\r\n}\r\n\r\nForm(){\r\n    Div(row){\r\n        Div(col-md-8 col-md-offset-2 text-center pb-lg pt-lg){\r\n            Span(Class: h1 text-bold text-black){\r\n                Board of Directors\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-8 col-md-offset-2){\r\n                Div(panel panel-primary panelForm){\r\n                    Div(panel-body ml-lg mr-lg){\r\n                        Div(row mt minForm ){\r\n                            Div(col-md-12 text-center){\r\n                                Span(Class: h2 text-bold text-black, Body: Meeting of the Board of Directors) \r\n                            }\r\n                        }\r\n                        If(#filter_access# == 1){\r\n                            DBFind(companies_list).Where({\"id\": #filter_role_company_id#}).Columns(\"id,name,address->country,address->city,address->postal_code,address->street,address->house_number\").Vars(view)\r\n                            SetVar(company_address, #view_address_city#, #view_address_street# #view_address_house_number#, #view_address_postal_code#, #view_address_country#)\r\n                            Input(Name: CompanyId, Type: hidden, Value: #filter_role_company_id#)\r\n\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting format Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingFormat, Class: styleInput mt-sm, Value: Electronic voting by the Board Members)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Agenda of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingAgenda, Class: styleInput mt-sm, Value: Conducting the meeting of the shareholders of the company)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingPlace, Class: styleInput mt-sm, Value: #company_address#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting has been initiated by Em(Class: fa fa-caret-down pl-sm))\r\n                                    SetVar(ki, Address(#key_id#))\r\n                                    Input(Name: MeetingInitiated, Class: styleInputDis mt-sm, Value: #ki#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Date of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: MeetingDateFromD, Class: styleInput mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingDateFromT, Class: styleInput mt-sm, Type: time, Value: 00:00)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: MeetingDateUntilD, Class: styleInput mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingDateUntilT, Class: styleInput mt-sm, Type: time, Value: 00:00)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Point N1: Calling a meeting of the shareholders of the company with the following agenda) \r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Issuer Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: AgendaIssuer, Class: styleInputDis mt-sm, Value: #view_name#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Legal form of conducting the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: AgendaLegalForm, Class: styleInputTextArea mt-sm, Type: textarea, Value: Distance voting with the use of the blockchain electronic voting system).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of calling the meeting and verification of the results Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: AgendaPlaceResults, Class: styleInput mt-sm, Value: #company_address#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Quorum of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Data(src_quorum, \"id,name\"){\r\n                                        1,More 30% of shares\r\n                                        2,More 50% of shares\r\n                                        3,More 75% of shares\r\n                                    }\r\n                                    Div(form-inline text-center mb-sm){\r\n                                        RadioGroup(Name: AgendaQuorum, Source: src_quorum, ValueColumn: id, NameColumn: name, Class: h4 mt-sm)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            AppParam(Ecosystem: 1, App: #application_id#, Name: voting_questions, Source: src_questions)\r\n\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Agenda of the meeting Em(Class: fa fa-caret-down pl-sm pb))\r\n                                    If(#cs#==\"\"){\r\n                                        SetVar(cs,0)\r\n                                    }\r\n                                    If(#del# == 1){\r\n                                        SetVar(cs,Calculate(#cs# - 1))\r\n                                    }.Else{\r\n                                        SetVar(cs,Calculate(#cs# + 1))\r\n                                    }\r\n                                    Range(params_range, 0, #cs#)\r\n                                    ForList(Source: params_range){\r\n                                        Div(Class: pb-xl){\r\n                                            Div(input-group){\r\n                                                Select(Name: AgendaArr, Class: styleInput2, Source: src_questions, NameColumn: name, ValueColumn: id)\r\n                                                Div(input-group-btn){\r\n                                                    If(And(#cs#==#params_range_index#,#cs#>1)){\r\n                                                        Button(Class: btn bg-gray-lighter mtl btnGroup fa fa-trash, PageParams: \"cs=#cs#,del=1\", Page: bd_meeting_add)\r\n                                                    }.Else{\r\n                                                        Button(Class: btn bg-gray-lighter mtl btnGroup fa fa-ellipsis-h)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            Input(Name: AgendaDescriptionArr, Class: styleInputTextArea, Type: textarea, Placeholder: \"Description\").Style(\r\n                                                resize: vertical; \r\n                                                min-height: 6em;\r\n                                                margin-top: 4px;\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                    Div(text-center){\r\n                                        Button(Class: btn btn-link, Body: Add point, PageParams: \"cs=#cs#\", Page: bd_meeting_add).Style(\r\n                                            margin-top: -25px;\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Timing for submitting votes by the shareholders on the points of the agenda of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: AgendaDateFromD, Class: styleInput mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: AgendaDateFromT, Class: styleInput mt-sm, Type: time, Value: 00:00)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                Input(Name: AgendaDateUntilD, Class: styleInput mt-sm, Type: date)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: AgendaDateUntilT, Class: styleInput mt-sm, Type: time, Value: 00:00)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Point N2: Other matters) \r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Input(Name: Matters, Class: styleInputTextArea, Type: textarea, Value: Engage the Law Firm to prepare the bulletin for voting by the shareholders and make the other necessary arrangements for conducting the meeting via the Apla electronic voting system.).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-primary pull-right btnPrimary, Body: \"Save\", Contract: BDMeetingEdit, Page: shareholder_directors)\r\n                                    Button(Class: btn btn-default pull-right btnDefault mr-sm, Body: \"Back\", Page: shareholder_directors)\r\n                                }\r\n                            }\r\n                        }.Else{\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-default pull-right btnDefault mr-sm, Body: \"Back\", Page: shareholder_directors)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .styleInputTextArea {\r\n        font-size: 16px;\r\n\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n    }\r\n    .text-black {\r\n        color: #222f3e;\r\n    }\r\n    .styleInputDis {\r\n        font-size: 18px;\r\n        background-color: #edf1f2;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px!important;\r\n        display:flex;\r\n    }\r\n    .styleInput2 {\r\n        font-size: 15px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px!important;\r\n        display:flex;\r\n    }\r\n    .styleInput {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px!important;\r\n        display:flex;\r\n    }\r\n    .btnGroup {\r\n        width: 60px!important;\r\n        border-radius: 6px;\r\n        border: 1px solid #dde6e9;\r\n        background-color: #fff;\r\n        height: 40px!important;\r\n    }\r\n    .panelForm {\r\n        min-width: 400px!important;\r\n    }\r\n    .btnPrimary {\r\n        height: 36px;\r\n        width: 100px!important;\r\n        border-radius: 6px;\r\n        border: 2px solid #5c9ae9;\r\n    }\r\n    .btnDefault {\r\n        height: 36px;\r\n        width: 100px!important;\r\n        border-radius: 6px;\r\n        border: 2px solid #777777;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "bd_meeting_edit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\r\nIf(#meeting_id# > 0){\r\n    DBFind(meetings_bd, src).Where({\"id\": #meeting_id#}).Columns(\"company_id,date_created,matters,points,meeting->format,meeting->agenda,meeting->place,meeting->initiated,meeting->date_from,meeting->date_until,agenda->issuer,agenda->legal_form,agenda->quorum,agenda->place_results,agenda->date_from,agenda->date_until,status\").Vars(view)\r\n}\r\n\r\nSetVar(initiated, AddressToId(#view_meeting_initiated#))\r\nIf(And(#initiated#==#key_id#,#view_status#==1)){\r\n    SetVar(filter_access, 1)\r\n}\r\n\r\nForm(){\r\n    Div(row){\r\n        Div(col-md-8 col-md-offset-2 text-center pb-lg pt-lg){\r\n            Span(Class: h1 text-bold text-black){\r\n                Board of Directors\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-8 col-md-offset-2){\r\n                Div(panel panel-primary panelForm){\r\n                    Div(panel-body ml-lg mr-lg){\r\n                        Div(row mt minForm ){\r\n                            Div(col-md-12 text-center){\r\n                                Span(Class: h2 text-bold text-black, Body: Meeting of the Board of Directors) \r\n                            }\r\n                        }\r\n                        If(#filter_access# == 1){\r\n                            Input(Name: Id, Type: hidden, Value: #meeting_id#)\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting format Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingFormat, Class: styleInput mt-sm, Value: #view_meeting_format#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Agenda of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingAgenda, Class: styleInput mt-sm, Value: #view_meeting_agenda#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingPlace, Class: styleInput mt-sm, Value: #view_meeting_place#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: The meeting has been initiated by Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: MeetingInitiated, Class: styleInputDis mt-sm, Value: #view_meeting_initiated#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Date of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(MeetingDateFrom_dt, DateTime(DateTime: #view_meeting_date_from#, Format: \"YYYY-MM-DD\"))\r\n                                                SetVar(MeetingDateFrom_tm, DateTime(DateTime: #view_meeting_date_from#, Format: \"HH:MI\"))\r\n                                                Input(Name: MeetingDateFromD, Class: styleInput mt-sm, Type: date, Value: #MeetingDateFrom_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingDateFromT, Class: styleInput mt-sm, Type: time, Value: #MeetingDateFrom_tm#)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(MeetingDateUntil_dt, DateTime(DateTime: #view_meeting_date_until#, Format: \"YYYY-MM-DD\"))\r\n                                                SetVar(MeetingDateUntil_tm, DateTime(DateTime: #view_meeting_date_until#, Format: \"HH:MI\"))\r\n                                                Input(Name: MeetingDateUntilD, Class: styleInput mt-sm, Type: date, Value: #MeetingDateUntil_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: MeetingDateUntilT, Class: styleInput mt-sm, Type: time, Value: #MeetingDateUntil_tm#)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Point N1: Calling a meeting of the shareholders of the company with the following agenda) \r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Issuer Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: AgendaIssuer, Class: styleInputDis mt-sm, Value: #view_agenda_issuer#, Disabled: true)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Legal form of conducting the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: AgendaLegalForm, Class: styleInputTextArea mt-sm, Type: textarea, Value: #view_agenda_legal_form#).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Place of calling the meeting and verification of the results Em(Class: fa fa-caret-down pl-sm))\r\n                                    Input(Name: AgendaPlaceResults, Class: styleInput mt-sm, Value: #view_agenda_place_results#)\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Quorum of the meeting Em(Class: fa fa-caret-down pl-sm))\r\n                                    Data(src_quorum, \"id,name\"){\r\n                                        1,More 30% of shares\r\n                                        2,More 50% of shares\r\n                                        3,More 75% of shares\r\n                                    }\r\n                                    Div(form-inline text-center mb-sm){\r\n                                        RadioGroup(Name: AgendaQuorum, Source: src_quorum, ValueColumn: id, NameColumn: name, Class: h4 mt-sm, Value: #view_agenda_quorum#)\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            AppParam(Ecosystem: 1, App: #application_id#, Name: voting_questions, Source: src_questions)\r\n\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Agenda of the meeting Em(Class: fa fa-caret-down pl-sm pb))\r\n\r\n                                    ArrayToSource(pv, #view_points#)\r\n                                    ForList(Source: pv, Index: s_ind){\r\n                                        SetVar(max_sec, #s_ind#)\r\n                                    }\r\n                                    If(#cs#==\"\"){\r\n                                        SetVar(cs, #max_sec#)\r\n                                    }\r\n                                    If(Or(#del_flag#==1,#del_data#>0)){\r\n                                        SetVar(cs, Calculate(Exp:#cs#-1, Type: int))\r\n                                    }\r\n\r\n                                    SetVar(next_sec, Calculate(Exp:#cs#+1, Type: int))\r\n                                    SetVar(data_sec, Calculate(Exp:#cs#-#max_sec#, Type: int))\r\n\r\n                                    ForList(Source: pv, Index: s_ind){\r\n                                        If(#s_ind#>#cs#){\r\n                                        }.Else{\r\n                                            Div(Class: pb-xl){\r\n                                                JsonToSource(map_points, #value#, map)\r\n                                                ForList(map_points){\r\n                                                    If(#map_key#==\"agenda\"){\r\n                                                        Div(input-group){\r\n                                                            Select(Name: AgendaArr, Class: styleInput2, Source: src_questions, NameColumn: name, ValueColumn: id, Value: #map_value#)\r\n                                                            Div(input-group-btn){\r\n                                                                If(And(#s_ind#>1,#s_ind#==#cs#)){\r\n                                                                    Button(Class: btn bg-gray-lighter mtl btnGroup fa fa-trash, PageParams: \"meeting_id=#meeting_id#,cs=#cs#,del_data=#s_ind#\", Page: bd_meeting_edit)\r\n                                                                }.Else{\r\n                                                                    Button(Class: btn bg-gray-lighter mtl btnGroup fa fa-ellipsis-h)\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                ForList(map_points){\r\n                                                    If(#map_key#==\"description\"){\r\n                                                        Input(Name: AgendaDescriptionArr, Class: styleInputTextArea, Type: textarea, Placeholder: \"Description\", Value: #map_value#).Style(\r\n                                                            resize: vertical; \r\n                                                            min-height: 6em;\r\n                                                            margin-top: 4px;\r\n                                                        )\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    Range(params_range, #max_sec#, #cs#)\r\n                                    ForList(Source: params_range, Index:s_ind){\r\n                                        Div(Class: pb-xl){\r\n                                            Div(input-group){\r\n                                                Select(Name: AgendaArr, Class: styleInput2, Source: src_questions, NameColumn: name, ValueColumn: id)\r\n                                                Div(input-group-btn){\r\n                                                    If(#s_ind#==#data_sec#){\r\n                                                        Button(Class: btn bg-gray-lighter mtl btnGroup fa fa-trash, PageParams: \"meeting_id=#meeting_id#,cs=#cs#,del_data=#s_ind#\", Page: bd_meeting_edit)\r\n                                                    }.Else{\r\n                                                        Button(Class: btn bg-gray-lighter mtl btnGroup fa fa-ellipsis-h)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            Input(Name: AgendaDescriptionArr, Class: styleInputTextArea, Type: textarea, Placeholder: \"Description\").Style(\r\n                                                resize: vertical; \r\n                                                min-height: 6em;\r\n                                                margin-top: 4px;\r\n                                            )\r\n                                        }\r\n                                    }\r\n\r\n                                    Div(text-center){\r\n                                        Button(Class: btn btn-link, Body: Add point, PageParams: \"meeting_id=#meeting_id#,cs=#next_sec#\", Page: bd_meeting_edit).Style(\r\n                                            margin-top: -25px;\r\n                                        )\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-lg minForm){\r\n                                Div(col-md-12){\r\n                                    Span(Class: text-muted h4, Body: Timing for submitting votes by the shareholders on the points of the agenda of the meeting [in the period from / until] Em(Class: fa fa-caret-down pl-sm))\r\n                                    Div(row){\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(AgendaDateFrom_dt, DateTime(DateTime: #view_agenda_date_from#, Format: \"YYYY-MM-DD\"))\r\n                                                SetVar(AgendaDateFrom_tm, DateTime(DateTime: #view_agenda_date_from#, Format: \"HH:MI\"))\r\n                                                Input(Name: AgendaDateFromD, Class: styleInput mt-sm, Type: date, Value: #AgendaDateFrom_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: AgendaDateFromT, Class: styleInput mt-sm, Type: time, Value: #AgendaDateFrom_tm#)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        Div(col-md-6){\r\n                                            Div(input-group){\r\n                                                SetVar(AgendaDateUntil_dt, DateTime(DateTime: #view_agenda_date_until#, Format: \"YYYY-MM-DD\"))\r\n                                                SetVar(AgendaDateUntil_tm, DateTime(DateTime: #view_agenda_date_until#, Format: \"HH:MI\"))\r\n                                                Input(Name: AgendaDateUntilD, Class: styleInput mt-sm, Type: date, Value: #AgendaDateUntil_dt#)\r\n                                                Div(input-group-btn){\r\n                                                    Input(Name: AgendaDateUntilT, Class: styleInput mt-sm, Type: time, Value: #AgendaDateUntil_tm#)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            Div(row mt-xl minForm){\r\n                                Div(col-md-12 text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: Point N2: Other matters) \r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12){\r\n                                    Input(Name: Matters, Class: styleInputTextArea, Type: textarea, Value: #view_matters#).Style(resize: vertical; min-height: 6em;)\r\n                                }\r\n                            }\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-primary pull-right btnPrimary, Body: \"Save\", Contract: BDMeetingEdit, Page: shareholder_directors)\r\n                                    Button(Class: btn btn-default pull-right btnDefault mr-sm, Body: \"Back\", Page: shareholder_directors)\r\n                                }\r\n                            }\r\n                        }.Else{\r\n                            Div(row mt minForm){\r\n                                Div(col-md-12 mt){\r\n                                    Button(Class: btn btn-default pull-right btnDefault mr-sm, Body: \"Back\", Page: shareholder_directors)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .styleInputTextArea {\r\n        font-size: 16px;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n    }\r\n    .text-black {\r\n        color: #222f3e;\r\n    }\r\n    .styleInputDis {\r\n        font-size: 18px;\r\n        background-color: #edf1f2;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px!important;\r\n        display:flex;\r\n    }\r\n    .styleInput2 {\r\n        font-size: 15px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px!important;\r\n        display:flex;\r\n    }\r\n    .styleInput {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px!important;\r\n        display:flex;\r\n    }\r\n    .btnGroup {\r\n        width: 60px!important;\r\n        border-radius: 6px;\r\n        border: 1px solid #dde6e9;\r\n        background-color: #fff;\r\n        height: 40px!important;\r\n    }\r\n    .panelForm {\r\n        min-width: 400px!important;\r\n    }\r\n    .btnPrimary {\r\n        height: 36px;\r\n        width: 100px!important;\r\n        border-radius: 6px;\r\n        border: 2px solid #5c9ae9;\r\n    }\r\n    .btnDefault {\r\n        height: 36px;\r\n        width: 100px!important;\r\n        border-radius: 6px;\r\n        border: 2px solid #777777;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "bd_meeting_view",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\r\nDBFind(meetings_bd).Where({\"id\": #meeting_id#}).Columns(\"company_id,date_created,matters,points,meeting->format,meeting->agenda,meeting->place,meeting->initiated,meeting->date_from,meeting->date_until,agenda->issuer,agenda->legal_form,agenda->quorum,agenda->place_results,agenda->date_from,agenda->date_until,status\").Vars(view)\r\nSetVar(k_i, Address(#key_id#))\r\n\r\nIf(#view_status# == 2){\r\n    DBFind(\"meetings_participants_bd\").Columns(\"id\").Where({\"meeting_id\": #meeting_id#, \"type\": \"meeting\", \"participant\": #k_i#, \"decision\": 0}).Vars(participant_meeting)\r\n    DBFind(\"@1roles_participants\").Columns(\"id\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0, \"role->company_id\": #view_company_id#, \"role->type\": 6}).Vars(participant_role_meeting)\r\n\r\n    If(And(#participant_meeting_id#>0,#participant_role_meeting_id#>0)){\r\n        SetVar(allowed_to_meeting, 1)\r\n    }\r\n}\r\n\r\nIf(#view_status# == 5){\r\n    DBFind(\"meetings_participants_bd\").Columns(\"id\").Where({\"meeting_id\": #meeting_id#, \"type\": \"voting\", \"participant\": #k_i#, \"decision\": 0}).Vars(participant_voting)\r\n    DBFind(\"@1roles_participants\").Columns(\"id\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0, \"role->company_id\": #view_company_id#, \"role->type\": 5}).Vars(participant_role_voting)\r\n\r\n    If(And(#participant_voting_id#>0,#participant_role_voting_id#>0)){\r\n        SetVar(allowed_to_voting, 1)\r\n    }  \r\n}\r\n\r\nSetVar(allowed_to_viewing, 1)\r\n\r\nForm(){\r\n    Div(row){\r\n        Div(col-md-10 col-md-offset-1 text-center pb-lg pt-lg){\r\n            Span(Class: h1 text-bold text-black){\r\n                If(Or(#view_status#==1,#view_status#==2,#view_status#==3)){\r\n                    Board of Directors\r\n                }\r\n                If(Or(#view_status#==4,#view_status#==5,#view_status#==6)){\r\n                    Meeting of Shareholders\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-10 col-md-offset-1){\r\n                Div(panel panel-primary panelForm){\r\n                    Div(panel-body m0){\r\n                        Div(bb pb){\r\n                            Div(pl-lg pb pt-sm text-center){\r\n                                If(Or(#view_status#==1,#view_status#==2,#view_status#==3)){\r\n                                    Span(Class: h2 text-bold text-black, Body: Meeting of the Board of Directors N#meeting_id#)\r\n                                }\r\n                                If(Or(#view_status#==4,#view_status#==5,#view_status#==6)){\r\n                                    Span(Class: h2 text-bold text-black, Body: Meeting of Shareholders N#meeting_id#)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(mt-sm){\r\n                            If(#allowed_to_viewing# == 1){\r\n                                Div(){\r\n                                    Span(Class: pr-xl pb-lg fullscreen){\r\n\r\n                                        If(Or(#view_status#==1,#view_status#==2,#view_status#==3)){\r\n                                            If(#view_meeting_format# != \"\"){\r\n                                                Div(row){\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg pull-right){\r\n                                                            Span(Class: text-black h4, Body: Strong(The meeting format))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1 text-center){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: #view_meeting_format#)\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_agenda# != \"\"){\r\n                                                Div(row){\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg pull-right){\r\n                                                            Span(Class: text-black h4, Body: Strong(Agenda of the meeting))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1 text-center){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: #view_meeting_agenda#)\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_place# != \"\"){\r\n                                                Div(row){\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg pull-right){\r\n                                                            Span(Class: text-black h4, Body: Strong(Place of the meeting))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1 text-center){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: #view_meeting_place#)\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_initiated# != \"\"){\r\n                                                Div(row){\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg pull-right){\r\n                                                            Div(Class: text-black h4 m0, Body: Strong(The meeting has been initiated by))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1 text-center){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: #view_meeting_initiated#)\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1)\r\n                                                }\r\n                                            }\r\n                                            If(#view_meeting_date_from# != \"\"){\r\n                                                Div(row){\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg pull-right){\r\n                                                            Span(Class: text-black h4, Body: Strong(Date of the meeting))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1 text-center){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-5){\r\n                                                        Div(mt-lg){\r\n                                                            Span(Class: text-black h4, Body: In the period from DateTime(DateTime: #view_meeting_date_from#, Format: \"DD.MM.YYYY HH:MI\") / until DateTime(DateTime: #view_meeting_date_until#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                                                        }\r\n                                                    }\r\n                                                    Div(col-md-1)\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        If(Or(#view_status#==1,#view_status#==2,#view_status#==3)){\r\n                                            Div(row pt-lg){\r\n                                                Div(col-md-2){}\r\n                                                Div(col-md-8 text-center){\r\n                                                    Div(mt-xl){\r\n                                                        Div(Class: text-black h3 m0, Body: Strong(Point N1: Calling a meeting of the shareholders of the company))\r\n                                                        Div(Class: text-black h3 m0, Body: Strong(with the following agenda))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-2){}\r\n                                            }\r\n                                        }\r\n\r\n                                        If(#view_agenda_issuer# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Issuer))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_agenda_issuer#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_agenda_legal_form# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Legal form of conducting))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_agenda_legal_form#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_agenda_place_results# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Place of calling the meeting and))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(verification of the results))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_agenda_place_results#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_agenda_date_from# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Timing for submitting votes by the))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(shareholders on the points of))\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(the agenda of the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: In the period from DateTime(DateTime: #view_agenda_date_from#, Format: \"DD.MM.YYYY HH:MI\") / until DateTime(DateTime: #view_agenda_date_until#, Format: \"DD.MM.YYYY HH:MI\"))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        If(#view_agenda_quorum# != \"\"){\r\n                                            Div(row){\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Div(Class: text-black h4 m0 text-right, Body: Strong(Quorum of the meeting))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-5){\r\n                                                    Div(mt-lg){\r\n                                                        If(#view_agenda_quorum# == 1){\r\n                                                            Span(Class: text-black h4, Body: More 30% of shares)\r\n                                                        }\r\n                                                        If(#view_agenda_quorum# == 2){\r\n                                                            Span(Class: text-black h4, Body: More 50% of shares)\r\n                                                        }\r\n                                                        If(#view_agenda_quorum# == 3){\r\n                                                            Span(Class: text-black h4, Body: More 75% of shares)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1)\r\n                                            }\r\n                                        }\r\n                                        Div(row mt-xl){\r\n                                            Div(col-md-2){}\r\n                                            Div(col-md-8 text-center){\r\n                                                Span(Class: text-black h4, Body: Strong(Agenda of the meeting:))\r\n                                            }\r\n                                            Div(col-md-2){}\r\n                                        }\r\n                                        Div(row pt){\r\n                                            Div(col-md-2){}\r\n                                            Div(col-md-8){\r\n                                                ArrayToSource(array_points, #view_points#, array)\r\n                                                ForList(array_points){\r\n                                                    DBFind(\"meetings_participants_bd\").Columns(\"decision\").Where({\"meeting_id\": #meeting_id#, \"type\": \"voting\", \"participant\": #k_i#, \"point_index\": #array_key#}).Vars(current_point)\r\n                                                    JsonToSource(map_points, #array_value#, map)\r\n                                                    Div(list-group-item mb){\r\n                                                        ForList(map_points){\r\n                                                            If(#map_key#==\"agenda\"){\r\n                                                                Div(Class: text-black text-center text-bold h4, Body: Point Calculate(1+#array_key#): AppParam(Ecosystem: 1, App: #application_id#, Name: voting_questions, Index: #map_value#)) \r\n                                                            }\r\n                                                            If(#map_key#==\"description\"){\r\n                                                                Div(Class: text-black text-center h4, Body: #map_value#) \r\n                                                            }\r\n                                                            If(#allowed_to_voting# == 1){\r\n                                                                If(#current_point_decision# == 0){\r\n                                                                    If(#map_key#==\"no\"){\r\n                                                                        Button(Class: btn btnReject text-bold ml-xl mt, Body: Reject, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: BDVotingReject, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                    }\r\n                                                                    If(#map_key#==\"yes\"){\r\n                                                                        Button(Class: btn btnAccept text-bold pull-right mr-xl mt, Body: Accept, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: BDVotingAccept, Params: \"MeetingId=#meeting_id#,PointIndex=#array_key#\")\r\n                                                                    }\r\n                                                                }.Else{\r\n                                                                    If(#map_key#==\"agenda\"){\r\n                                                                        If(#current_point_decision# > 0){\r\n                                                                            Div(text-center pt-lg pb-lg){\r\n                                                                                Span(Class: h4 text-bold text-green, Body: I ACCEPTED this agenda)\r\n                                                                            }\r\n                                                                        }\r\n                                                                        If(#current_point_decision# < 0){\r\n                                                                            Div(text-center pt-lg pb-lg){\r\n                                                                                Span(Class: h4 text-bold text-red, Body: I REJECTED this agenda)\r\n                                                                            }\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }.Else{\r\n                                                                If(#view_status# == 5){\r\n                                                                    If(#map_key#==\"agenda\"){\r\n                                                                        If(#current_point_decision# > 0){\r\n                                                                            Div(text-center pt-lg pb-lg){\r\n                                                                                Span(Class: h4 text-bold text-green, Body: I ACCEPTED this agenda)\r\n                                                                            }\r\n                                                                        }\r\n                                                                        If(#current_point_decision# < 0){\r\n                                                                            Div(text-center pt-lg pb-lg){\r\n                                                                                Span(Class: h4 text-bold text-red, Body: I REJECTED this agenda)\r\n                                                                            }\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            If(#view_status# == 6){\r\n                                                                If(#map_key#==\"no\"){\r\n                                                                    Div(pb-lg ml-xl){\r\n                                                                        Span(Class: h4 text-bold text-red, Body: REJECTED: #map_value# shares)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                                If(#map_key#==\"yes\"){\r\n                                                                    Div(pb-lg mr-sm pull-right){\r\n                                                                        Span(Class: h4 text-bold text-green, Body: ACCEPTED: #map_value# shares)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                                If(#map_key#==\"percent_no\"){\r\n                                                                    Div(pb-lg ml-sm){\r\n                                                                        Span(Class: h4 text-bold text-red, Body: - Calculate(Exp: #map_value#, Type: float, Prec: 2)%)  \r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n                                                                If(#map_key#==\"percent_yes\"){\r\n                                                                    Div(pb-lg mr-xl pull-right){\r\n                                                                        Span(Class: h4 text-bold text-green, Body: - Calculate(Exp: #map_value#, Type: float, Prec: 2)%)\r\n                                                                    }.Style(\r\n                                                                        display: inline-block;\r\n                                                                    )\r\n                                                                }\r\n\r\n                                                                If(#map_key#==\"decision\"){\r\n                                                                    Div(pt-sm text-center){\r\n                                                                        Div(Class: h4 text-bold text-uppercase, Body: #map_value#)\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            Div(col-md-2){}\r\n                                        }\r\n\r\n                                        If(Or(#view_status#==1,#view_status#==2,#view_status#==3)){\r\n                                            Div(row pt-lg){\r\n                                                Div(col-md-2){}\r\n                                                Div(col-md-8 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h3, Body: Strong(Point N2: Other matters))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-2){}\r\n                                            }\r\n                                        }\r\n\r\n                                        If(Or(#view_status#==1,#view_status#==2,#view_status#==3)){\r\n                                            Div(row){\r\n                                                Div(col-md-1){}\r\n                                                Div(col-md-10 text-center){\r\n                                                    Div(mt-lg){\r\n                                                        Span(Class: text-black h4, Body: #view_matters#)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-md-1){}\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }.Style(display:flex; align-items:center;)\r\n                            }.Else{\r\n                                Div(pl-lg pb pt text-center){\r\n                                    Span(Class: h3 text-bold text-black, Body: No information)\r\n                                }\r\n                            }\r\n                        }\r\n                        If(Or(#view_status#==2,#view_status#==3)){\r\n                            Div(bb)\r\n                            Div(pt pb-lg){\r\n                                Include(cr_voting_charts)\r\n                            }\r\n                        If(#allowed_to_meeting# == 1){\r\n                            Div(bb)\r\n                            Div(pb pt-lg){\r\n                                Div(row pt){\r\n                                    Div(col-md-2)\r\n                                    Div(col-md-2 text-center){\r\n                                        Button(Class: btn btnReject text-bold, Body: Reject, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: BDMeetingReject, Params: \"MeetingId=#meeting_id#\")\r\n                                    }\r\n                                    Div(col-md-4)\r\n                                    Div(col-md-2 text-center){\r\n                                        Button(Class: btn btnAccept text-bold, Body: Accept, Page: bd_meeting_view, PageParams: \"meeting_id=#meeting_id#\", Contract: BDMeetingAccept, Params: \"MeetingId=#meeting_id#\")\r\n                                    }\r\n                                    Div(col-md-2)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .text-black {\r\n        color: #222f3e;\r\n    }\r\n    .text-green {\r\n        color: #27c24c;\r\n    }\r\n    .text-red {\r\n        color: #f05050;\r\n    }\r\n    .minCol {\r\n        width: 300px!important;\r\n    }\r\n    .panelForm {\r\n        min-width: 1000px!important;\r\n    }\r\n    .btnAccept {\r\n        background-color: #27c24c;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 2px solid;\r\n        border-color: #22ac43 !important;\r\n    }\r\n    .btnReject {\r\n        background-color: #f05050;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 2px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnAccept:hover {\r\n        border-color: #1c8c36 !important;\r\n    }\r\n    .btnReject:hover {\r\n        border-color: #a61717 !important;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_address",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        If(#fnew# == 1){\n            DBFind(companies_list).Where({\"name\": \"#name#\"}).Columns(\"id\").Vars(company)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }.Else{\n            DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"address->country,address->city,address->postal_code,address->street,address->house_number\").Vars(request)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Country Em(Class: fa fa-caret-down pl-sm))\n                If(#request_address_country#){\n                    Input(Name: AddressCountry, Class: stl-input mt-sm, Value: #request_address_country#)\n                }.Else{\n                    Input(Name: AddressCountry, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: City name Em(Class: fa fa-caret-down pl-sm))\n                If(#request_address_city#){\n                    Input(Name: AddressCity, Class: stl-input mt-sm, Value: #request_address_city#)\n                }.Else{\n                    Input(Name: AddressCity, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Postal code Em(Class: fa fa-caret-down pl-sm))\n                If(#request_address_postal_code#){\n                    Input(Name: AddressPostalCode, Class: stl-input mt-sm, Value: #request_address_postal_code#)\n                }.Else{\n                    Input(Name: AddressPostalCode, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Street Em(Class: fa fa-caret-down pl-sm))\n                If(#request_address_street#){\n                    Input(Name: AddressStreet, Class: stl-input mt-sm, Value: #request_address_street#)\n                }.Else{\n                    Input(Name: AddressStreet, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: House number Em(Class: fa fa-caret-down pl-sm))\n                If(#request_address_house_number#){\n                    Input(Name: AddressHouseNumber, Class: stl-input mt-sm, Value: #request_address_house_number#)\n                }.Else{\n                    Input(Name: AddressHouseNumber, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                If(#fnew# == 1){\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: CompanyEdit, Params: \"Step=3\", Page: co_edit_registration, PageParams: \"fnew=1,name=#name#\").Popup(45, \"APLA ™\")\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                        Span(Class: text-muted mr-lg h4, Body: Step)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                    }\n                }.Else{\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=3\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_legform",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nDBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        If(#fnew# == 1){\n            DBFind(companies_list).Where({\"name\": \"#name#\"}).Columns(\"id\").Vars(company)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }.Else{\n            DBFind(companies_list).Where({\"id\": #company_id#}).Vars(request)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Legal form Em(Class: fa fa-caret-down pl-sm))\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: companies_legal_form, Source: src_legal_form)\n                Div(mt h4){\n                    If(#request_legal_form#){\n                        RadioGroup(Name: LegalForm, Source: src_legal_form, NameColumn: name, ValueColumn: name, Value: #request_legal_form#)\n                    }.Else{\n                        RadioGroup(Name: LegalForm, Source: src_legal_form, NameColumn: name, ValueColumn: name)\n                    }\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12 mt){\n                If(#fnew# == 1){\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: CompanyEdit, Params: \"Step=2\", Page: co_edit_address, PageParams: \"fnew=1,name=#name#\").Popup(45, \"APLA ™\")\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                        Span(Class: text-muted mr-lg h4, Body: Step)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                    }\n                }.Else{\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=2\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_license",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            DBFind(companies_list).Where({\"name\": \"#name#\"}).Columns(\"id\").Vars(company)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }.Else{\r\n            DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"license->number,license->activity,license->authority,license->issue_date,license->valid_until\").Vars(request)\r\n            Input(Name: Id, Type: hidden, Value: #company_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Span(Class: text-muted h4){\r\n                    Div(pull-left){\r\n                        Span(Body: Business license)\r\n                    }.Show(\"FlagLicense=false\")\r\n                    Div(pull-left){\r\n                        Span(Body: License number Em(Class: fa fa-caret-down pl-sm))\r\n                    }.Show(\"FlagLicense=true\")\r\n                }\r\n                Span(Class: pull-right){\r\n                    Div(input-group){\r\n                        Span(Class: h4 mr text-muted, Body: License)\r\n                        Div(input-group-btn){\r\n                            If(#request_license_number#){\r\n                                Input(Name: FlagLicense, Type: \"checkbox\", Value: \"true\", Class: m0)\r\n                            }.Else{\r\n                                Input(Name: FlagLicense, Type: \"checkbox\", Value: \"false\", Class: m0)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                If(#request_license_number#){\r\n                    Input(Name: LicenseNumber, Class: stl-input mt-sm, Value: #request_license_number#)\r\n                }.Else{\r\n                    Input(Name: LicenseNumber, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Licensing authority Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_authority#){\r\n                    Input(Name: LicenseAuthority, Class: stl-input mt-sm, Value: #request_license_authority#) \r\n                }.Else{\r\n                    Input(Name: LicenseAuthority, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: License activity Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_activity#){\r\n                    Input(Name: LicenseActivity, Class: stl-input mt-sm, Value: #request_license_activity#)\r\n                }.Else{\r\n                    Input(Name: LicenseActivity, Class: stl-input mt-sm)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Issue date Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_issue_date#){\r\n                    SetVar(issue_dt, DateTime(DateTime: #request_license_issue_date#, Format: \"YYYY-MM-DD\"))\r\n                    Input(Name: LicenseIssueDate, Class: stl-input mt-sm, Type: date, Value: #issue_dt#)\r\n                }.Else{\r\n                    Input(Name: LicenseIssueDate, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Valid until Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_license_valid_until#){\r\n                    SetVar(valid_dt, DateTime(DateTime: #request_license_valid_until#, Format: \"YYYY-MM-DD\"))\r\n                    Input(Name: LicenseValidUntil, Class: stl-input mt-sm, Type: date, Value: #valid_dt#)\r\n                }.Else{\r\n                    Input(Name: LicenseValidUntil, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }.Show(\"FlagLicense=true\")\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Finish\", Contract: CompanyEdit, Params: \"Step=5\", Page: shareholder_register)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=5\", Page: co_view, PageParams: \"company_id=#company_id#\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_name",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        If(#fnew# == 1){\n        }.Else{\n            DBFind(companies_list).Where({\"id\": #company_id#}).Vars(request)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\n                If(#request_name#){\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #request_name#)\n                }.Else{\n                    Input(Name: Name, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Trader name Em(Class: fa fa-caret-down pl-sm))\n                If(#request_trader_name#){\n                    Input(Name: TraderName, Class: stl-input mt-sm, Value: #request_trader_name#)\n                }.Else{\n                    Input(Name: TraderName, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt-lg){\n                If(#fnew# == 1){\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Start\", Contract: CompanyEdit, Params: \"Step=1\", Page: co_edit_legform, PageParams: \"fnew=1,name=Val(Name)\").Popup(45, \"APLA ™\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_register)\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                        Span(Class: text-muted mr-lg h4, Body: Step)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                    }\n                }.Else{\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=1\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_edit_registration",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        If(#fnew# == 1){\n            DBFind(companies_list).Where({\"name\": \"#name#\"}).Columns(\"id\").Vars(company)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }.Else{\n            DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"registration->number,registration->authority,registration->date,registration->duration\").Vars(request)\n            Input(Name: Id, Type: hidden, Value: #company_id#)\n        }\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: Company Registration Details) \n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Registration number Em(Class: fa fa-caret-down pl-sm))\n                If(#request_registration_number#){\n                    Input(Name: RegistrationNumber, Class: stl-input mt-sm, Value: #request_registration_number#)\n                }.Else{\n                    Input(Name: RegistrationNumber, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Registration authority Em(Class: fa fa-caret-down pl-sm))\n                If(#request_registration_authority#){\n                    Input(Name: RegistrationAuthority, Class: stl-input mt-sm, Value: #request_registration_authority#)\n                }.Else{\n                    Input(Name: RegistrationAuthority, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Registration date Em(Class: fa fa-caret-down pl-sm))\n                    If(#request_registration_date#){\n                        SetVar(reg_dt, DateTime(DateTime: #request_registration_date#, Format: \"YYYY-MM-DD\"))\n                        Input(Name: RegistrationDate, Class: stl-input mt-sm, Type: date, Value: #reg_dt#)\n                    }.Else{\n                        Input(Name: RegistrationDate, Class: stl-input mt-sm, Type: date)\n                    }\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Span(Class: text-muted h4){\n                    Div(pull-left){\n                        Span(Body: Duration until)\n                    }.Show(\"FlagUnlimited=true\")\n                    Div(pull-left){\n                        Span(Body: Duration until)\n                        Em(Class: fa fa-caret-down pl)\n                    }.Show(\"FlagUnlimited=false\")\n                }\n                Span(Class: pull-right){\n                    Div(input-group){\n                        Span(Class: h4 mr text-muted, Body: Unlimited)\n                        Div(input-group-btn){\n                            If(#request_registration_duration# > 0){\n                                Input(Name: FlagUnlimited, Type: \"checkbox\", Value: \"false\", Class: m0)\n                            }.Else{\n                                Input(Name: FlagUnlimited, Type: \"checkbox\", Value: \"true\", Class: m0)\n                            }\n                        }\n                    }\n                }\n            }\n            Div(col-md-12 mt-sm){\n                If(#request_registration_duration#){\n                    SetVar(reg_dur, DateTime(DateTime: #request_registration_duration#, Format: \"YYYY-MM-DD\"))\n                    Input(Name: RegistrationDuration, Class: stl-input, Type: date, Value: #reg_dur#)\n                }.Else{\n                    Input(Name: RegistrationDuration, Class: stl-input, Type: date)\n                } \n            }.Show(\"FlagUnlimited=false\")\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                If(#fnew# == 1){\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: CompanyEdit, Params: \"Step=4\", Page: co_edit_license, PageParams: \"fnew=1,name=#name#\").Popup(45, \"APLA ™\")\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                        Span(Class: text-muted mr-lg h4, Body: Step)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                    }\n                }.Else{\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompanyEdit, Params: \"Step=4\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_view, PageParams: \"company_id=#company_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_roles_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(where, {\"company_id\": #company_id#})\n}.ElseIf(#filter_role_type#==4){\n    SetVar(where, {\"company_id\": #company_id#})\n}.ElseIf(#filter_role_type#==5){\n    SetVar(where, {\"company_id\": #company_id#, \"id\": #role_id#})\n}.ElseIf(#filter_role_type#==6){\n    SetVar(where, {\"company_id\": #company_id#})\n}.ElseIf(#filter_role_type#==7){\n    SetVar(where, {\"company_id\": #company_id#})\n}.Else{\n    SetVar(where, {\"id\": \"0\"})\n}\n\nDBFind(@1applications).Where({\"name\": \"Companies Registry\", \"ecosystem\": #ecosystem_id#}).Columns(\"name,id\").Vars(application)\nDBFind(\"companies_list\").Where({\"id\": #company_id#}).Columns(\"id,name\").Vars(view)\n\nDBFind(roles, src).Columns(\"id,role_name,date_created,role_type\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_name){ \n    Div(txt-nowrap){\n        Span(Class: txt-table-hl, Body: ROLE:)\n    }\n    Div(h4 text-bold pr-sm){\n        Div(ml mt-lg mb){\n            LinkPage(Class: preview-nowrap text-primary h5 text-bold, Page: co_roles_participants, PageParams: \"r_id=#id#,company_id=#company_id#\"){\n                Div(Class: text-primary){\n                    Span(Em(Class: mr fa icon-settings fa-3x))\n                }.Style(\n                    display: inline-block;\n                )\n                Span(Class: btn-link text-bold pb-sm){\n                    Span(Class: text-primary h3 text-bold, Body: #role_name#)\n                }.Style(\n                    display: inline-block;\n                    vertical-align: top;\n                    padding-top: 7px;\n                    padding-left: 4px;\n                )\n            }\n        }.Style(display:flex; align-items:center;)\n    }\n}.Custom(custom_info){\n    Div(txt-nowrap){\n        Span(Class: txt-table-hl, Body: INFORMATION:)\n    }\n    P(Class: txt-hidden p-20, Body: Type: AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #role_type#))\n    P(Class: txt-hidden p-00, Body: Owner: #view_name#)\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\n}.Count(count)\n\nForm(stl-form){\n    Div(row){\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\n            Span(Class: txt-hl-main ml-lg){\n                Register of Shareholders\n            }\n        }\n        Div(row){\n            Div(col-md-12){\n                Div(panel panel-primary form-min-width){\n                    Div(panel-body){\n                        Div(bb pb){\n                            LinkPage(Page: shareholder_register){\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: List of Companies)\n                            }\n                            Em(Class: fa fa-chevron-right ml mr)\n                            LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\n                                Span(Class: txt-hl-navigation-blue, Body: Company Details)\n                            }\n                            Em(Class: fa fa-chevron-right ml mr)\n                            Span(Class: txt-hl-navigation, Body: Roles)\n                        }\n                        Div(table-responsive){\n                            Div(table-noheader){\n                                Table(Source: src, Columns: \"=custom_name,=custom_info\").Style(\n                                    tbody > tr > td {\n                                        height: 140px;\n                                    }\n                                )\n                            }\n                            If(#count# == 0){\n                                Div(Class: text-center txt-absent, Body: Information is absent)\n                            }\n                        }.Style(\n                            height: 650px;\n                        )\n                    }\n                }              \n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_roles_participants",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\n\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(where, {\"role->id\": #r_id#, \"deleted\": 0})\n}.ElseIf(#filter_role_type#==4){\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"deleted\": 0})\n}.ElseIf(#filter_role_type#==5){\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"member->member_id\": #key_id#, \"deleted\": 0})\n}.ElseIf(#filter_role_type#==6){\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"deleted\": 0})\n}.ElseIf(#filter_role_type#==7){\n    SetVar(where, {\"role->id\": #r_id#, \"role->company_id\": #filter_role_company_id#, \"deleted\": 0})\n}.Else{\n    SetVar(where, {\"id\": \"0\"})\n}\n\nDBFind(@1roles).Columns(\"role_name\").Where({\"id\": #r_id#}).Vars(r)\n\nIf(#r_role_name# != \"\"){\n    DBFind(@1roles_participants, src).Columns(\"id,member->member_id,member->member_name,member->image_id,appointed->member_id,appointed->member_name,appointed->voting_id,appointed->voting_name,date_created,date_deleted,deleted\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_id){\n        Div(txt-nowrap){\n            DBFind(@1members).Where({\"id\": #member.member_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\n            If(#m_member_info_is_company# == \"true\"){\n                Span(Class: txt-table-hl, Body: COMPANY:)\n            }.Else{\n                Span(Class: txt-table-hl, Body: MEMBER:)\n            }\n        }\n        Div(h4 text-bold pr-sm){\n            Div(ml mt-lg mb){\n                If(#m_image_id#>0){\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\n                }.Else{\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\n                }\n                Span(){\n                    Div(Class: h4 m0 text-bold preview-nowrap, Body: #m_member_name#)\n                    \n                    If(#m_member_info_is_company# == \"true\"){\n                        If(#m_member_info_company_name# != NULL){\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\n                        }\n                        If(#m_member_info_company_address# != NULL){\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\n                        }\n                    }.Else{\n                        If(#m_member_info_personal_name# != NULL){\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\n                        }\n                        If(#m_member_info_personal_address# != NULL){\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\n                        }\n                    }\n                }\n            }.Style(display:flex; align-items:center;)\n        }.Style(\n            .fsize {\n                padding-top: 4px;\n                font-size: 15px;\n            }\n        )\n    }.Custom(custom_info){\n        Div(txt-nowrap){\n            Span(Class: txt-table-hl, Body: INFORMATION:)\n        }\n        P(Class: txt-hidden p-20, Body: Status: Active)\n        P(Class: txt-hidden p-00, Body: Appointed: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\n    }.Custom(actions){\n        If(#junior_access_id# > 0){\n            Button(Class: btn-xs btn-link pull-right mt, Page: co_roles_participants, PageParams: \"company_id=#company_id#,r_id=#r_id#\", Contract: RolesUnassign, Params: \"RowId=#id#\"){\n                Div(mt-xl){\n                    Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\n                }.Style(\n                    display: inline-block;\n                )\n            }.Alert(Text: \"Do you really want to delete this member?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\n        }\n    }.Count(count)\n}\n\nForm(stl-form){\n    Div(row){\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\n            Span(Class: txt-hl-main ml-lg){\n                Register of Shareholders\n            }\n            If(#junior_access_id# > 0){\n                Div(pull-right pt pr-lg){\n                    Button(Class: btn-xs btn-link pull-right, Page: roles_participants_select, PageParams: \"fnew=1,company_id=#company_id#,p1=#r_id#,back_page=co_roles_participants\"){\n                        Span(Class: icon-plus fa-2x)\n                    }.Popup(45, \"APLA ™\")\n                }\n            }\n        }\n        Div(row){\n            Div(col-md-12){\n                Div(panel panel-primary form-min-width){\n                    Div(panel-body){\n                        Div(bb pb){\n                            LinkPage(Page: shareholder_register){\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: List of Companies)\n                            }\n                            Em(Class: fa fa-chevron-right ml mr)\n                            LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\n                                Span(Class: txt-hl-navigation-blue, Body: Company Details)\n                            }\n                            Em(Class: fa fa-chevron-right ml mr)\n                            LinkPage(Page: co_roles_list, PageParams: \"company_id=#company_id#\"){\n                                Span(Class: txt-hl-navigation-blue, Body: Roles)\n                            }\n                            Em(Class: fa fa-chevron-right ml mr)\n                            Span(Class: txt-hl-navigation, Body: #r_role_name#)\n                        }\n                        Div(table-responsive){\n                            Div(table-noheader){\n                                Table(Source: src, Columns: \"=custom_id,=custom_info,=actions\").Style(\n                                    tbody > tr > td {\n                                        height: 140px;\n                                    }\n                                )\n                            }\n                            If(#count# == 0){\n                                Div(Class: text-center txt-absent, Body: Information is absent)\n                            }\n                        }.Style(\n                            height: 650px;\n                        )\n                    }\n                }              \n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_details",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nDBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        If(#fnew# == 1){\n            DBFind(companies_securities).Where({\"company_id\": #company_id#, \"owner\": #owner#}).Vars(securities)\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\n        }.Else{\n            DBFind(companies_securities).Where({\"id\": #securities_id#}).Columns(\"details->type,details->other,details->nominal\").Vars(request)\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\n        }\n        \n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: Security Details) \n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Type of securities Em(Class: fa fa-caret-down pl-sm))\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: companies_security_type, Source: src_security_type)\n                Div(mt h4){\n                    If(#request_details_type#){\n                        RadioGroup(Name: SecType, Source: src_security_type, NameColumn: name, ValueColumn: name, Value: #request_details_type#)\n                    }.Else{\n                        RadioGroup(Name: SecType, Source: src_security_type, NameColumn: name, ValueColumn: name)\n                    }\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Nominal value Em(Class: fa fa-caret-down pl-sm))\n                If(#request_details_nominal#){\n                    Input(Name: Nominal, Class: stl-input mt-sm, Value: #request_details_nominal#)\n                }.Else{\n                    Input(Name: Nominal, Class: stl-input mt-sm)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Other details Em(Class: fa fa-caret-down pl-sm))\n                If(#request_details_other#){\n                    Input(Name: Other, Class: style-textarea mt-sm, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 8em;)\n                }.Else{\n                    Input(Name: Other, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12 mt){\n                If(#fnew# == 1){\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Next\", Contract: SecuritiesEdit, Params: \"Step=2\", Page: co_se_edit_info, PageParams: \"fnew=1,company_id=#company_id#,securities_id=#securities_id#\").Popup(45, \"APLA ™\")\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                        Span(Class: text-muted mr-lg h4, Body: Step)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-circle-o mr-sm)\n                    }\n                }.Else{\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SecuritiesEdit, Params: \"Step=2\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_info",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        If(#fnew# == 1){\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\n        }.Else{\n            DBFind(companies_securities).Where({\"id\": #securities_id#}).Vars(request)\n            Input(Name: Id, Type: hidden, Value: #securities_id#)\n        }\n\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: Securities Information)\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Information Em(Class: fa fa-caret-down pl-sm))\n                If(#request_info#){\n                    Input(Name: Info, Class: style-textarea mt-sm, Type: textarea, Value: #request_info#).Style(resize: vertical; min-height: 8em;)\n                }.Else{\n                    Input(Name: Info, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\n                }\n            }\n        }\n        Div(row mt-lg popup-min-width){\n            Div(col-md-12 mt){\n                If(#fnew# == 1){\n                    Button(Class: btn btn-primary pull-right btn-blue, Contract: SecuritiesEdit, Params: \"Step=3\", Body: \"Distribute\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                        Span(Class: text-muted mr-lg h4, Body: Step)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                        Em(Class: fa fa-dot-circle-o mr-sm)\n                    }\n                }.Else{\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: SecuritiesEdit, Params: \"Step=3\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_number",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#fnew# == 1){\r\n            Input(Name: CompanyId, Type: hidden, Value: #company_id#)\r\n        }\r\n\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Transfer of Securities)\r\n            }\r\n        }\r\n        If(#fnew# == 1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Owner Em(Class: fa fa-caret-down pl-sm))\r\n                    If(#request_owner#){\r\n                        SetVar(OwnerId, #request_owner#)\r\n                    }.Else{\r\n                        SetVar(OwnerId, Address(#owner_id#))\r\n                    }\r\n                    Input(Name: Owner, Class: stl-input mt-sm, Disabled: true, Value: #OwnerId#)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#fnew# == 1){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Start\", Contract: SecuritiesEdit, Params: \"Step=1\", Page: co_se_edit_details, PageParams: \"fnew=1,company_id=#company_id#,owner=Val(Owner)\").Popup(45, \"APLA ™\")\r\n                    Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btnDefault, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_edit_owner",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nSetVar(this_page, co_se_edit_owner).(this_table, @1roles_participants).(pager_limit, 3)\nInclude(cr_pager_header)\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: New Owner of Securities) \n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Form(){\n                Div(Class: pl-lg mr-lg){\n                    Div(input-group){\n                        Div(input-group-addon){\n                            Account\n                        }.Style(\n                            && {\n                                width: 100px!important;\n                                border-radius: 6px;\n                                background-color: #fff;\n                                height: 40px!important;\n                                border: 1px solid #e0e0e0;\n                            }\n                        )\n                        Input(Name: search, Value: #search#, Class: input-search)\n                        Div(input-group-btn){\n                            If(#search#){\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"company_id=#company_id#\").Popup(45, \"APLA ™\")\n                            }\n                            Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),company_id=#company_id#\").Popup(45, \"APLA ™\")\n                        }\n                    }\n                }\n            }\n        }\n\n        If(#search#){\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"member->member_name\": #search#, \"deleted\": 0})\n        }.Else{\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"deleted\": 0})\n        }\n\n        DBFind(#this_table#, src).Columns(\"id,member->member_id,date_created,date_deleted,deleted\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\n            Button(Class: btn-xs btn-link pull-right, Page: co_se_edit_number, PageParams: \"company_id=#company_id#,owner_id=#member.member_id#,fnew=1\"){\n                Div(text-bold mt){\n                    Span(Class: h4, Body: Em(Class: icon-check fa-2x))\n                }.Style(\n                    display: inline-block;\n                )\n            }.Popup(45, \"APLA ™\")\n        }.Custom(custom_id){\n            Div(h4 text-bold ml){\n                Div(){\n                    DBFind(@1members).Where({\"id\": #member.member_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\n                    If(#m_image_id#>0){\n                        Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\n                    }.Else{\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\n                    }\n                    Span(){\n                        Div(Class: h4 m0 text-bold, Body: #m_member_name#)\n                        \n                        If(#m_member_info_is_company# == \"true\"){\n                            If(#m_member_info_company_name# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\n                            }\n                            If(#m_member_info_company_address# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\n                            }\n                        }.Else{\n                            If(#m_member_info_personal_name# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\n                            }\n                            If(#m_member_info_personal_address# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\n                            }\n                        }\n                    }\n                }.Style(display:flex; align-items:center;)\n            }.Style(\n                .fsize {\n                    padding-top: 4px;\n                    font-size: 15px;\n                }\n            )\n        }.Count(count)\n\n        Div(row popup-min-width){\n            Div(col-md-12){\n                Table(src, \"=custom_id,=check\")\n            }\n        }.Style(\n            min-height: 360px!important;\n            margin-top: -10px;\n            thead > tr > th {\n                border : none!important;\n            }\n            td {\n                border: none!important;\n            }\n        )\n    }\n\n    Div(row popup-min-width mt){\n        Div(col-md-12){\n            If(#filter_access# == 1){\n                Include(cr_pager)\n            }\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_list, PageParams: \"company_id=#company_id#\")\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_info",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\nIf(#order_id# > 0){\r\n    DBFind(\"@1companies_orders_securities\").WhereId(#order_id#).Vars(edit)\r\n    SetVar(prew_owner,#edit_previous_owner#)\r\n    SetVar(prew_owner_id,AddressToId(#edit_previous_owner#))\r\n    SetVar(new_owner,#edit_new_owner#)\r\n}.Else{\r\n    DBFind(\"@1buffer_data\",Source: src_mem).Columns(\"id,key,ecosystem,member_id,value,value->new_owner,value->previous_owner\").Where({\"key\":\"orders_info\",\"ecosystem\": #ecosystem_id#,\"member_id\":#key_id#}).Vars(owners)\r\n    SetVar(prew_owner,Address(#owners_value_previous_owner#))\r\n    SetVar(new_owner,Address(#owners_value_new_owner#))\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Input(Name: SecuritiesId, Type: hidden, Value: #securities_id#)\r\n\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Transfer the Shares)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Previous Owner Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: PreviousOwnerView, Class: stl-input mt-sm, Disabled: \"true\", Value: #prew_owner#)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Number of the Shares to be transferred  Em(Class: fa fa-caret-down pl-sm))\r\n                Div(input-group){\r\n                    If(#order_id# > 0){\r\n                        Input(Name: Amount, Class: styleInputRed mt-sm, Value: #edit_order_amount#)\r\n                    }.Else{\r\n                        Input(Name: Amount, Class: styleInputRed mt-sm)\r\n                    }\r\n                    Div(input-group-btn){\r\n                        Button(Class: btn btnOrderSell mt-sm, Body: Em(Class: fa fa-long-arrow-down) Sell)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: New Owner Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewOwnerView, Class: stl-input mt-sm, Disabled: \"true\", Value: #new_owner#)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Transaction date Em(Class: fa fa-caret-down pl-sm))\r\n                If(#order_id# > 0){\r\n                    SetVar(reg_dt, DateTime(DateTime: #edit_order_date#, Format: \"YYYY-MM-DD\"))\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date, Value: #reg_dt#)\r\n                }.Else{\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                If(#order_id# > 0){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Edit\", Contract: @1SecuritiesOrderTransferEdit,Params: \"OrderId=#order_id#,CompanyId=#company_id#\", Page: @1co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n                }.Else{\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Transfer\", Contract: @1SecuritiesOrderTransfer, Params: \"CompanyId=#company_id#,PreviousOwner=#owners_value_previous_owner#,NewOwner=#owners_value_new_owner#\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n                }\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .styleInputRed {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderSell {\r\n        background-color: #f05050;\r\n        color: #ffffff !important;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_new_owner",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#p1#){\r\n    SetVar(order_id, #p1#)\r\n}.Else{\r\n    SetVar(p1, #order_id#)\r\n}\r\n\r\nSetVar(this_page, co_se_order_edit_new_owner).(this_table, @1roles_participants).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Owner of Securities) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Form(){\r\n                Div(Class: pl-lg mr-lg){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            Account\r\n                        }.Style(\r\n                            && {\r\n                                width: 100px!important;\r\n                                border-radius: 6px;\r\n                                background-color: #fff;\r\n                                height: 40px!important;\r\n                                border: 1px solid #e0e0e0;\r\n                            }\r\n                        )\r\n                        Input(Name: search, Value: #search#, Class: input-search)\r\n                        Div(input-group-btn){\r\n                            If(#search#){\r\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                            Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        If(#search#){\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"member->member_name\": #search#, \"deleted\": 0})\r\n        }.Else{\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"deleted\": 0})\r\n        }\r\n\r\n        DBFind(#this_table#, src).Columns(\"id,member->member_id,date_created,date_deleted,deleted\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n            If(#order_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right,Contract: @1SecuritiesOrderTransferEdit,Params: \"NewOwner=#member.member_id#,OrderId=#order_id#,CompanyId=#company_id#\", Page: @1co_securities_orders_list, PageParams: \"company_id=#company_id#\"){\r\n                    Div(text-bold mt){\r\n                        Span(Class: h4, Body: Em(Class: icon-check fa-2x))\r\n                    }.Style(\r\n                        display: inline-block;\r\n                    )\r\n                }\r\n            }.Else{\r\n                Button(Class: btn-xs btn-link pull-right, Contract: @1BufferOrders, Params: \"NewOwner=#member.member_id#,CompanyId=#company_id#\", Page: co_se_order_edit_info, PageParams: \"company_id=#company_id#\"){\r\n                    Div(text-bold mt){\r\n                        Span(Class: h4, Body: Em(Class: icon-check fa-2x))\r\n                    }.Style(\r\n                        display: inline-block;\r\n                    )\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n        }.Custom(custom_id){\r\n            Div(h4 text-bold){\r\n                Div(){\r\n                    DBFind(@1members).Where({\"id\": #member.member_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                    }.Else{\r\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                    }\r\n                    Span(){\r\n                        Div(Class: h4 m0 text-bold, Body: #m_member_name#)\r\n                        \r\n                        If(#m_member_info_is_company# == \"true\"){\r\n                            If(#m_member_info_company_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                            }\r\n                            If(#m_member_info_company_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                            }\r\n                        }.Else{\r\n                            If(#m_member_info_personal_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                            }\r\n                            If(#m_member_info_personal_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(display:flex; align-items:center;)\r\n            }.Style(\r\n                .fsize {\r\n                    padding-top: 4px;\r\n                    font-size: 15px;\r\n                }\r\n            )\r\n        }.Count(count)\r\n\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                Table(src, \"=custom_id,=check\")\r\n            }\r\n        }.Style(\r\n            min-height: 360px!important;\r\n            margin-top: -10px;\r\n            thead > tr > th {\r\n                border : none!important;\r\n            }\r\n            td {\r\n                border: none!important;\r\n            }\r\n        )\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_previous_owner",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nIf(#p1#){\r\n    SetVar(order_id, #p1#)\r\n}.Else{\r\n    SetVar(p1, #order_id#)\r\n}\r\n\r\nSetVar(this_page, co_se_order_edit_previous_owner).(this_table, @1roles_participants).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Previous Owner of Securities) \r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Form(){\r\n                Div(Class: pl-lg mr-lg){\r\n                    Div(input-group){\r\n                        Div(input-group-addon){\r\n                            Account\r\n                        }.Style(\r\n                            && {\r\n                                width: 100px!important;\r\n                                border-radius: 6px;\r\n                                background-color: #fff;\r\n                                height: 40px!important;\r\n                                border: 1px solid #e0e0e0;\r\n                            }\r\n                        )\r\n                        Input(Name: search, Value: #search#, Class: input-search)\r\n                        Div(input-group-btn){\r\n                            If(#search#){\r\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                            }\r\n                            Button(Class: btn bg-gray-lighter fa fa-search mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        If(#search#){\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"member->member_name\": #search#, \"deleted\": 0})\r\n        }.Else{\r\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"role->company_id\": #company_id#, \"role->type\": 5, \"deleted\": 0})\r\n        }\r\n\r\n        DBFind(#this_table#, src).Columns(\"id,member->member_id,date_created,date_deleted,deleted\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\r\n            If(#order_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right,Contract: @1SecuritiesOrderTransferEdit,Params: \"PreviousOwner=#member.member_id#,OrderId=#order_id#,CompanyId=#company_id#\", Page: @1co_securities_orders_list, PageParams: \"company_id=#company_id#\"){\r\n                    Div(text-bold mt){\r\n                        Span(Class: h4, Body: Em(Class: icon-check fa-2x))\r\n                    }.Style(\r\n                        display: inline-block;\r\n                    )\r\n                }\r\n            }.Else{\r\n                Button(Class: btn-xs btn-link pull-right,Contract: @1BufferOrders,Params: \"PreviousOwner=#member.member_id#,CompanyId=#company_id#\", Page: co_se_order_edit_new_owner, PageParams: \"company_id=#company_id#\"){\r\n                    Div(text-bold mt){\r\n                        Span(Class: h4, Body: Em(Class: icon-check fa-2x))\r\n                    }.Style(\r\n                        display: inline-block;\r\n                    )\r\n                }.Popup(45, \"APLA ™\")\r\n            }\r\n        }.Custom(custom_id){\r\n            Div(h4 text-bold){\r\n                Div(){\r\n                    DBFind(@1members).Where({\"id\": #member.member_id#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                    }.Else{\r\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                    }\r\n                    Span(){\r\n                        Div(Class: h4 m0 text-bold, Body: #m_member_name#)\r\n                        \r\n                        If(#m_member_info_is_company# == \"true\"){\r\n                            If(#m_member_info_company_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                            }\r\n                            If(#m_member_info_company_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                            }\r\n                        }.Else{\r\n                            If(#m_member_info_personal_name# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                            }\r\n                            If(#m_member_info_personal_address# != NULL){\r\n                                Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(display:flex; align-items:center;)\r\n            }.Style(\r\n                .fsize {\r\n                    padding-top: 4px;\r\n                    font-size: 15px;\r\n                }\r\n            )\r\n        }.Count(count)\r\n\r\n        Div(row popup-min-width){\r\n            Div(col-md-12){\r\n                Table(src, \"=custom_id,=check\")\r\n            }\r\n        }.Style(\r\n            min-height: 360px!important;\r\n            margin-top: -10px;\r\n            thead > tr > th {\r\n                border : none!important;\r\n            }\r\n            td {\r\n                border: none!important;\r\n            }\r\n        )\r\n    }\r\n\r\n    Div(row popup-min-width mt){\r\n        Div(col-md-12){\r\n            If(#filter_access# == 1){\r\n                Include(cr_pager)\r\n            }\r\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_edit_upload_doc",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(@1applications).Columns(\"name,id\").Where({\"ecosystem\": 1, \"name\": \"Companies Registry\"}).Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Enclose a copy of the transaction ) \r\n            }\r\n        }\r\n        If(#upload#==1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(@1buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": 1, \"key\": \"order_doc\", \"member_id\": #key_id#}).Vars(buffer)\r\n                    DBFind(@1binaries).Columns(\"name\").Where({\"id\": #buffer_value_binary_id#}).Vars(binaries)\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #binaries_name#, Disabled: \"true\")\r\n                }\r\n            }\r\n        }.Else{\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Input(Name: FileData, Type: file)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#upload#==1){\r\n                    Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: @1SecuritiesOrderTransferEdit, Params: \"OrderId=#order_id#,DOCBinaryId=#buffer_value_binary_id#\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: @1BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=order_doc\", Page: co_se_order_edit_upload_doc, PageParams: \"upload=1,company_id=#company_id#,order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_sign",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "If(#notific_id# > 0){\r\n    DBFind(\"@1notifications\").Columns(\"id,page_params,page_params->order_id,page_params->step,closed\").WhereId(#notific_id#).Vars(notific)\r\n    SetVar(order_id,#notific_page_params_order_id#)\r\n}\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(Or(#filter_role_type# == 3,#filter_role_type# == 4)){\r\n    SetVar(where, {\"id\": #order_id#})\r\n}.Else{\r\n    SetVar(where, {\"id\": #order_id#, \"$or\":[\"new_owner\": Address(#key_id#),\"previous_owner\": Address(#key_id#)]})\r\n}\r\nDBFind(@1companies_orders_securities).Columns(\"id,company_id,date_created,order_amount,order_date,file_id,previous_owner,new_owner,approval_flags,security_id,status,order_signs,order_signs->previous_owner_sign,order_signs->previous_owner_sign_time,order_signs->new_owner_sign,order_signs->new_owner_sign_time,order_signs->issuer_sign,order_signs->issuer_sign_time,order_signs->reject_step,order_signs->comments\").Where(#where#).Vars(order)\r\n\r\nSetVar(prev_owner_id, AddressToId(#order_previous_owner#))\r\nSetVar(new_owner_id, AddressToId(#order_new_owner#))\r\nDBFind(@1members).Where({\"id\": #prev_owner_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(view_prev)\r\nDBFind(@1members).Where({\"id\": #new_owner_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(view_new)\r\n\r\nForm(){\r\n    Div(row){\r\n        Div(pt-lg col-xs-10 col-xs-offset-1 text-center){\r\n            Div(panel panel-primary panelForm text-center){\r\n                Span(Class: h1 text-bold text-black){\r\n                    Register of Shareholders\r\n                }\r\n            }.Style(\r\n                background-color:transparent!important;\r\n                border-color:transparent!important;\r\n            )\r\n        }\r\n        Div(row){\r\n            Div(col-xs-10 col-xs-offset-1 text-center){\r\n                Div(panel panel-primary panelForm){\r\n                    Div(panel-body m0){\r\n                        Div(bb pb){\r\n                            Div(pl-lg pb pt-sm text-center preview-nowrap){\r\n                                Span(Class: h2 text-bold text-black, Body: Transaction Information)\r\n                            }\r\n                        }\r\n                        Div(mt-sm){\r\n                            Div(){\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Amount))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: #order_order_amount#)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Div(Class: text-black h4 m0 text-right, Body: Strong(Order Date))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: DateTime(DateTime: #order_order_date#, Format: DD.MM.YYYY))\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Created))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: DateTime(DateTime: #order_date_created#, Format: HH:MI DD.MM.YYYY))\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Type))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            Span(Class: text-black h4, Body: Transaction)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                Div(row){\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-right){\r\n                                            Span(Class: text-black h4, Body: Strong(Status))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-2 text-center){\r\n                                        Div(mt){\r\n                                            Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                        }\r\n                                    }\r\n                                    Div(col-xs-5){\r\n                                        Div(mt pull-left){\r\n                                            If(#order_status# == -1){\r\n                                                If(#order_order_signs_reject_step# == 1){\r\n                                                    Span(Class: h4 text-danger, Body: Rejected by Previous Owner)\r\n                                                }.ElseIf(#order_order_signs_reject_step# == 2){\r\n                                                    Span(Class: h4 text-danger, Body: Rejected by New Owner)\r\n                                                }.Else{\r\n                                                    Span(Class: h4 text-danger, Body: Rejected by the Issuer Company)\r\n                                                }\r\n                                            }.Else{\r\n                                                If(#order_status# == 0){\r\n                                                    Span(Class: h4 text-warning, Body: Pending)\r\n                                                }.ElseIf(#order_status# == 1){\r\n                                                    Span(Class: h4 text-primary, Body: Sign by the owners)\r\n                                                }.ElseIf(#order_status# == 2){\r\n                                                    Span(Class: h4 text-primary, Body: Sign by the Issuer Company)\r\n                                                }.Else{\r\n                                                    Span(Class: h4 text-success, Body: Done)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                If(#order_status# == -1){\r\n                                    Div(row){\r\n                                        Div(col-xs-5){\r\n                                            Div(mt pull-right){\r\n                                                Span(Class: text-black h4, Body: Strong(Rejection Reason))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-2 text-center){\r\n                                            Div(mt){\r\n                                                Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-5){\r\n                                            Div(mt pull-left){\r\n                                                Span(Class: text-black h4, Body: #order_order_signs_comments#)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                If(#order_file_id# > 0){\r\n                                    Div(row){\r\n                                        Div(col-xs-5){\r\n                                            Div(mt-lg pull-right){\r\n                                                Span(Class: text-black h4, Body: Strong(Documents))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-2 text-center){\r\n                                            Div(mt-lg){\r\n                                                Span(Class: text-black h4, Body: Em(Class: fa fa-caret-right))\r\n                                            }\r\n                                        }\r\n                                        Div(col-xs-5 preview-nowrap){\r\n                                            Div(pull-left){\r\n                                                DBFind(binaries, src_binaries).Where({\"id\": #order_file_id#})\r\n                                                Table(src_binaries, \"=data\").Style(\r\n                                                    thead {\r\n                                                        background-color: #ffffff;\r\n                                                    }\r\n                                                    tbody {\r\n                                                        background-color: #ffffff;\r\n                                                    }\r\n                                                    tbody > tr > td  {\r\n                                                        border: 1px solid #eeeeee;\r\n                                                    }\r\n                                                    width: 10px!important;\r\n                                                )\r\n                                            }.Style(margin-top:-20px;)\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                Div(row pt-xl mb-lg){\r\n                                    Div(col-xs-1)\r\n                                    Div(col-xs-10 text-center){\r\n                                        Div(Class: col-xs-6 list-group-item preview-nowrap){\r\n                                            Div(row ml-xl){\r\n                                                P(Class: text-muted, Body: PREVIOUS OWNER Em(Class: fa fa-caret-down faSize16 pl-sm))\r\n                                                Div(col-xs-2 mt-sm mr-lg){\r\n                                                    If(#view_prev_image_id#>0){\r\n                                                        Image(Src: Binary().ById(#view_prev_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                                                    }.Else{\r\n                                                        Span(Em(Class: text-muted mr fa icon-user fa-4x)).Style(margin-right:12px;)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-9 mt-sm text-left mb-sm){\r\n                                                    If(#view_prev_member_name# != \"\"){\r\n                                                        Span(Class: h4 m0 text-bold, Body: #view_prev_member_name#)\r\n                                                    }\r\n                                                    If(#view_prev_member_info_is_company# == \"true\"){\r\n                                                        If(#view_prev_member_info_company_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_company_name#)\r\n                                                        }\r\n                                                        If(#view_prev_member_info_company_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_company_address#)\r\n                                                        }\r\n                                                    }.Else{\r\n                                                        If(#view_prev_member_info_personal_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_personal_name#)\r\n                                                        }\r\n                                                        If(#view_prev_member_info_personal_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_prev_member_info_personal_address#)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }.Style(\r\n                                            min-height: 150px!important;\r\n                                            min-width: 380px;\r\n                                            margin-top: 2px;\r\n                                        )\r\n                                        Div(Class: col-xs-6 list-group-item preview-nowrap){\r\n                                            Div(row ml-xl){\r\n                                                P(Class: ml-lg text-muted, Body: NEW OWNER Em(Class: fa fa-caret-down faSize16 pl-sm))\r\n                                                Div(col-xs-2 mt-sm mr-lg){\r\n                                                    If(#view_new_image_id#>0){\r\n                                                        Image(Src: Binary().ById(#view_new_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                                                    }.Else{\r\n                                                        Span(Em(Class: text-muted mr fa icon-user fa-4x)).Style(margin-right:12px;)\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-9 mt-sm text-left mb-sm){\r\n                                                    If(#view_new_member_name# != \"\"){\r\n                                                        Span(Class: h4 m0 text-bold, Body: #view_new_member_name#)\r\n                                                    }\r\n                                                    If(#view_new_member_info_is_company# == \"true\"){\r\n                                                        If(#view_new_member_info_company_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_company_name#)\r\n                                                        }\r\n                                                        If(#view_new_member_info_company_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_company_address#)\r\n                                                        }\r\n                                                    }.Else{\r\n                                                        If(#view_new_member_info_personal_name# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_personal_name#)\r\n                                                        }\r\n                                                        If(#view_new_member_info_personal_address# != NULL){\r\n                                                            Div(Class: h4 m0 text-muted fsize, Body: #view_new_member_info_personal_address#)\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }.Style(\r\n                                            min-height: 150px!important;\r\n                                            min-width: 380px;\r\n                                            margin-top: 2px;\r\n                                        )\r\n                                    }\r\n                                    Div(col-xs-1)\r\n                                }\r\n\r\n                                If(#order_order_signs_previous_owner_sign# != \"\"){\r\n                                    Div(row preview){\r\n                                        Div(row){\r\n                                            Div(col-xs-5){\r\n                                                Div(mt-lg pull-right){\r\n                                                    Span(Class: text-black h4, Body: Strong(Signature of the previous owner))\r\n                                                }\r\n                                            }\r\n                                            Div(col-xs-1 text-center)\r\n                                            Div(col-xs-6){\r\n                                                Div(mt-lg pull-left){\r\n                                                    Span(Class: text-black h5 ml-lg, Body: #order_order_signs_previous_owner_sign#)\r\n                                                    P(Class: h5 m0, Body: Date: DateTime(DateTime: #order_order_signs_previous_owner_sign_time#, Format: HH:MI DD.MM.YYYY))\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    If(#order_order_signs_new_owner_sign# != \"\"){\r\n                                        Div(row preview){\r\n                                            Div(row){\r\n                                                Div(col-xs-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Signature of the new owner))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-1 text-center)\r\n                                                Div(col-xs-6){\r\n                                                    Div(mt-lg pull-left){\r\n                                                        Span(Class: text-black h5 ml-lg, Body: #order_order_signs_new_owner_sign#)\r\n                                                        P(Class: h5 m0, Body: Date: DateTime(DateTime: #order_order_signs_new_owner_sign_time#, Format: HH:MI DD.MM.YYYY))\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    If(#order_order_signs_issuer_sign# != \"\"){\r\n                                        Div(row preview){\r\n                                            Div(row){\r\n                                                Div(col-xs-5){\r\n                                                    Div(mt-lg pull-right){\r\n                                                        Span(Class: text-black h4, Body: Strong(Signature of the company))\r\n                                                    }\r\n                                                }\r\n                                                Div(col-xs-1 text-center)\r\n                                                Div(col-xs-6){\r\n                                                    Div(mt-lg pull-left){\r\n                                                        Span(Class: text-black h5 ml-lg, Body: #order_order_signs_issuer_sign#)\r\n                                                        P(Class: h5 m0, Body: Date: DateTime(DateTime: #order_order_signs_issuer_sign_time#, Format: HH:MI DD.MM.YYYY))\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.Style(align-items:center;)\r\n                        If(And(#order_order_signs_previous_owner_sign# == \"\",#order_status# > 0)){\r\n                            If(And(#key_id# == #prev_owner_id#,#filter_role_type# == 5)){\r\n                                Div(mt-lg bb)\r\n                                Div(pb pt-lg){\r\n                                    Div(row pt){\r\n                                        Div(col-xs-2)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btnReject text-bold, Body: Reject, Page: @1co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                        }\r\n                                        Div(col-xs-4)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btnAccept text-bold, Body: Accept, Page: @1co_se_order_sign, Contract: @1SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                        }\r\n                                        Div(col-xs-2)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.ElseIf(And(#order_order_signs_previous_owner_sign# != \"\",#order_order_signs_new_owner_sign# == \"\",#order_status# > 0)){\r\n                            If(And(#key_id# == #new_owner_id#,#filter_role_type# == 5)){\r\n                                Div(mt-lg bb)\r\n                                Div(pb pt-lg){\r\n                                    Div(row pt){\r\n                                        Div(col-xs-2)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btnReject text-bold, Body: Reject, Page: @1co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                        }\r\n                                        Div(col-xs-4)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btnAccept text-bold, Body: Accept, Page: @1co_se_order_sign, Contract: @1SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                        }\r\n                                        Div(col-xs-2)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.ElseIf(And(#order_order_signs_previous_owner_sign# != \"\",#order_order_signs_new_owner_sign# != \"\",#order_order_signs_issuer_sign# == \"\",#order_status# > 0)){\r\n                            DBFind(\"@1roles_participants\").Columns(\"id,role,role->company_id,role->type,ecosystem,role->id,member->member_id,deleted\").Where({\"role->company_id\":#order_company_id#, \"ecosystem\": #ecosystem_id#, \"role->type\": 4, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter_access)\r\n                            If(#filter_access_id# > 0){\r\n                                Div(mt-lg bb)\r\n                                Div(pb pt-lg){\r\n                                    Div(row pt){\r\n                                        Div(col-xs-2)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btnReject text-bold, Body: Reject, Page: @1co_se_order_sign_reject, PageParams: \"order_id=#order_id#\").Popup(45, \"APLA ™\")\r\n                                        }\r\n                                        Div(col-xs-4)\r\n                                        Div(col-xs-2 text-center){\r\n                                            Button(Class: btn btnAccept text-bold, Body: Accept, Page: @1co_se_order_sign, Contract: @1SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=accept\",PageParams: \"order_id=#order_id#\")\r\n                                        }\r\n                                        Div(col-xs-2)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .text-black {\r\n        color: #222f3e;\r\n    }\r\n    .text-green {\r\n        color: #27c24c;\r\n    }\r\n    .text-red {\r\n        color: #f05050;\r\n    }\r\n    .minCol {\r\n        width: 300px!important;\r\n    }\r\n    .panelForm {\r\n        min-width: 800px!important;\r\n    }\r\n    .preview {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: normal;\r\n    }\r\n    .preview-nowrap {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n    .btnAccept {\r\n        background-color: #27c24c;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 2px solid;\r\n        border-color: #22ac43 !important;\r\n    }\r\n    .btnReject {\r\n        background-color: #f05050;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 2px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnAccept:hover {\r\n        border-color: #1c8c36 !important;\r\n    }\r\n    .btnReject:hover {\r\n        border-color: #a61717 !important;\r\n    }\r\n)\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_se_order_sign_reject",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "If(#order_id# > 0){\r\n    Form(ml-lg mr-lg){\r\n        Div(row mt minForm){\r\n            Div(col-md-12){\r\n                Span(Class: h2 text-bold text-black, Body: Specify a Reason for the Rejection)\r\n            }\r\n        }\r\n        Div(row mt-lg minForm){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Comments Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_order_comments#){\r\n                    Input(Name: Comments, Class: styleInputTextArea mt-sm, Type: textarea, Value: #request_order_comments#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Comments, Class: styleInputTextArea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl minForm){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-primary pull-right btnPrimary, Body: \"Reject\", Contract: @1SecuritiesOrderSign, Params: \"OrderId=#order_id#,Action=reject\", Page: @1co_se_order_sign,PageParams: \"order_id=#order_id#\")\r\n                Button(Class: btn btn-default pull-right btnDefault mr-sm, Body: \"Back\", Page: co_se_order_sign, PageParams: \"order_id=#order_id#\")\r\n            }\r\n        }\r\n    }.Style(\r\n        .text-black {\r\n            color: #222f3e;\r\n        }\r\n        .styleInputTextArea {\r\n            font-size: 16px;\r\n            background-color: #fff;\r\n            padding: 6px 20px; 6px; 20px;\r\n            border: 2px solid rgba(0, 0, 0, 0.12);\r\n            border-radius: 6px;\r\n        }\r\n        .btnPrimary {\r\n            height: 36px;\r\n            width: 100px!important;\r\n            border-radius: 6px;\r\n            border: 2px solid #5c9ae9;\r\n        }\r\n        .btnDefault {\r\n            height: 36px;\r\n            width: 100px!important;\r\n            border-radius: 6px;\r\n            border: 2px solid #777777;\r\n        }\r\n        .minForm {\r\n            min-width: 400px!important;\r\n        }\r\n    )\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_history_edit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        If(#history_id# > 0){\r\n            DBFind(companies_securities_history).Where({\"id\": #history_id#}).Columns(\"id,order_date,order_type,order_comments,order_amount\").Vars(request)\r\n            If(And(#type#!=sell,#type#!=buy)){\r\n                If(#request_order_type# == 1){\r\n                    SetVar(type, buy)\r\n                }.Else{\r\n                    SetVar(type, sell)\r\n                }\r\n            }\r\n            Input(Name: Id, Type: hidden, Value: #history_id#)\r\n        }.Else{\r\n            If(And(#type#!=sell,#type#!=buy)){\r\n                SetVar(type, buy)\r\n            }\r\n            Input(Name: SecuritiesId, Type: hidden, Value: #securities_id#)\r\n        }\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                If(#history_id# > 0){\r\n                    If(#type#==sell){\r\n                        Span(Class: h2 text-bold text-black, Body: Edit historical Sale)\r\n                    }\r\n                    If(#type#==buy){\r\n                        Span(Class: h2 text-bold text-black, Body: Edit historical Purchase)\r\n                    }\r\n                }.Else{\r\n                    If(#type#==sell){\r\n                        Span(Class: h2 text-bold text-black, Body: Add historical Sale)\r\n                    }\r\n                    If(#type#==buy){\r\n                        Span(Class: h2 text-bold text-black, Body: Add historical Purchase)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Number Em(Class: fa fa-caret-down pl-sm))\r\n                Div(input-group mt-sm){\r\n                    If(#type#==sell){\r\n                        If(#request_order_amount#){\r\n                            Input(Name: Amount, Class: styleInputRed, Type:number, Value: #request_order_amount#)\r\n                        }.Else{\r\n                            Input(Name: Amount, Class: styleInputRed, Type:number)\r\n                        }\r\n                        Div(input-group-btn){\r\n                            Button(Class: btn btnOrderSell, Body: Em(Class: fa fa-long-arrow-down) Sell)\r\n                            Button(Class: btn btnOrderDefaultRed, Body: Em(Class: fa fa-long-arrow-up) Buy, Page: co_securities_history_edit, PageParams: \"type=buy,company_id=#company_id#,securities_id=#securities_id#,history_id=#history_id#\").Popup(45, \"APLA ™\")\r\n                        }\r\n                    }\r\n                    If(#type#==buy){\r\n                        If(#request_order_amount#){\r\n                            Input(Name: Amount, Class: styleInputGreen, Type:number, Value: #request_order_amount#)\r\n                        }.Else{\r\n                            Input(Name: Amount, Class: styleInputGreen, Type:number)\r\n                        }\r\n                        Div(input-group-btn){\r\n                            Button(Class: btn btnOrderDefaultGreen, Body: Em(Class: fa fa-long-arrow-down) Sell, Page: co_securities_history_edit, PageParams: \"type=sell,company_id=#company_id#,securities_id=#securities_id#,history_id=#history_id#\").Popup(45, \"APLA ™\")\r\n                            Button(Class: btn btnOrderBuy, Body: Em(Class: fa fa-long-arrow-up) Buy)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Order date Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_order_date#){\r\n                    SetVar(order_date, DateTime(DateTime: #request_order_date#, Format: \"YYYY-MM-DD\"))\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date, Value: #order_date#)\r\n                }.Else{\r\n                    Input(Name: OrderDate, Class: stl-input mt-sm, Type: date)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Comments Em(Class: fa fa-caret-down pl-sm))\r\n                If(#request_order_comments#){\r\n                    Input(Name: Comments, Class: style-textarea mt-sm, Type: textarea, Value: #request_order_comments#).Style(resize: vertical; min-height: 8em;)\r\n                }.Else{\r\n                    Input(Name: Comments, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                If(#type#==sell){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Sell\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=-1\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n                }\r\n                If(#type#==buy){\r\n                    Button(Class: btn btn-primary pull-right btn-blue, Body: \"Buy\", Contract: SecuritiesHistoryEdit, Params: \"OrderType=1\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n                }\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n            }\r\n        }\r\n    }\r\n}.Style(\r\n    .btnOrderBuy {\r\n        background-color: #27c24c;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #1e983b !important;\r\n    }\r\n    .btnOrderSell {\r\n        background-color: #f05050;\r\n        color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderDefaultGreen {\r\n        background-color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #1e983b !important;\r\n    }\r\n    .btnOrderDefaultRed {\r\n        background-color: #ffffff;\r\n        height: 40px;\r\n        min-width: 100px!important;\r\n        border-radius: 5px;\r\n        border: 1px solid;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .styleInputGreen {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px;\r\n        border-color: #1e983b !important;\r\n    }\r\n    .styleInputRed {\r\n        font-size: 18px;\r\n        background-color: #fff;\r\n        padding: 6px 20px; 6px; 20px;\r\n        border: 1px solid rgba(0, 0, 0, 0.12);\r\n        border-radius: 6px;\r\n        height: 40px;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderBuy:hover{\r\n        color: #ffffff !important;\r\n    }\r\n    .btnOrderSell:hover{\r\n        color: #ffffff !important;\r\n    }\r\n    .btnOrderDefaultGreen:hover{\r\n        color: #f05050;\r\n        border-color: #ec2121 !important;\r\n    }\r\n    .btnOrderDefaultRed:hover{\r\n        color: #27c24c;\r\n        border-color: #1e983b !important;\r\n    }\r\n)\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_history_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": #company_id#, \"security_id\": #securities_id#})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"company_id\": #company_id#, \"security_id\": #securities_id#, \"owner\": Address(#key_id#)})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_securities_history, src).Columns(\"id,order_date,order_amount,order_type,order_comments,history_balance,date_created,owner,approval_flags->order,approval_flags->comment,transaction_type\").Where(#where#).Order({\"id\": -1}).Custom(custom_owner){\r\n    Div(txt-nowrap){\r\n        SetVar(OwnerId, AddressToId(#owner#))\r\n        DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold preview-nowrap, Body: #m_member_name#)\r\n\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(custom_order){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ORDER:)\r\n            If(#junior_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_securities_history_edit, PageParams: \"company_id=#company_id#,securities_id=#securities_id#,history_id=#id#\").Popup(45, \"APLA ™\")\r\n            }\r\n        If(#approval_flags.order# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\", Contract: SecuritiesHistoryApprov, Params: \"Id=#id#,Step=1\")\r\n            }\r\n        }\r\n    }\r\n    If(#order_type# == \"1\"){\r\n        P(Class: txt-hidden p-10){\r\n            Span(Amount:)\r\n            Span(Class: pl text-success, Body: + #order_amount#)\r\n        }\r\n    }.Else{\r\n        P(Class: txt-hidden p-10){\r\n            Span(Amount:)\r\n            Span(Class: pl text-danger, Body: - #order_amount#)\r\n        }\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Order date: DateTime(DateTime: #order_date#, Format: \"DD.MM.YYYY\"))\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YY HH:MI\"))\r\n    If(#transaction_type# == 1){\r\n        P(Class: txt-hidden p-00, Body: Type: Transaction)\r\n    }.Else{\r\n        P(Class: txt-hidden p-00, Body: Type: Historical)\r\n    }\r\n}.Custom(custom_comments){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: COMMENTS:)\r\n            If(#junior_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note faSize16), Page: co_securities_history_edit, PageParams: \"company_id=#company_id#,securities_id=#securities_id#,history_id=#id#\").Popup(45, \"APLA ™\")\r\n            }\r\n        If(#approval_flags.comment# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like faSize16), Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\", Contract: SecuritiesHistoryApprov, Params: \"Id=#id#,Step=2\")\r\n            }\r\n        }\r\n    }\r\n    If(#order_comments# != \"\"){\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: #order_comments#)\r\n    }.Else{\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: No)\r\n    }\r\n}.Custom(custom_balance){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: BALANCE:)\r\n    }\r\n    Div(text-center){\r\n        P(Class: txt-hidden p-40, Body: Shares: #history_balance#)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_securities_history_edit, PageParams: \"company_id=#company_id#,securities_id=#securities_id#,type=sell\"){\r\n                        Span(Em(Class: icon-shuffle)).Style(font-size: 20px;)\r\n                        Span(Class: ml-sm, Body: Order).Style(font-size: 22px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: upload_excel, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\"){\r\n                        Span(Em(Class: icon-cloud-upload)).Style(font-size: 20px;)\r\n                        Span(Class: ml-sm, Body: Upload).Style(font-size: 22px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_register){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: List of Companies)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Company Details)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: co_securities_list, PageParams: \"company_id=#company_id#\"){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Securities)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: History)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_owner,=custom_order,=custom_comments,=custom_balance\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(where, {\"company_id\": #company_id#, \"owner\": Address(#key_id#)})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_securities, src).Columns(\"id,owner,balance,details->type,details->other,details->nominal,info,approval_flags->information,approval_flags->distribution,approval_flags->details\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(_owner){\r\n    Div(txt-nowrap){\r\n        SetVar(OwnerId, AddressToId(#owner#))\r\n        DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                \r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_balance){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: BALANCE:)\r\n    }\r\n    Div(text-center){\r\n        P(Class: txt-hidden p-30, Body: Shares: #balance#)\r\n        Button(Class: btn-mini-default-red mt-sm, Page: co_securities_history_list, PageParams: \"securities_id=#id#,company_id=#company_id#\", Body: View history)\r\n    }\r\n}.Custom(_details){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DETAILS:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_edit_details, PageParams: \"company_id=#company_id#,securities_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.details# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_securities_list, PageParams: \"company_id=#company_id#\", Contract: SecuritiesApprov, Params: \"Id=#id#,Step=2\")\r\n            }\r\n        }\r\n    }\r\n    If(#details.type# != NULL){\r\n        P(Class: txt-hidden p-20, Body: #details.type#)\r\n    }\r\n    If(#details.other# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #details.other#)\r\n    }\r\n    If(#details.nominal# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Nominal value: #details.nominal#)\r\n    }\r\n}.Custom(_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_edit_info, PageParams: \"company_id=#company_id#,securities_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.information# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_securities_list, PageParams: \"company_id=#company_id#\", Contract: SecuritiesApprov, Params: \"Id=#id#,Step=3\")\r\n            }\r\n        }\r\n    }\r\n    If(#info# != NULL){\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: #info#)\r\n    }.Else{\r\n        P(Class: p-20 txt-hidden txt-3-line, Body: No)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_se_edit_owner, PageParams: \"fnew=1,company_id=#company_id#\"){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_register){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: List of Companies)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Company Details)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: Securities)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_owner,=_details,=_info,=_balance\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_securities_orders_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(where, {\"company_id\": #company_id#, \"$or\": [\"new_owner\": Address(#key_id#), \"previous_owner\": Address(#key_id#)]})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(where, {\"company_id\": #company_id#})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(@1companies_orders_securities, src).Columns(\"id,date_created,order_amount,order_date,file_id,previous_owner,new_owner,approval_flags,security_id,status,order_signs,order_signs->new_owner_sign,order_signs->previous_owner_sign\").Where(#where#).Order({\"id\": -1}).Custom(custom_owner){\r\n    Div(txt-nowrap){\r\n        SetVar(OwnerId, AddressToId(#previous_owner#))\r\n        DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: PREVIOUS OWNER:)\r\n        If(#status# != 0){\r\n            If(#order_signs.previous_owner_sign# == \"\"){\r\n                Span(Class: pl text-danger, Body: (pending sign))\r\n            }.Else {\r\n                Span(Class: pl text-success, Body: (signed))\r\n            }\r\n        }\r\n        If(And(#approval_flags# != 1, #junior_access_id# > 0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_previous_owner, PageParams: \"company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(new_order_owner){\r\n    Div(txt-nowrap){\r\n        SetVar(OwnerId, AddressToId(#new_owner#))\r\n        DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: NEW OWNER:)\r\n        If(#status# != 0){\r\n            If(#order_signs.new_owner_sign# == \"\"){\r\n                Span(Class: pl text-danger, Body: (pending sign))\r\n            }.Else{\r\n                Span(Class: pl text-success, Body: (signed))\r\n            }\r\n        }\r\n        If(And(#approval_flags# != 1, #junior_access_id# > 0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_new_owner, PageParams: \"company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_amount){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ORDER:)\r\n        If(And(#approval_flags# != 1, #junior_access_id# > 0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_info, PageParams: \"company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    P(Class: txt-hidden p-10, Body: Amount: #order_amount#)\r\n    P(Class: txt-hidden p-10, Body: Order date: DateTime(DateTime: #order_date#, Format: \"DD.MM.YYYY\"))\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YY HH:MI\"))\r\n    P(Class: txt-hidden p-00, Body: Type: Transaction)\r\n}.Custom(custom_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    Div(text-center){\r\n        If(#status# == 0){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-warning, Body: Pending))\r\n        }\r\n        If(#status# == 1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-primary, Body: Signing))\r\n        }\r\n        If(#status# == 2){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-primary, Body: Signing Issuer))\r\n        }\r\n        If(#status# == 3){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-success, Body: Done))\r\n        }\r\n        If(#status# == -1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-danger, Body: Rejected))\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: co_se_order_sign, PageParams: \"order_id=#id#,company_id=#company_id#\", Body: View order)\r\n    }\r\n}.Custom(custom_doc){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: DOCUMENTS:)\r\n        If(And(#approval_flags#!=1,#junior_access_id#>0,#file_id#>0)){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_se_order_edit_upload_doc, PageParams: \"company_id=#company_id#,order_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(text-center mt-lg){\r\n        If(#file_id# > 0){\r\n            DBFind(binaries, src_binaries).Where({\"id\": #file_id#})\r\n            Table(src_binaries, \"=data\").Style(\r\n                margin-top:-20px;\r\n                thead {\r\n                    background-color: #ffffff;\r\n                }\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                tbody {\r\n                    background-color: #ffffff;\r\n                }\r\n                tbody > tr > td  {\r\n                    border: none!important;\r\n                    height: 10px!important;\r\n                    width: 10px!important;\r\n                }\r\n            )\r\n        }\r\n        If(And(#approval_flags#!=1,#junior_access_id#>0,#file_id#==0)){\r\n            Button(Class: btn-xs btn-link mt-lg, Page: @1co_se_order_edit_upload_doc, PageParams: \"company_id=#company_id#,order_id=#id#\"){\r\n                Span(Em(Class: icon-cloud-upload)).Style(font-size: 20px;)\r\n                Span(Class: ml-sm, Body: Upload).Style(font-size: 22px;)\r\n            }.Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n}.Custom(custom_actions){\r\n    If(And(#approval_flags# != 1, #partner_access_id# > 0)){\r\n        Button(Class: btn-link pull-right pt-xl, Body: Em(Class: pt-lg fa fa-2x icon-like), Page: @1co_securities_orders_list, PageParams:\"company_id=#company_id#\", Contract: @1SecuritiesOrderTransferEdit, Params: \"OrderId=#id#,ApprovalFlag=1\")\r\n    }\r\n}.Count(count)\r\n\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_se_order_edit_previous_owner, PageParams: \"fnew=1,company_id=#company_id#\"){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_register){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: List of Companies)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Company Details)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: Orders)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: shareholder_register)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: shareholder_register, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_owner,=custom_arrow,=new_order_owner,=custom_amount,=custom_doc,=custom_status,=custom_actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "co_view",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"id\": #company_id#})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"$and\": [\"id\": #filter_role_company_id#, \"id\": #company_id#]})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(companies_list, src).Where(#where#).Columns(\"name,trader_name,legal_form,address->city,address->street,address->country,address->postal_code,address->house_number,registration->date,registration->number,registration->duration,registration->authority,license->number,license->activity,license->authority,license->issue_date,license->valid_until,approval_flags->name,approval_flags->legal,approval_flags->address,approval_flags->registration,approval_flags->license\").Order({\"deleted\": 1, \"name\": 1}).Custom(_name){ \r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NAME:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_edit_name, PageParams: \"company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.name# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, PageParams: \"company_id=#company_id#\", Contract: CompanyApprov, Params: \"Id=#company_id#,Step=1\")\r\n            }\r\n        }\r\n    }\r\n    If(#name# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #name#)\r\n    }\r\n    If(#trader_name# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Trader name: #trader_name#)\r\n    }\r\n    Div(txt-nowrap pt-lg){\r\n        Span(Class: txt-table-hl, Body: LEGAL FORM:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_edit_legform, PageParams: \"company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.legal# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, PageParams: \"company_id=#company_id#\", Contract: CompanyApprov, Params: \"Id=#company_id#,Step=2\")\r\n            }\r\n        }\r\n    }\r\n    If(#legal_form# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #legal_form#)\r\n    }\r\n}.Custom(_adress){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ADDRESS:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_edit_address, PageParams: \"company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.address# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, PageParams: \"company_id=#company_id#\", Contract: CompanyApprov, Params: \"Id=#company_id#,Step=3\")\r\n            }\r\n        }\r\n    }\r\n    If(And(#address.house_number# != NULL,#address.street# != NULL)){\r\n        P(Class: txt-hidden p-10, Body: #address.house_number# #address.street#)\r\n    }\r\n    If(#address.city# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.city#)\r\n    }\r\n    If(#address.postal_code# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.postal_code#)\r\n    }\r\n    If(#address.country#!= NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.country#)\r\n    }\r\n}.Custom(_registration){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: REGISTRATION:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_edit_registration, PageParams: \"company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.registration# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, PageParams: \"company_id=#company_id#\", Contract: CompanyApprov, Params: \"Id=#company_id#,Step=4\")\r\n            }\r\n        }\r\n    }\r\n    If(#registration.number# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #registration.number#)\r\n    }\r\n    If(#registration.authority# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #registration.authority#)\r\n    }\r\n    If(#registration.date# > 0){\r\n        P(Class: txt-hidden p-10, Body: Date: DateTime(DateTime: #registration.date#, Format: \"DD.MM.YYYY\"))\r\n    }\r\n    If(#registration.duration# > 0){\r\n        P(Class: txt-hidden p-00, Body: Duration: DateTime(DateTime: #registration.duration#, Format: \"DD.MM.YYYY\"))\r\n    }.Else{\r\n        P(Class: txt-hidden p-00, Body: Duration: unlimited)\r\n    }\r\n}.Custom(_license){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: LICENSE:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: co_edit_license, PageParams: \"company_id=#company_id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#approval_flags.license# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n            If(#partner_access_id# > 0){\r\n                Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-like), Page: co_view, PageParams: \"company_id=#company_id#\", Contract: CompanyApprov, Params: \"Id=#company_id#,Step=5\")\r\n            }\r\n        }\r\n    }\r\n    If(#license.number# != NULL){\r\n        If(#license.number# != NULL){\r\n            P(Class: txt-hidden p-10, Body: #license.number#)\r\n        }\r\n        If(#license.activity# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.activity#)\r\n        }\r\n        If(#license.authority# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.authority#)\r\n        }\r\n        If(#license.issue_date#> 0){\r\n            P(Class: txt-hidden p-10, Body: Issue: DateTime(DateTime: #license.issue_date#, Format: \"DD.MM.YYYY\"))\r\n        }\r\n        If(#license.valid_until# > 0){\r\n            P(Class: txt-hidden p-00, Body: Valid: DateTime(DateTime: #license.valid_until#, Format: \"DD.MM.YYYY\"))\r\n        }\r\n    }.Else{\r\n        P(Class: txt-hidden, Body: No)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_register){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: List of Companies)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: Company Details)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_name,=_adress,=_registration,=_license\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 165px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 170px;\r\n                        )\r\n                        Div(col-md-12 m0 p0 bb)\r\n                        Div(Class: pt-xl pb-lg preview-nowrap){\r\n                            Button(Class: btn-default-red ml-lg, Body: Roles, Page: co_roles_list, PageParams: \"company_id=#company_id#\")\r\n                            Button(Class: btn-default-red ml-lg, Body: Securities, Page: co_securities_list, PageParams: \"company_id=#company_id#\")\r\n                            Button(Class: btn-default-red ml-lg, Body: Orders, Page: co_securities_orders_list, PageParams: \"company_id=#company_id#\")\r\n                        }\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "notifications",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1notifications,notification_singles).Where({\"ecosystem\": #ecosystem_id#, \"closed\": 0, \"notification->type\": 1, \"recipient->member_id\": #key_id#}).Columns(\"id,page_name,notification->icon,notification->header,notification->popup,notification->body\").Count(count_singles)\r\n\r\nDBFind(@1notifications,notification_roles).Where({\"ecosystem\": #ecosystem_id#, \"closed\": 0, \"notification->type\": 2, \"recipient->role_id\": #role_id#, {\"$or\": [{\"date_start_processing\": 0}, {\"processing_info->member_id\": #key_id#}]}}).Columns(\"id,page_name,notification->icon,notification->header,notification->popup,notification->body,recipient->role_id\").Count(count_current_role)\r\n\r\nSetVar(limit,10).(limit_count,#limit#)\r\nSetVar(remaining,Calculate(#count_singles#+#count_current_role#-#limit#))\r\n\r\nIf(And(#limit_count#>0,#count_singles#>0)){\r\n    ForList(notification_singles){\r\n        If(#limit_count#>0){\r\n            SetVar(limit_count,Calculate(#limit_count#-1))\r\n            If(#notification.popup#==1){\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }.Popup(Header: $@1notifications_view$, Width: \"40\")\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }.Else{\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nIf(And(#limit_count#>0,#count_current_role#>0)){\r\n    DBFind(@1roles).Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_id#}).Columns(\"role_name\").Vars(role)\r\n    Div(dropdown-heading b0){\r\n        $@1role_notifics$ (#role_role_name#)\r\n    }\r\n    ForList(notification_roles){\r\n        If(#limit_count#>0){\r\n            SetVar(limit_count,Calculate(#limit_count#-1))\r\n            If(#notification.popup#==1){\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }.Popup(Header: $@1notifications_view$, Width: \"40\")\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }.Else{\r\n                Div(list-group-item){\r\n                    Button(Class: btn-link m0 p0 b0 text-left vm, Page: #page_name#, PageParams: \"notific_id=#id#\"){\r\n                        Div(media-box clearfix){\r\n                            Div(pull-left){\r\n                                Em(Class: fa #notification.icon# fa-1x text-primary)\r\n                            }\r\n                            Div(media-box-body){\r\n                                Div(Class: m0 text-normal h6, Body: #notification.header#)\r\n                                Div(Class: m0 text-muted h6, Body: #notification.body#)\r\n                            }\r\n                        }\r\n                    }\r\n                }.Style(.vm{vertical-align: middle;})\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nIf(#remaining#>0){\r\n    Button(Class: btn btn-block btn-default, Page: @1notifications_list){\r\n        $@1notifications_show_all$ (#remaining# $@1more$)\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "notifications_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "If(#page_par#!=\"\"){\r\n    SetVar(Name: type, Value: #page_par#)\r\n}\r\n\r\nIf(Or(#type#==0,#type#==1)){\r\n}.Else{\r\n    SetVar(Name: type, Value: 0)\r\n}\r\nIf(#type#==0){\r\n    Include(@1notifications_single)\r\n}\r\nIf(#type#==1){\r\n    Include(@1notifications_roles)\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "roles_participants_add",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: New Role Member)\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Role Em(Class: fa fa-caret-down pl-sm))\n                DBFind(@1roles).Columns(\"role_name\").Where({\"id\": #r_id#}).Vars(r)\n                Input(Name: Amount, Class: stl-input mt-sm, Disabled: true, Value: #r_role_name#)\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12){\n                Span(Class: text-muted h4, Body: Account Em(Class: fa fa-caret-down pl-sm))\n                SetVar(ParticipantId, Address(#participant_id#))\n                Input(Name: Member, Class: stl-input mt-sm, Disabled: true, Value: #ParticipantId#)\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Contract: @1RolesAssign, Params: \"Rid=#r_id#,MemberId=#participant_id#\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#r_id#\")\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#r_id#\")\n                Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\n                    Span(Class: text-muted mr-lg h4, Body: Step)\n                    Em(Class: fa fa-dot-circle-o mr-sm)\n                    Em(Class: fa fa-dot-circle-o mr-sm)\n                }\n            }\n        }\n    }.Else{\n        Div(row mt-xl popup-min-width){\n            Div(col-md-12 mt){\n                Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#r_id#\")\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "roles_participants_select",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nSetVar(this_page, roles_participants_select).(this_table, @1members).(pager_limit, 3)\nInclude(cr_pager_header)\n\nForm(ml-lg mr-lg){\n    If(#filter_access# == 1){\n        Div(row mt popup-min-width){\n            Div(col-md-12 text-center){\n                Span(Class: h2 text-bold text-black, Body: New Role Member)\n            }\n        }\n        Div(row mt-xl popup-min-width){\n            Form(){\n                Div(Class: pl-lg mr-lg){\n                    Div(input-group){\n                        Div(input-group-addon){\n                            Account\n                        }.Style(\n                            && {\n                                width: 100px!important;\n                                border-radius: 6px;\n                                background-color: #fff;\n                                height: 40px!important;\n                                border: 1px solid #e0e0e0;\n                            }\n                        )\n                        Input(Name: search, Value: #search#, Class: input-search)\n                        Div(input-group-btn){\n                            If(#search#){\n                                Button(Class: btn bg-gray-lighter fa fa-close mtl btn-search, Page: #this_page#, PageParams: \"company_id=#company_id#,p1=#p1#,p2=#p2#,back_page=#back_page#\").Popup(45, \"APLA ™\")\n                            }\n                            Button(Class: btn bg-gray-lighter mtl btn-search, Page: #this_page#, PageParams: \"search=Val(search),company_id=#company_id#,p1=#p1#,p2=#p2#,back_page=#back_page#\", Body: Em(Class: fa fa-search)).Popup(45, \"APLA ™\")\n                        }\n                    }\n                }\n            }\n        }\n\n        If(#search#){\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"id\": {\"$neq\": #guest_key#}, {\"member_name\": #search#}})\n        }.Else{\n            SetVar(where, {\"ecosystem\": #ecosystem_id#, \"id\": {\"$neq\": #guest_key#}})\n        }\n\n        DBFind(#this_table#, src).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(check){\n            Button(Class: btn-xs btn-link pull-right, Page: roles_participants_add, PageParams: \"company_id=#company_id#,r_id=#p1#,participant_id=#id#,back_page=#back_page#\"){\n                Div(text-bold mt){\n                    Span(Class: h4, Body: Em(Class: icon-check fa-2x))\n                }.Style(\n                    display: inline-block;\n                )\n            }.Popup(45, \"APLA ™\")\n        }.Custom(custom_id){\n            Div(h4 text-bold){\n                Div(){\n                    If(#image_id#>0){\n                        Image(Src: Binary().ById(#image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\n                    }.Else{\n                        Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\n                    }\n                    Span(){\n                        Div(Class: h4 m0 text-bold, Body: #member_name#)\n\n                        If(#member_info.is_company# == \"true\"){\n                            If(#member_info.company_name# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_name#)\n                            }\n                            If(#member_info.company_address# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_address#)\n                            }\n                        }.Else{\n                            If(#member_info.personal_name# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_name#)\n                            }\n                            If(#member_info.personal_address# != NULL){\n                                Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_address#)\n                            }\n                        }\n                    }\n                }.Style(display:flex; align-items:center;)\n            }.Style(\n                .fsize {\n                    padding-top: 4px;\n                    font-size: 15px;\n                }\n            )\n        }.Count(count)\n\n        Div(row popup-min-width){\n            Div(col-md-12){\n                Table(src, \"=custom_id,=check\")\n            }\n        }.Style(\n            min-height: 360px!important;\n            margin-top: -10px;\n            thead > tr > th {\n                border : none!important;\n            }\n            td {\n                border: none!important;\n            }\n        )\n    }\n\n    Div(row popup-min-width mt){\n        Div(col-md-12){\n            If(#filter_access# == 1){\n                Include(cr_pager)\n            }\n            Button(Class: btn btn-default pull-right btn-grey, Body: \"Back\", Page: #back_page#, PageParams: \"company_id=#company_id#,r_id=#p1#,back_page=#back_page#\")\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "setting_messenges_send",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    If(#support_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Creating a New Inquiry)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Subject Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Subject, Class: stl-input mt-sm, Value: #request_details_nominal#)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Inquiry Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: Details, Class: style-textarea mt-sm, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Create\", Page: settings_messenges, Contract: @1SettingSupportSend)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "setting_messenges_view",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1settings_support, src).Columns(\"id,role_recipient,date_created,status,sender,processing_info,processing_info->account_id,processing_info->date_start,inquiry_info,inquiry_info->subject\").WhereId(#inquiry_id#).Vars(inq_info)\r\nDBFind(\"@1roles\").WhereId(#inq_info_role_recipient#).Vars(rl)\r\nSetVar(OwnerIdInq, #inq_info_sender#)\r\nSetVar(AccountId, Address(#key_id#))\r\n\r\nDBFind(@1settings_support_messanges, src).Columns(\"id,id_inquiry,sender,messange_text,messange_date\").Where({\"id_inquiry\":#inquiry_id#}).Custom(_sender){\r\n    SetVar(SenderId,AddressToId(#sender#))\r\n    DBFind(@1members).Where({\"id\": #SenderId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n    If(#OwnerIdInq# == #sender#){\r\n        Div(row){\r\n            Div(Class: col-xs-12 pt-lg ){\r\n                Div(Class: pl-lg pr-lg){\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(margin height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-top: 5px;)\r\n                    }.Else{\r\n                        Span(Em(Class: mt fa icon-user fa-4x))\r\n                    }\r\n                }\r\n                Div(Class: bg-gray-lighter pl-xl pr-xl){\r\n                    Span(Class: text-left pt){\r\n                        P(Class: m0 text-bold pb, Body: #m_member_name# Em(Class: pl text-muted, Body: DateTime(DateTime: #messange_date#, Format: \"HH:MI DD.MM.YYYY\")))\r\n                        P(Class: m0 h4 pb-lg){\r\n                            #messange_text#\r\n                        }.Style(\r\n                            white-space: normal;\r\n                        )\r\n                    }.Style(\r\n                        white-space: normal;\r\n                        align-self: center;\r\n                    )\r\n                }.Style(\r\n                    display: flex;\r\n                    min-height: 60px;\r\n                    min-width: 400px;\r\n                    white-space: normal;\r\n                    border-top-right-radius: 20px;\r\n                    border-bottom-left-radius: 20px;\r\n                    border-bottom-right-radius: 20px;\r\n                )\r\n            }.Style(\r\n                display: flex;\r\n                white-space: nowrap;\r\n            )\r\n        }\r\n    }.Else{\r\n        Div(row){\r\n            Div(Class: col-xs-12 pt-lg ){\r\n                Div(Class: pl-lg pr-lg){\r\n                    If(#m_image_id#>0){\r\n                        Image(Src: Binary().ById(#m_image_id#)).Style(margin height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-top: 5px;)\r\n                    }.Else{\r\n                        Span(Em(Class: mt fa icon-user fa-4x))\r\n                    }\r\n                }\r\n                Div(Class: bg-gray-lighter pl-xl pr-xl){\r\n                    Span(Class: text-left pt){\r\n                        P(Class: m0 text-bold pb, Body: #m_member_name# Em(Class: pl text-muted, Body: DateTime(DateTime: #messange_date#, Format: \"HH:MI DD.MM.YYYY\")))\r\n                        P(Class: m0 h4 pb-lg){\r\n                            #messange_text#\r\n                        }.Style(\r\n                            white-space: normal;\r\n                        )\r\n                    }.Style(\r\n                        white-space: normal;\r\n                        align-self: center;\r\n                    )\r\n                }.Style(\r\n                    display: flex;\r\n                    min-height: 60px;\r\n                    min-width: 400px;\r\n                    white-space: normal;\r\n                    border-top-left-radius: 20px;\r\n                    border-bottom-left-radius: 20px;\r\n                    border-bottom-right-radius: 20px;\r\n                )\r\n            }.Style(\r\n                display: flex;\r\n                flex-direction: row-reverse;\r\n                white-space: nowrap;\r\n            )\r\n        }\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Settings\r\n            }\r\n            If(And(#inq_info_status# == 0,#inq_info_role_recipient# == #role_id#)){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_messenges_roles, PageParams: \"inquiry_id=#inquiry_id#\"){\r\n                        Span(Em(Class: icon-action-redo)).Style(font-size: 20px;)\r\n                        Span(Class: ml-sm, Body: Forward).Style(font-size: 22px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_settings){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Platform Settings)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: settings_messenges){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Support)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: View)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_sender\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 100px;\r\n                                    }\r\n                                    overflow: hidden;\r\n                                    td {\r\n                                        border: none!important;\r\n                                    }\r\n                                )\r\n                            }\r\n                        }.Style(\r\n                            height: 494px;\r\n                        )\r\n                        Div(mt-lg){\r\n                            If(#inq_info_status# != 2){\r\n                                Div(){\r\n                                    If(And(#inq_info_processing_info#==\"\",#inq_info_role_recipient#==#role_id#)){\r\n                                        Div(pt pl-lg pr-lg){\r\n                                            Input(Name: Details, Class: style-textarea mb-lg, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 5em;)\r\n                                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Page: setting_messenges_view, Contract: @1SettingSupportMessSend, PageParams:\"inquiry_id=#inquiry_id#\",Params: \"InquiryId=#inquiry_id#,Rid=#role_id#\")\r\n                                            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n                                        }\r\n                                    }.ElseIf(Or(#inq_info_processing_info_account_id#==#AccountId#,#OwnerIdInq#==#AccountId#)){\r\n                                        Div(pt pl-lg pr-lg){\r\n                                            Input(Name: Details, Class: style-textarea mb-lg, Type: textarea, Value: #request_details_other#).Style(resize: vertical; min-height: 5em;)\r\n                                            Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Page: setting_messenges_view, Contract: @1SettingSupportMessSend, PageParams:\"inquiry_id=#inquiry_id#\",Params: \"InquiryId=#inquiry_id#,Rid=#role_id#\")\r\n                                            Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_messenges)\r\n                                            If(#OwnerIdInq# == #AccountId#){\r\n                                                Button(Class: btn btn-default pull-left btn-grey-max mr-sm, Body: \"Close Inquire\", Contract:SettingSupportMessSend, Page: settings_messenges, Params: \"Action=close,InquiryId=#inquiry_id#\")\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }.Style(\r\n                            height: 140px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_messenges",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(Or(#filter_role_type#==3,#filter_role_type#==4,#filter_role_type# == 5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    If(#filter_role_type# != 3){\r\n        SetVar(support_access,1)\r\n        SetVar(where,{\"sender\": Address(#key_id#)})\r\n    }.Else{\r\n        SetVar(support_access,0)\r\n        SetVar(where,{\"role_recipient\": #role_id#})\r\n    }\r\n}.Else{\r\n    SetVar(support_access, 0)\r\n    SetVar(where, {\"id\": 0})\r\n}\r\nDBFind(@1settings_support, src).Columns(\"id,role_recipient,date_created,status,date_closed,sender,processing_info,processing_info->account_id,processing_info->date_start,inquiry_info,inquiry_info->subject\").Where(#where#).Custom(_creator){\r\n    Div(txt-nowrap){\r\n        SetVar(OwnerId, AddressToId(#sender#))\r\n        DBFind(@1members).Where({\"id\": #OwnerId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        Span(Class: txt-table-hl, Body: SENDER:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_recipient){\r\n    Div(txt-nowrap){\r\n        If(#processing_info# != NULL){\r\n            SetVar(RecipientId, AddressToId(#processing_info.account_id#))\r\n            DBFind(@1members).Where({\"id\": #RecipientId#}).Columns(\"member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(r)\r\n        }\r\n        Span(Class: txt-table-hl, Body: RECIPIENT:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(And(#processing_info# != NULL,#r_image_id#>0)){\r\n                Image(Src: Binary().ById(#r_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                DBFind(\"@1roles\").WhereId(#role_recipient#).Vars(rl)\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #rl_role_name#)\r\n                If(#processing_info# != NULL){\r\n                    If(#r_member_info_is_company# == \"true\"){\r\n                        If(#r_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_company_name#)\r\n                        }\r\n                        If(#r_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#r_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_personal_name#)\r\n                        }\r\n                        If(#r_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #r_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(_custom_arrow){\r\n    Div(pt-xl){\r\n        Div(h3 pt-sm){\r\n            Em(Class: fa fa-chevron-right text-black fa-1x)\r\n        }\r\n    }\r\n}.Custom(_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFO:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Subject: #inquiry_info.subject#)\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    If(#processing_info.date_start# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Started: DateTime(DateTime:#processing_info.date_start#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    }\r\n    If(#date_closed# != 0){\r\n        P(Class: txt-hidden p-00, Body: Closed: DateTime(DateTime:#date_closed#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    }\r\n}.Custom(_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    Div(text-center){\r\n        If(#status# == 0){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-warning, Body: Waiting))\r\n        }\r\n        If(#status# == 1){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-primary, Body: In progress))\r\n        }\r\n        If(#status# == 2){\r\n            P(Class: txt-hidden p-30, Body: Status: Span(Class: text-success, Body: Done))\r\n        }\r\n        Button(Class: btn-mini-default-red mt-sm, Page: setting_messenges_view, PageParams: \"inquiry_id=#id#\", Body: View inquiry)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Settings\r\n            }\r\n            If(#support_access# == 1){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: setting_messenges_send, PageParams: \"support_access=1\"){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_settings){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Platform Settings)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: Support)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src,Columns: \"=_creator,=_custom_arrow,=_recipient,=_info,=_status\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_messenges_roles",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles\", src_roles).Where({\"ecosystem\": #ecosystem_id#, \"deleted\": 0, \"company_id\": 0}).Columns(\"role_name,id\").Limit(100)\r\nDBFind(\"@1settings_support\").WhereId(#inquiry_id#).Vars(inq)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(And(#inq_role_recipient# == #role_id#,#inq_status# == 0)){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Changing the Role of the Recipient)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Role Recipient Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleForwarding, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #inq_role_recipient#}).Columns(\"role_name\").Vars(r)\r\n                    Span(Body: Current value: #r_role_name#)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Send\", Contract: SettingSupportMessSend, Page: settings_messenges, Params: \"Rid=#role_id#,Action=forwarding,InquiryId=#inquiry_id#\")\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: setting_messenges_view, PageParams: \"inquiry_id=#inquiry_id#\")\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                If(#inq_status# > 0){\r\n                    Span(Class: h2 text-bold text-black, Body: The inquiry is already being processed)\r\n                }.Else{\r\n                    Span(Class: h2 text-bold text-black, Body: This information is not hidden for your role)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: setting_messenges_view, PageParams: \"inquiry_id=#inquiry_id#\")\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_nodes",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    If(#role_id# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Node list)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: List of all network nodes Em(Class: fa fa-caret-down pl-sm))\r\n                SetVar(full_nodes, SysParam(\"full_nodes\"))\r\n                Input(Name: Name, Type: hidden, Value: \"full_nodes\")\r\n                Input(Name: Value, Class: style-textarea mt-sm, Type: textarea, Value: #full_nodes#).Style(resize: vertical; min-height: 30em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Page: shareholder_settings, Contract: @1UpdateSysParam)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_settings)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h3 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: shareholder_settings)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_roles_config",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles\", src_roles).Where({\"ecosystem\": #ecosystem_id#, \"deleted\": 0, \"company_id\": 0}).Columns(\"role_name,id\").Limit(100)\r\nDBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(\"app\")\r\nSetVar(role_law_firm_junior, AppParam(App: #app_id#, Name: \"role_law_firm_junior\"))\r\nSetVar(role_law_firm_partner, AppParam(App: #app_id#, Name: \"role_law_firm_partner\"))\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#role_id# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Settings for roles)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Law Firm: Junior Lawyer Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleLawFirmJunior, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_law_firm_junior#)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    If(#role_law_firm_junior# > 0){\r\n                        DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_law_firm_junior#}).Columns(\"role_name\").Vars(r)\r\n                        Span(\"Current value:\" #r_role_name#)\r\n                    }.Else{\r\n                        Span(\"Current value: Role is not set\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Law Firm: Partner Em(Class: fa fa-caret-down pl-sm))\r\n                Select(Name: RoleLawFirmPartner, Class: stl-input mt-sm, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_law_firm_partner#)\r\n                Div(m0 mt-sm ml-sm h6 text-muted){\r\n                    If(#role_law_firm_partner# > 0){\r\n                        DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_law_firm_partner#}).Columns(\"role_name\").Vars(r)\r\n                        Span(\"Current value:\" #r_role_name#)\r\n                    }.Else{\r\n                        Span(\"Current value: Role is not set\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: CompaniesRegistrySettingsRoles, Page: settings_roles_list)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_roles_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: h2 text-bold text-black, Body: This information is hidden for your role)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_roles_list)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_roles_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"company_id\": 0})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\n\r\nDBFind(roles, src).Columns(\"id,role_name,date_created,role_type\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_name){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ROLE:)\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            LinkPage(Class: preview-nowrap text-primary h5 text-bold, Page: settings_roles_participants, PageParams: \"r_id=#id#\"){\r\n                Div(Class: text-primary){\r\n                    Span(Em(Class: mr fa icon-settings fa-3x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n                Span(Class: btn-link text-bold pb-sm){\r\n                    Span(Class: text-primary h3 text-bold, Body: #role_name#)\r\n                }.Style(\r\n                    display: inline-block;\r\n                    vertical-align: top;\r\n                    padding-top: 7px;\r\n                    padding-left: 4px;\r\n                )\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }\r\n}.Custom(custom_info){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: INFORMATION:)\r\n    }\r\n    P(Class: txt-hidden p-20, Body: Type: AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #role_type#))\r\n    P(Class: txt-hidden p-00, Body: Created: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Settings\r\n            }\r\n            If(#role_id# == 1){\r\n                Div(pull-right pt-sm pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_roles_config){\r\n                        Span(Em(Class: icon-wrench)).Style(font-size: 20px;)\r\n                        Span(Class: ml-sm, Body: Config).Style(font-size: 22px;)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_settings){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Platform Settings)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: Roles)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_name,=custom_info\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_roles_participants",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"id,role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(where, {\"role->id\": #r_id#, \"deleted\": 0})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(where, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(where, {\"id\": \"0\"})\r\n}\r\nDBFind(@1roles).Columns(\"role_name\").Where({\"id\": #r_id#}).Vars(r)\r\nIf(#r_role_name# != \"\"){\r\n    DBFind(@1roles_participants, src).Columns(\"id,member->member_id,member->member_name,member->image_id,appointed->member_id,appointed->member_name,appointed->voting_id,appointed->voting_name,date_created,date_deleted,deleted\").Where(#where#).Order({\"deleted\": 1, \"id\": 1}).Custom(custom_id){\r\n        Div(txt-nowrap){\r\n            DBFind(@1members).Where({\"id\": #member.member_id#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n            If(#m_member_info_is_company# == \"true\"){\r\n                Span(Class: txt-table-hl, Body: COMPANY:)\r\n            }.Else{\r\n                Span(Class: txt-table-hl, Body: MEMBER:)\r\n            }\r\n        }\r\n        Div(h4 text-bold pr-sm){\r\n            Div(ml mt-lg mb){\r\n                If(#m_image_id#>0){\r\n                    Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n                }.Else{\r\n                    Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n                }\r\n                Span(){\r\n                    Div(Class: h4 m0 text-bold preview-nowrap, Body: #m_member_name#)\r\n\r\n                    If(#m_member_info_is_company# == \"true\"){\r\n                        If(#m_member_info_company_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                        }\r\n                        If(#m_member_info_company_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                        }\r\n                    }.Else{\r\n                        If(#m_member_info_personal_name# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                        }\r\n                        If(#m_member_info_personal_address# != NULL){\r\n                            Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                        }\r\n                    }\r\n                }\r\n            }.Style(display:flex; align-items:center;)\r\n        }.Style(\r\n            .fsize {\r\n                padding-top: 4px;\r\n                font-size: 15px;\r\n            }\r\n        )\r\n    }.Custom(custom_info){\r\n        Div(txt-nowrap){\r\n            Span(Class: txt-table-hl, Body: INFORMATION:)\r\n        }\r\n        P(Class: txt-hidden p-20, Body: Status: Active)\r\n        P(Class: txt-hidden p-00, Body: Appointed: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    }.Custom(check){\r\n        If(#role_id# == 1){\r\n            Button(Class: btn-xs btn-link pull-right mt, Page: settings_roles_participants, PageParams: \"r_id=#r_id#\", Contract: RolesUnassign, Params: \"RowId=#id#\"){\r\n                Div(mt-xl){\r\n                    Span(Class: h4 text-danger, Body: Em(Class: icon-close fa-2x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n            }.Alert(Text: \"Do you really want to delete this member?\", ConfirmButton: \"Yes\", CancelButton: \"No\", Icon: question)\r\n        }\r\n    }.Count(count)\r\n}\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Settings\r\n            }\r\n            If(#role_id# == 1){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: roles_participants_select, PageParams: \"fnew=1,p1=#r_id#,back_page=settings_roles_participants\"){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_settings){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Platform Settings)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            LinkPage(Page: settings_roles_list){\r\n                                Span(Class: txt-hl-navigation-blue, Body: Roles)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: #r_role_name#)\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_id,=custom_info,=check\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_add",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: New Stakeholder)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Span(Class: text-muted h4, Body: Public Key Em(Class: fa fa-caret-down pl-sm))\r\n                Input(Name: NewPubkey, Class: style-textarea mt-sm, Type: textarea).Style(resize: vertical; min-height: 8em;)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Add\", Page: settings_sh_list, Contract: @1NewUser)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_edit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(mr-lg){\r\n    If(#filter_access# == 1){\r\n        DBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Columns(\"name,id\").Vars(application)\r\n        SetVar(member_image_id, 0)\r\n        DBFind(@1members).Where({\"ecosystem\": #ecosystem_id#, \"id\": #member_id#}).Columns(\"id,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(member)\r\n        DBFind(@1buffer_data).Columns(\"value->id,value->image_id,value->phone,value->email,value->is_company,value->company_name,value->trade_name,value->reg_number,value->company_address,value->personal_name,value->personal_address,value->personal_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"edit_profile_form\", \"member_id\": #key_id#}).Vars(buffer)\r\n        If(#buffered# == 1){\r\n            SetVar(member_member_info_phone, #buffer_value_phone#)\r\n            SetVar(member_member_info_email, #buffer_value_email#)\r\n            SetVar(member_member_info_is_company, #buffer_value_is_company#)\r\n            SetVar(member_member_info_company_name, #buffer_value_company_name#)\r\n            SetVar(member_member_info_trade_name, #buffer_value_trade_name#)\r\n            SetVar(member_member_info_reg_number, #buffer_value_reg_number#)\r\n            SetVar(member_member_info_company_address, #buffer_value_company_address#)\r\n            SetVar(member_member_info_personal_name, #buffer_value_personal_name#)\r\n            SetVar(member_member_info_personal_address, #buffer_value_personal_address#)\r\n            SetVar(member_member_info_personal_id, #buffer_value_personal_id#)\r\n        }\r\n        If(#uploaded# == 1){\r\n            DBFind(@1buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": #ecosystem_id#, \"key\": \"avatar\", \"member_id\": #key_id#}).Vars(avatar)\r\n            SetVar(member_image_id, #avatar_value_binary_id#)\r\n        }.ElseIf(#buffered# == 1){\r\n            SetVar(member_image_id, #buffer_value_image_id#)\r\n        }\r\n\r\n        Div(row ml-lg mt){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Stakeholder Registration Details)\r\n            }\r\n        }\r\n        Div(){\r\n            Span(Class: mt-lg text-center popup-min-width){\r\n                Div(mt-xl){\r\n                    SetVar(ParamNames, \"id;image_id;phone;email;is_company;company_name;trade_name;reg_number;company_address;personal_name;personal_address;personal_id\")\r\n                    Button(Class: btn btn-link , Page: settings_sh_upload_photo, PageParams: \"member_id=#member_id#,application_id=#application_id#,buffer_key=avatar\", Contract: @1FormStateSave, Params: \"AppId=#application_id#,FormName=edit_profile_form,ParamNames=#ParamNames#,Param1=#member_id#,Param2=Val(ImageId),Param3=Val(Phone),Param4=Val(Email),Param5=Val(IsCompany),Param6=Val(CompanyName),Param7=Val(CompanyTradeName),Param8=Val(CompanyRegNumber),Param9=Val(CompanyAddress),Param10=Val(PersonalName),Param11=Val(PersonalAddress),Param12=Val(PersonalID)\"){\r\n                        If(#member_image_id# > 0){\r\n                            Input(Name: ImageId, Type: hidden, Value: #member_image_id#)\r\n                            Image(Src: Binary().ById(#member_image_id#)).Style(height: 204px;width: 204px; border: 2px solid #cdcccd; border-radius: 8px;)\r\n                            Div(Body: Edit Photo)\r\n                        }.Else{\r\n                            Input(Name: ImageId, Type: hidden, Value: 0)\r\n                            Div(Class: icon-user pt-xl pb-sm).Style(font-size: 9em!important;)\r\n                            Div(Class: pb-xl, Body: Edit Photo)\r\n                        }\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n            Span(Class: fullscreen){\r\n                Div(){\r\n                    Span(Class: text-muted h4, Body: Account Em(Class: fa fa-caret-down pl-sm))\r\n                    SetVar(account, Address(#member_id#))\r\n                    Input(Name: Account, Class: stl-input mt-sm, Value: #account#, Disabled: true)\r\n                }\r\n                Div(mt-lg){\r\n                    Span(Class: text-muted h4, Body: Phone Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: Phone, Class: stl-input mt-sm, Value: #member_member_info_phone#)\r\n                }\r\n                Div(mt-lg){\r\n                    Span(Class: text-muted h4, Body: Email Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: Email, Class: stl-input mt-sm, Value: #member_member_info_email#)\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n        Div(ml-lg mt-sm popup-min-width){\r\n            Div(input-group){\r\n                Span(Class: mr pull-right text-muted h4, Body: Company)\r\n                Div(input-group-btn){\r\n                    Input(Name: IsCompany, Type: \"checkbox\", Value: #member_member_info_is_company#, Class: m0 pull-right)\r\n                }\r\n            }\r\n        }\r\n        Div(){\r\n            Div(row ml-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyName, Class: stl-input mt-sm, Value: #member_member_info_company_name#)\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Trade name Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyTradeName, Class: stl-input mt-sm, Value: #member_member_info_trade_name#)\r\n\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Registration number Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyRegNumber, Class: stl-input mt-sm, Value: #member_member_info_reg_number#)\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Post address Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: CompanyAddress, Class: stl-input mt-sm, Value: #member_member_info_company_address#)\r\n                }\r\n            }\r\n        }.Show(\"IsCompany=true\")\r\n        Div(){\r\n            Div(row ml-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Name Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PersonalName, Class: stl-input mt-sm, Value: #member_member_info_personal_name#)\r\n\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: ID [number / authority / date of issue / valid until] Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PersonalID, Class: stl-input mt-sm, Value: #member_member_info_personal_id#)\r\n\r\n                }\r\n            }\r\n            Div(row ml-lg mt-lg popup-min-width){\r\n                Div(col-md-12){\r\n                    Span(Class: text-muted h4, Body: Residence address Em(Class: fa fa-caret-down pl-sm))\r\n                    Input(Name: PersonalAddress, Class: stl-input mt-sm, Value: #member_member_info_personal_address#)\r\n                }\r\n            }\r\n        }.Show(\"IsCompany=false\")\r\n        Div(row mt-xl){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-primary pull-right btn-blue, Body: \"Save\", Contract: ProfileEdit, Params: \"MemberId=#member_id#\", Page: settings_sh_list)\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl){\r\n            Div(col-md-12){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"id\": {\"$neq\": #guest_key#}})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\nIf(#search#){\r\n    SetVar(w_search, {\"member_name\": {\"$ilike\": \"#search#\"}})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}, \"ecosystem\": #ecosystem_id#})\r\nDBFind(@1members, src).Where(#where#).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id,member_info->kyc_binary_id,member_info->approval_flag\").Order({\"id\": \"1\"}).Custom(custom_id){\r\n    Div(txt-nowrap){\r\n        If(#member_info.is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: COMPANY:)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: MEMBER:)\r\n        }\r\n        If(#member_info.approval_flag# != \"1\"){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: settings_sh_edit, PageParams: \"member_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#image_id#>0){\r\n                Image(Src: Binary().ById(#image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #member_name#)\r\n                If(#member_info.is_company# == \"true\"){\r\n                    If(#member_info.company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_name#)\r\n                    }\r\n                    If(#member_info.company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#member_info.personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_name#)\r\n                    }\r\n                    If(#member_info.personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #member_info.personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_kyc){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: KYC DOCUMENT:)\r\n        If(#junior_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right, Body: Em(Class: fa icon-note), Page: settings_sh_upload_kyc, PageParams: \"member_id=#id#\").Popup(45, \"APLA ™\")\r\n        }\r\n        If(#member_info.approval_flag# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    Div(mt-lg){\r\n        If(#member_info.kyc_binary_id# > 0){\r\n            DBFind(binaries, src_binaries).Where({\"id\": #member_info.kyc_binary_id#})\r\n            Table(src_binaries, \"=data\").Style(\r\n                margin-top:-20px;\r\n                thead {\r\n                    background-color: #ffffff;\r\n                }\r\n                thead > tr > th {\r\n                    border : none!important;\r\n                }\r\n                tbody {\r\n                    background-color: #ffffff;\r\n                }\r\n                tbody > tr > td  {\r\n                    border: none!important;\r\n                    height: 10px!important;\r\n                    width: 10px!important;\r\n                }\r\n            )\r\n        }\r\n    }\r\n}.Custom(custom_actions){\r\n    If(#member_info.approval_flag# != \"1\"){\r\n        If(#partner_access_id# > 0){\r\n            Button(Class: btn-xs btn-link pull-right mt, Page: settings_sh_list,Contract: @1ProfileEdit, Params: \"MemberId=#id#,ApprovalFlag=1\"){\r\n                Div(mt-xl){\r\n                    Span(Class: h4, Body: Em(Class: icon-like fa-2x))\r\n                }.Style(\r\n                    display: inline-block;\r\n                )\r\n            }\r\n        }\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Settings\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: settings_sh_add){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            LinkPage(Page: shareholder_settings){\r\n                                Span(Class: txt-hl-navigation-blue ml-lg, Body: Platform Settings)\r\n                            }\r\n                            Em(Class: fa fa-chevron-right ml mr)\r\n                            Span(Class: txt-hl-navigation, Body: List of Stakeholders)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: settings_sh_list)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: settings_sh_list, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_id,=custom_kyc,=custom_actions\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 140px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_upload_kyc",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nDBFind(@1applications).Columns(\"name,id\").Where({\"ecosystem\": 1, \"name\": \"Companies Registry\"}).Vars(application)\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Upload KYC Documents)\r\n            }\r\n        }\r\n        If(#upload#==1){\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    DBFind(@1buffer_data).Columns(\"value->binary_id\").Where({\"ecosystem\": 1, \"key\": \"kyc_doc\", \"member_id\": #key_id#}).Vars(buffer)\r\n                    DBFind(@1binaries).Columns(\"name\").Where({\"id\": #buffer_value_binary_id#}).Vars(binaries)\r\n                    Input(Name: Name, Class: stl-input mt-sm, Value: #binaries_name#, Disabled: true)\r\n                }\r\n            }\r\n        }.Else{\r\n            Div(row mt-xl popup-min-width){\r\n                Div(col-md-12){\r\n                    Input(Name: FileData, Type: file)\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                If(#upload#==1){\r\n                    Button(Body: \"Save\", Class: btn btn-primary pull-right btn-blue, Contract: @1ProfileEdit, Params: \"KYCFlag=1,KYCBinaryId=#buffer_value_binary_id#,MemberId=#member_id#\", Page: settings_sh_list)\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                    }\r\n                }.Else{\r\n                    Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: @1BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=kyc_doc\", Page: settings_sh_upload_kyc, PageParams: \"upload=1,member_id=#member_id#\").Popup(45, \"APLA ™\")\r\n                    Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_list)\r\n                    Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                        Span(Class: text-muted mr-lg h4, Body: Step)\r\n                        Em(Class: fa fa-dot-circle-o mr-sm)\r\n                        Em(Class: fa fa-circle-o mr-sm)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "settings_sh_upload_photo",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(filter_access, 1)\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(filter_access, 0)\r\n}.Else{\r\n    SetVar(filter_access, 0)\r\n}\r\n\r\nForm(ml-lg mr-lg){\r\n    If(#filter_access# == 1){\r\n        Div(row mt popup-min-width){\r\n            Div(col-md-12 text-center){\r\n                Span(Class: h2 text-bold text-black, Body: Upload Stakeholder Photo)\r\n            }\r\n        }\r\n        Div(row mt-xl popup-min-width){\r\n            Div(col-md-12){\r\n                Input(Name: FileData, Type: file)\r\n            }\r\n        }\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: @1BufferFileUpload, Params: \"AppId=#application_id#,BufferKey=#buffer_key#,FileName=#file_name#\", Page: settings_sh_edit, PageParams:\"buffered=1,uploaded=1,member_id=#member_id#\").Popup(45, \"APLA ™\")\r\n                Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: settings_sh_edit, PageParams: \"buffered=1,member_id=#member_id#\").Popup(45, \"APLA ™\")\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(row mt-lg popup-min-width){\r\n            Div(col-md-12 mt){\r\n                Button(Class: btn btn-default pull-right btn-grey mr-sm, Body: \"Back\", Page: settings_sh_list)\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_directors",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(And(#filter_role_company_id#>0,#filter_role_type#==6)){\r\n    SetVar(filter_access, 1)\r\n}\r\n\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"id\": {\"$gt\": 0}})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\nIf(#search#){\r\n    SetVar(w_search, {\"meeting->initiated\": {\"$ilike\": \"#search#\"}})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}, \"status\": {\"$lte\": 3}})\r\n\r\nDBFind(meetings_bd, src).Where(#where#).Columns(\"company_id,date_created,matters,points,meeting->format,meeting->agenda,meeting->place,meeting->initiated,meeting->date_from,meeting->date_until,agenda->issuer,agenda->legal_form,agenda->place_results,agenda->date_from,agenda->date_until,status\").Order({\"id\": -1}).Custom(custom_initiated){\r\n    Div(txt-nowrap){\r\n        SetVar(initiated, AddressToId(#meeting.initiated#))\r\n        DBFind(@1members).Where({\"id\": #initiated#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: INITIATED (COMPANY):)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: INITIATED (MEMBER):)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_company){\r\n    DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"id,name,trader_name,legal_form\").Vars(view)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ISSUER:)\r\n    }\r\n    LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\r\n        P(Class: txt-hidden text-primary p-10, Body: #view_name#)\r\n    }\r\n    If(#view_trader_name# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Trader name: #view_trader_name#)\r\n    }\r\n    If(#view_legal_form# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #view_legal_form#)\r\n    }\r\n}.Custom(custom_meeting){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: MEETING DATE:)\r\n    }\r\n    If(#meeting.date_from# > 0){\r\n        P(Class: txt-hidden p-10, Body: From: DateTime(DateTime: #meeting.date_from#, Format: \"DD.MM.YY HH:MI\"))\r\n        P(Class: txt-hidden p-00, Body: Until: DateTime(DateTime: #meeting.date_until#, Format: \"DD.MM.YY HH:MI\"))\r\n    }\r\n}.Custom(custom_agenda){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: AGENDA DATE:)\r\n    }\r\n    If(#agenda.date_from# > 0){\r\n        P(Class: txt-hidden p-10, Body: From: DateTime(DateTime: #agenda.date_from#, Format: \"DD.MM.YY HH:MI\"))\r\n    }\r\n    If(#agenda.date_until# > 0){\r\n        P(Class: txt-hidden p-00, Body: Until: DateTime(DateTime: #agenda.date_until#, Format: \"DD.MM.YY HH:MI\"))\r\n    }\r\n}.Custom(custom_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    If(#status#==1){\r\n        SetVar(txt_style, \"text-bold\")\r\n    }\r\n    If(#status#==2){\r\n        SetVar(txt_style, \"text-success\")\r\n    }\r\n    If(#status#==3){\r\n        SetVar(txt_style, \"text-danger\")\r\n    }\r\n    If(#status#==4){\r\n        SetVar(txt_style, \"text-bold\")\r\n    }\r\n    If(#status#==5){\r\n        SetVar(txt_style, \"text-success\")\r\n    }\r\n    If(#status#==6){\r\n        SetVar(txt_style, \"text-primary\")\r\n    }\r\n    P(Class: txt-hidden p-30-m0, Body: Span(Class: #txt_style#, Body: AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: db_meeting_status, Index: #status#))\r\n}.Custom(check){\r\n    SetVar(initiated1, AddressToId(#meeting.initiated#))\r\n    If(And(#initiated1#==#key_id#,#status#==1)){\r\n        Button(Class: btn-xs btn-link pull-right, Page: bd_meeting_edit, PageParams: \"meeting_id=#id#\"){\r\n            Div(mt-xl){\r\n                Span(Class: h4, Body: Em(Class: icon-note fa-2x))\r\n            }.Style(\r\n                display: inline-block;\r\n            )\r\n        }\r\n    }\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: VIEW:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"meeting_id=#id#\", Page: bd_meeting_view, Body: View voting)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Board of Directors\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: shareholder_directors, Contract: BDMeetingStatusUpdate){\r\n                        Span(Class: pr-sm icon-refresh fa-2x)\r\n                        Span(Class: h3, Body: Refresh)\r\n                    }\r\n                }\r\n            }\r\n            If(#filter_access# == 1){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: bd_meeting_add){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: List of Meetings)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: shareholder_directors)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: shareholder_directors, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_page,=custom_initiated,=custom_company,=custom_meeting,=custom_agenda,=custom_status,=check\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 170px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_meetings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(And(#filter_role_company_id#>0,#filter_role_type#==6)){\r\n    SetVar(filter_access, 1)\r\n}\r\n\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"id\": {\"$gt\": 0}})\r\n}.ElseIf(#filter_role_type#==4){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==5){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==6){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.ElseIf(#filter_role_type#==7){\r\n    SetVar(w_filter, {\"company_id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\nIf(#search#){\r\n    SetVar(w_search, {\"meeting->initiated\": {\"$ilike\": \"#search#\"}})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}, \"status\": {\"$gt\": 3}})\r\n\r\nDBFind(meetings_bd, src).Where(#where#).Columns(\"company_id,date_created,matters,points,meeting->format,meeting->agenda,meeting->place,meeting->initiated,meeting->date_from,meeting->date_until,agenda->issuer,agenda->legal_form,agenda->place_results,agenda->date_from,agenda->date_until,status\").Order({\"id\": -1}).Custom(custom_initiated){\r\n    Div(txt-nowrap){\r\n        SetVar(initiated, AddressToId(#meeting.initiated#))\r\n        DBFind(@1members).Where({\"id\": #initiated#}).Columns(\"id,member_name,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(m)\r\n        If(#m_member_info_is_company# == \"true\"){\r\n            Span(Class: txt-table-hl, Body: INITIATED (COMPANY):)\r\n        }.Else{\r\n            Span(Class: txt-table-hl, Body: INITIATED (MEMBER):)\r\n        }\r\n    }\r\n    Div(h4 text-bold pr-sm){\r\n        Div(ml mt-lg mb){\r\n            If(#m_image_id#>0){\r\n                Image(Src: Binary().ById(#m_image_id#)).Style(height: 60px;width: 60px; border: 1px solid #cdcccd; border-radius: 8px; margin-right: 18px;)\r\n            }.Else{\r\n                Span(Em(Class: text-muted mr fa icon-user fa-3x)).Style(margin-right:12px;)\r\n            }\r\n            Span(){\r\n                Div(Class: h4 m0 text-bold txt-nowrap, Body: #m_member_name#)\r\n                If(#m_member_info_is_company# == \"true\"){\r\n                    If(#m_member_info_company_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_name#)\r\n                    }\r\n                    If(#m_member_info_company_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_company_address#)\r\n                    }\r\n                }.Else{\r\n                    If(#m_member_info_personal_name# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_name#)\r\n                    }\r\n                    If(#m_member_info_personal_address# != NULL){\r\n                        Div(Class: h4 m0 text-muted fsize, Body: #m_member_info_personal_address#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(display:flex; align-items:center;)\r\n    }.Style(\r\n        .fsize {\r\n            padding-top: 4px;\r\n            font-size: 15px;\r\n        }\r\n    )\r\n}.Custom(custom_company){\r\n    DBFind(companies_list).Where({\"id\": #company_id#}).Columns(\"id,name,trader_name,legal_form\").Vars(view)\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ISSUER:)\r\n    }\r\n    LinkPage(Page: co_view, PageParams: \"company_id=#company_id#\"){\r\n        P(Class: txt-hidden text-primary p-10, Body: #view_name#)\r\n    }\r\n    If(#view_trader_name# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Trader name: #view_trader_name#)\r\n    }\r\n    If(#view_legal_form# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #view_legal_form#)\r\n    }\r\n}.Custom(custom_agenda){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: AGENDA DATE:)\r\n    }\r\n    If(#agenda.date_from# > 0){\r\n        P(Class: txt-hidden p-10, Body: From: DateTime(DateTime: #agenda.date_from#, Format: \"DD.MM.YY HH:MI\"))\r\n    }\r\n    If(#agenda.date_until# > 0){\r\n        P(Class: txt-hidden p-00, Body: Until: DateTime(DateTime: #agenda.date_until#, Format: \"DD.MM.YY HH:MI\"))\r\n    }\r\n}.Custom(custom_status){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: STATUS:)\r\n    }\r\n    If(#status#==1){\r\n        SetVar(txt_style, \"text-bold\")\r\n    }\r\n    If(#status#==2){\r\n        SetVar(txt_style, \"text-success\")\r\n    }\r\n    If(#status#==3){\r\n        SetVar(txt_style, \"text-danger\")\r\n    }\r\n    If(#status#==4){\r\n        SetVar(txt_style, \"text-bold\")\r\n    }\r\n    If(#status#==5){\r\n        SetVar(txt_style, \"text-success\")\r\n    }\r\n    If(#status#==6){\r\n        SetVar(txt_style, \"text-primary\")\r\n    }\r\n    P(Class: txt-hidden p-30-m0, Body: Span(Class: #txt_style#, Body: AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: db_meeting_status, Index: #status#))\r\n}.Custom(custom_page){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: VIEW:)\r\n    }\r\n    Div(mt){\r\n        Button(Class: btn-default-red mt-lg pull-left, PageParams: \"meeting_id=#id#\", Page: bd_meeting_view, Body: View voting)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Meetings of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: shareholder_meetings, Contract: BDMeetingStatusUpdate){\r\n                        Span(Class: pr-sm icon-refresh fa-2x)\r\n                        Span(Class: h3, Body: Refresh)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: List of Meetings)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: shareholder_meetings)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: shareholder_meetings, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=custom_page,=custom_initiated,=custom_company,=custom_agenda,=custom_status\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 170px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_profile",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\nIf(#filter_role_type#==3){\n    SetVar(filter_access, 1)\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\n    SetVar(filter_access, 0)\n}.Else{\n    SetVar(filter_access, 0)\n}\n\nIf(#m_id# == \"\"){\n    SetVar(m_id, #key_id#)\n}\nIf(#m_id# == #key_id#){\n    SetVar(filter_access, 1)\n}\n\nForm(){\n    Div(row){\n        Div(col-md-8 col-md-offset-2 text-center pb-lg pt-lg){\n            Span(Class: h1 text-bold text-black){\n                Profile\n            }\n        }\n        Div(row){\n            Div(col-md-10 col-md-offset-1){\n                Div(panel panel-primary panelForm){\n                    Div(panel-body m0){\n                        Div(bb pb){\n                            Div(pl-lg pb pt-sm text-center){\n                                Span(Class: h2 text-bold text-black, Body: Stakeholder Information)\n                            }\n                        }\n                        Div(mt-sm){\n                            If(#filter_access# == 1){\n                                DBFind(@1members).Where({\"ecosystem\": #ecosystem_id#, \"id\": #m_id#}).Columns(\"id,image_id,member_info->phone,member_info->email,member_info->is_company,member_info->company_name,member_info->trade_name,member_info->reg_number,member_info->company_address,member_info->personal_name,member_info->personal_address,member_info->personal_id\").Vars(member)\n\n                                Div(){\n                                    Span(Class: ml-lg text-center mr-xl){\n                                        Div(minForm pt-lg pb){\n                                            If(#member_image_id# > 0){\n                                                Input(Name: ImageId, Type: hidden, Value: #member_image_id#)\n                                                Image(Src: Binary().ById(#member_image_id#)).Style(height: 180px;width: 180px; border: 2px solid #656565; border-radius: 8px;)\n                                            }.Else{\n                                                Input(Name: ImageId, Type: hidden, Value: 0)\n                                                Div(Class: icon-user text-black).Style(font-size: 9em!important;)\n                                            }\n                                        }\n                                    }\n                                    Span(Class: pr-xl pb-lg fullscreen){\n                                        Div(row){\n                                            Div(col-md-6 minCol){\n                                                Div(mt-lg){\n                                                    SetVar(account, Address(#member_id#))\n                                                    Span(Class: preview-nowrap text-black h4, Body: Strong(Account))\n                                                }\n                                                If(#member_member_info_is_company# == \"true\"){\n                                                    If(#member_member_info_company_name# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Name))\n                                                        }\n                                                    }\n                                                    If(#member_member_info_trade_name# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Trade name))\n                                                        }\n                                                    }\n                                                    If(#member_member_info_reg_number# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Registration number))\n                                                        }\n                                                    }\n                                                    If(#member_member_info_company_address# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Post address))\n                                                        }\n                                                    }\n                                                }.Else{\n                                                    If(#member_member_info_personal_name# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Name))\n                                                        }\n                                                    }\n                                                    If(#member_member_info_personal_id# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(ID))\n                                                        }\n                                                    }\n                                                    If(#member_member_info_personal_address# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Residence address))\n                                                        }\n                                                    }\n                                                }\n                                                If(#member_member_info_phone# != \"\"){\n                                                    Div(mt-lg){\n                                                        Span(Class: preview-nowrap text-black h4, Body: Strong(Phone))\n                                                    }\n                                                }\n                                                If(#member_member_info_email# != \"\"){\n                                                    Div(mt-lg){\n                                                        Span(Class: preview-nowrap text-black h4, Body: Strong(Email))\n                                                    }\n                                                }\n                                            }\n                                            Div(col-md-6){\n                                                Div(mt-lg){\n                                                    SetVar(account, Address(#member_id#))\n                                                    Span(Class: preview-nowrap text-black h4, Body: #account#)\n                                                }\n                                                If(#member_member_info_is_company# == \"true\"){\n                                                    If(#member_member_info_company_name# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_company_name#)\n                                                        }\n                                                    }\n                                                    If(#member_member_info_trade_name# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_trade_name#)\n                                                        }\n                                                    }\n                                                    If(#member_member_info_reg_number# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_reg_number#)\n                                                        }\n                                                    }\n                                                    If(#member_member_info_company_address# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_company_address#)\n                                                        }\n                                                    }\n                                                }.Else{\n                                                    If(#member_member_info_personal_name# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_personal_name#)\n                                                        }\n                                                    }\n                                                    If(#member_member_info_personal_id# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_personal_id#)\n                                                        }\n                                                    }\n                                                    If(#member_member_info_personal_address# != \"\"){\n                                                        Div(mt-lg){\n                                                            Span(Class: preview-nowrap text-black h4, Body: #member_member_info_personal_address#)\n                                                        }\n                                                    }\n                                                }\n                                                If(#member_member_info_phone# != \"\"){\n                                                    Div(mt-lg){\n                                                        Span(Class: preview-nowrap text-black h4, Body: #member_member_info_phone#)\n                                                    }\n                                                }\n                                                If(#member_member_info_email# != \"\"){\n                                                    Div(mt-lg){\n                                                        Span(Class: preview-nowrap text-black h4, Body: #member_member_info_email#)\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        Div(mt-lg mb-sm){\n                                            DBFind(@1roles_participants).Where({\"ecosystem\": #ecosystem_id#, \"member->member_id\": #m_id#, \"deleted\": 0}).Columns(\"id\").Vars(check)\n                                            If(#check_id#>0){\n                                                Div(row){\n                                                    Div(col-md-6 minCol){\n                                                        Div(mt-sm){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Roles))\n                                                        }\n                                                    }\n                                                    Div(col-md-6){\n                                                        Div(){\n                                                            DBFind(@1roles_participants,src_roles).Where({\"ecosystem\": #ecosystem_id#, \"member->member_id\": #m_id#, \"deleted\": 0}).Columns(\"role->id,role->name\").Order(\"id\")\n                                                            ForList(src_roles){\n                                                                Button(Class: roles-btn, Body: \"#role.name#\")\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }.Else{\n                                                Div(row){\n                                                    Div(col-md-6 minCol){\n                                                        Div(mt-sm){\n                                                            Span(Class: preview-nowrap text-black h4, Body: Strong(Roles))\n                                                        }\n                                                    }\n                                                    Div(col-md-6){\n                                                        Div(mt-sm){\n                                                            SetVar(account, Address(#member_id#))\n                                                            Span(Class: preview-nowrap text-black h4, Body: None)\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }.Style(display:flex; align-items:center;)\n                            }.Else{\n                                Div(pl-lg pb pt text-center){\n                                    Span(Class: h3 text-bold text-black, Body: No information)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}.Style(\n    .preview-nowrap {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n    .text-black {\n        color: #222f3e;\n    }\n    .styleInput {\n        font-size: 18px;\n        background-color: #fff;\n        padding: 6px 20px; 6px; 20px;\n        border: 2px solid rgba(0, 0, 0, 0.12);\n        border-radius: 6px;\n        height: 40px;\n    }\n    .minForm {\n        min-width: 280px!important;\n    }\n    .minCol {\n        width: 200px!important;\n    }\n    .panelForm {\n        min-width: 800px!important;\n    }\n    .roles-btn {\n        background-color: transparent;\n        height: 30px;\n        min-width: 120px!important;\n        border-radius: 5px;\n        color: #222f3e;\n        border: 2px solid #656565;\n        margin-right: 5px;\n        margin-top: 5px;\n    }\n    .roles-btn:hover{\n        border: 2px solid #ff7675;\n        color: #ff7675;\n    }\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_register",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Companies Registry\"}).Vars(application)\r\nSetVar(role_law_firm_junior, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_junior))\r\nSetVar(role_law_firm_partner, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_law_firm_partner))\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_junior#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(junior_access)\r\nDBFind(\"@1roles_participants\").Where({\"ecosystem\": #ecosystem_id#, \"$and\": [\"role->id\": {\"$in\": [#role_law_firm_partner#]}, \"role->id\": #role_id#], \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(partner_access)\r\n\r\nDBFind(\"@1roles_participants\").Columns(\"role->company_id,role->type\").Where({\"ecosystem\": #ecosystem_id#, \"role->id\": #role_id#, \"member->member_id\": #key_id#, \"deleted\": 0}).Vars(filter)\r\nIf(#filter_role_type#==3){\r\n    SetVar(w_filter, {\"id\": {\"$gt\": 0}})\r\n}.ElseIf(Or(#filter_role_type#==4,#filter_role_type#==5,#filter_role_type#==6,#filter_role_type#==7)){\r\n    SetVar(w_filter, {\"id\": #filter_role_company_id#})\r\n}.Else{\r\n    SetVar(w_filter, {\"id\": \"0\"})\r\n}\r\n\r\nIf(#search#){\r\n    SetVar(w_search, {\"name\": {\"$ilike\": \"#search#\"}})\r\n}\r\nSetVar(where, {{#w_search#}, {#w_filter#}})\r\n\r\nDBFind(companies_list, src).Where(#where#).Columns(\"name,trader_name,legal_form,address->city,address->street,address->country,address->postal_code,address->house_number,registration->date,registration->number,registration->duration,registration->authority,license->number,license->activity,license->authority,license->issue_date,license->valid_until,approval_flags->name,approval_flags->legal,approval_flags->address,approval_flags->registration,approval_flags->license\").Order({\"deleted\": 1, \"name\": 1}).Custom(_name){ \r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: NAME:)\r\n        If(#approval_flags.name# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    LinkPage(Page: co_view, PageParams: \"company_id=#id#\"){\r\n        P(Class: txt-hidden text-primary p-10, Body: #name#)\r\n    }\r\n    If(#trader_name# != NULL){\r\n        P(Class: txt-hidden p-00, Body: Trader name: #trader_name#)\r\n    }\r\n    Div(txt-nowrap pt-lg){\r\n        Span(Class: txt-table-hl, Body: LEGAL FORM:)\r\n        If(#approval_flags.legal# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    If(#legal_form# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #legal_form#)\r\n    }\r\n}.Custom(_adress){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: ADDRESS:)\r\n        If(#approval_flags.address# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    If(And(#address.house_number# != NULL,#address.street# != NULL)){\r\n        P(Class: txt-hidden p-10, Body: #address.house_number# #address.street#)\r\n    }\r\n    If(#address.city# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.city#)\r\n    }\r\n    If(#address.postal_code# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.postal_code#)\r\n    }\r\n    If(#address.country#!= NULL){\r\n        P(Class: txt-hidden p-00, Body: #address.country#)\r\n    }\r\n}.Custom(_registration){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: REGISTRATION:)\r\n        If(#approval_flags.registration# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    If(#registration.number# != NULL){\r\n        P(Class: txt-hidden p-10, Body: #registration.number#)\r\n    }\r\n    If(#registration.authority# != NULL){\r\n        P(Class: txt-hidden p-00, Body: #registration.authority#)\r\n    }\r\n    If(#registration.date# > 0){\r\n        P(Class: txt-hidden p-10, Body: Date: DateTime(DateTime: #registration.date#, Format: \"DD.MM.YYYY\"))\r\n    }\r\n    If(#registration.duration# > 0){\r\n        P(Class: txt-hidden p-00, Body: Duration: DateTime(DateTime: #registration.duration#, Format: \"DD.MM.YYYY\"))\r\n    }.Else{\r\n        P(Class: txt-hidden p-00, Body: Duration: unlimited)\r\n    }\r\n}.Custom(_license){\r\n    Div(txt-nowrap){\r\n        Span(Class: txt-table-hl, Body: LICENSE:)\r\n        If(#approval_flags.license# != 1){\r\n            Span(Class: txt-review, Body: (under review))\r\n        }\r\n    }\r\n    If(#license.number# != NULL){\r\n        If(#license.number# != NULL){\r\n            P(Class: txt-hidden p-10, Body: #license.number#)\r\n        }\r\n        If(#license.activity# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.activity#)\r\n        }\r\n        If(#license.authority# != NULL){\r\n            P(Class: txt-hidden p-00, Body: #license.authority#)\r\n        }\r\n        If(#license.issue_date#> 0){\r\n            P(Class: txt-hidden p-10, Body: Issue: DateTime(DateTime: #license.issue_date#, Format: \"DD.MM.YYYY\"))\r\n        }\r\n        If(#license.valid_until# > 0){\r\n            P(Class: txt-hidden p-00, Body: Valid: DateTime(DateTime: #license.valid_until#, Format: \"DD.MM.YYYY\"))\r\n        }\r\n    }.Else{\r\n        P(Class: txt-hidden, Body: No)\r\n    }\r\n}.Count(count)\r\n\r\nForm(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Register of Shareholders\r\n            }\r\n            If(#junior_access_id# > 0){\r\n                Div(pull-right pt pr-lg){\r\n                    Button(Class: btn-xs btn-link pull-right, Page: co_edit_name, PageParams: \"fnew=1\"){\r\n                        Span(Class: icon-plus fa-2x)\r\n                    }.Popup(45, \"APLA ™\")\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: List of Companies)\r\n                            Span(Class: pull-right pr-lg){\r\n                                Div(input-group stl-group-search){\r\n                                    Input(Name: search, Value: #search#, Class: input-search)\r\n                                    Div(input-group-btn){\r\n                                        If(#search#){\r\n                                            Button(Class: btn bg-gray-lighter fa fa-close btn-search, Page: shareholder_register)\r\n                                        }\r\n                                        Button(Class: btn bg-gray-lighter fa fa-search btn-search, Page: shareholder_register, PageParams: \"search=Val(search)\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(table-responsive){\r\n                            Div(table-noheader){\r\n                                Table(Source: src, Columns: \"=_name,=_adress,=_registration,=_license\").Style(\r\n                                    tbody > tr > td {\r\n                                        height: 170px;\r\n                                    }\r\n                                )\r\n                            }\r\n                            If(#count# == 0){\r\n                                Div(Class: text-center txt-absent, Body: Information is absent)\r\n                            }\r\n                        }.Style(\r\n                            height: 650px;\r\n                        )\r\n                    }\r\n                }              \r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "shareholder_settings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Form(stl-form){\r\n    Div(row){\r\n        Div(col-md-12 form-min-width pb pt txt-nowrap){\r\n            Span(Class: txt-hl-main ml-lg){\r\n                Settings\r\n            }\r\n            Div(pull-right pt-sm pr-lg){\r\n                Button(Class: btn-xs btn-link pull-right pr-lg, Page: settings_messenges){\r\n                    Span(Em(Class: icon-envelope-open)).Style(font-size: 20px;)\r\n                    Span(Class: ml-sm, Body: Support).Style(font-size: 22px;)\r\n                }\r\n            }\r\n        }\r\n        Div(row){\r\n            Div(col-md-12){\r\n                Div(panel panel-primary form-min-width){\r\n                    Div(panel-body){\r\n                        Div(bb pb){\r\n                            Span(Class: txt-hl-navigation ml-lg, Body: Platform Settings)\r\n\r\n                        }\r\n                    }\r\n                    DBFind(@1roles).Where({\"ecosystem\": #ecosystem_id#}).Count(all_roles_count)\r\n                    If(#all_roles_count# > 0){\r\n                        Div(Class: pt-lg pb-xl pl-lg preview-nowrap){\r\n                            Button(Class: btn-default-red ml-lg, Body: Stakeholders, Page: settings_sh_list)\r\n                            Button(Class: btn-default-red ml-lg, Body: System roles, Page: settings_roles_list)\r\n                            Button(Class: btn-default-red ml-lg, Body: Node list, Page: settings_nodes).Popup(45, \"APLA ™\")\r\n                        }\r\n                    }.Else{\r\n                        Div(Class: pl-xl pb-lg text-center){\r\n                            Button(Class: btn-default-red ml-lg, Body: Install, Page: shareholder_settings, Contract: @1RolesInstall)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "upload_excel",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    DBFind(\"@1applications\").Where({name:\"Companies Registry\"}).Vars(application)\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black, Body: Upload securities history)\r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12){\r\n            Input(Name: Data, Type: file)\r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Button(Body: \"Upload\", Class: btn btn-primary pull-right btn-blue, Contract: UploadFileExcel, Params: \"ApplicationId=#application_id#,CompanyId=#company_id#\", Page: upload_excel_success, PageParams:\"company_id=#company_id#,securities_id=#securities_id#,app_id=#application_id#\").Popup(45, \"APLA ™\")\r\n            Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: co_securities_history_list, PageParams: \"company_id=#company_id#,securities_id=#securities_id#\")\r\n            Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                Span(Class: text-muted mr-lg h4, Body: Step)\r\n                Em(Class: fa fa-dot-circle-o mr-sm)\r\n                Em(Class: fa fa-circle-o mr-sm)\r\n                Em(Class: fa fa-circle-o mr-sm)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "upload_excel_review_securites",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "SetVar(this_page, @1upload_excel_review_securites).(this_table, @1security_intermediate_data).(pager_limit, 3)\r\nInclude(cr_pager_header)\r\nDBFind(\"@1companies_securities\",Source: sct_mem).WhereId(#securities_id#).Vars(scr)\r\nForm(ml-lg mr-lg){\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black, Body: Review of securities data)\r\n        }\r\n    }\r\n    SetVar(where, {\"company_id\": #scr_company_id#, \"deleted\": 0, \"owner\": #scr_owner#})\r\n\r\n    DBFind(#this_table#, src).Columns(\"id,date,amount,comments,deleted,company_id,owner\").Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(_date){\r\n        Div(){\r\n            Div(pl pb pt-sm){\r\n                Div(preview-nowrap text-muted){\r\n                    DATE Em(Class: fa fa-caret-down)\r\n                }\r\n                Div(h4 text-bold pt-sm){\r\n                    P(Body: DateTime(#date#,YYYY.MM.DD))\r\n                }\r\n            }\r\n        }.Style(\r\n            height: 125px;\r\n            margin-top: 2px;\r\n        )\r\n    }.Custom(_amount){\r\n        Div(){\r\n            Div(pl pb pt-sm){\r\n                Div(preview-nowrap text-muted){\r\n                    AMOUNT Em(Class: fa fa-caret-down)\r\n                }\r\n                Div(h4 text-bold pt-sm){\r\n                    If(#amount# != NULL){\r\n                        P(Body: #amount#)\r\n                    }\r\n                }\r\n            }\r\n        }.Style(\r\n            height: 125px;\r\n            margin-top: 2px;\r\n        )\r\n    }.Custom(_comments){\r\n        Div(){\r\n            Div(pl pb pt-sm){\r\n                Div(preview-nowrap text-muted pr-lg){\r\n                    COMMENTS Em(Class: fa fa-caret-down pl-sm)\r\n                }\r\n                Div(h4 text-bold pt-sm){\r\n                    If(#comments# != \"\"){\r\n                        P(Class: preview, Body: #comments#).Style(\r\n                            max-height: 78px;\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }.Style(\r\n            height: 125px;\r\n            margin-top: 2px;\r\n        )\r\n    }.Count(count)\r\n\r\n    Div(row popup-min-width){\r\n        Div(col-md-12){\r\n            Table(src, \"=_date,=_amount,=_comments\")\r\n        }\r\n    }\r\n    Div(row mt-lg popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Include(cr_pager)\r\n            Button(Body: \"Confirm\", Class: btn btn-primary pull-right btn-blue, Contract: @1ExcelParseConfirm, Params: \"CompanyId=#scr_company_id#,MemberWallet=#scr_owner#,SecuritiesId=#securities_id#\", Page: @1co_securities_history_list, PageParams:\"company_id=#scr_company_id#,securities_id=#securities_id#\")\r\n            Button(Body: \"Reject\", Class: btn btn-default pull-right btn-grey mr-sm, Page: @1co_securities_history_list, PageParams:\"company_id=#scr_company_id#,securities_id=#securities_id#\")\r\n        }\r\n    }\r\n}.Style(\r\n    .preview {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: normal;\r\n    }\r\n    .preview-nowrap {\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n)",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "upload_excel_success",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Form(ml-lg mr-lg){\r\n    Div(row mt popup-min-width){\r\n        Div(col-md-12 text-center){\r\n            Span(Class: h2 text-bold text-black text-center, Body: File uploaded successfully)\r\n        }\r\n        Div(col-md-12 text-center mt){\r\n            Span(Class: h4 text-muted text-center, Body: Go to the Review section....)\r\n        }\r\n    }\r\n    Div(row mt-xl popup-min-width){\r\n        Div(col-md-12 mt){\r\n            Button(Body: \"Review\", Class: btn btn-primary pull-right btn-blue, Contract: ExcelParse, Params: \"CompanyId=#company_id#,ApplicationId=#app_id#,SecuritiesId=#securities_id#\", Page: upload_excel_review_securites, PageParams:\"company_id=#company_id#,securities_id=#securities_id#\").Popup(45, \"APLA ™\")\r\n            Button(Body: \"Back\", Class: btn btn-default pull-right btn-grey mr-sm, Page: upload_excel, PageParams:\"company_id=#company_id#,securities_id=#securities_id#\").Popup(45, \"APLA ™\")\r\n            Div(progress-wrapper pull-left mt-sm mr-sm text-muted){\r\n                Span(Class: text-muted mr-lg h4, Body: Step)\r\n                Em(Class: fa fa-dot-circle-o mr-sm)\r\n                Em(Class: fa fa-dot-circle-o mr-sm)\r\n                Em(Class: fa fa-circle-o mr-sm)\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "BDMeetingAccept",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDMeetingAccept {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    conditions {\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"Meeting is not found\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != 2 {\r\n            warning \"This meeting is not active\"\r\n        }\r\n\r\n        $company_id = Int(meeting[\"company_id\"])\r\n        $k_i = IdToAddress($key_id)\r\n\r\n        $participant_meeting = Int(DBFind(\"meetings_participants_bd\").Where({\"meeting_id\": $MeetingId, \"type\": \"meeting\", \"participant\": $k_i, \"decision\": 0}).One(\"id\"))\r\n        if $participant_meeting == 0 {\r\n            warning \"You are not a member of the meeting\"\r\n        }\r\n\r\n        $participant_role_meeting = Int(DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->member_id\": $key_id, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 6}).One(\"id\"))\r\n        if $participant_role_meeting == 0 {\r\n            warning \"You are not a shareholder of the company\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"decision\"] = 1\r\n        m[\"date_decision\"] = $block_time\r\n        DBUpdate(\"meetings_participants_bd\", Int($participant_meeting), m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDMeetingEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDMeetingEdit {\r\n    data {\r\n        Id int \"optional\"\r\n        CompanyId int\r\n        \r\n        MeetingFormat string\r\n        MeetingAgenda string\r\n        MeetingPlace string\r\n        MeetingInitiated string\r\n        MeetingDateFromD string\r\n        MeetingDateFromT string\r\n        MeetingDateUntilD string\r\n        MeetingDateUntilT string\r\n\r\n        AgendaIssuer string\r\n        AgendaLegalForm string\r\n        AgendaPlaceResults string\r\n        AgendaQuorum string\r\n        AgendaArr array\r\n        AgendaDescriptionArr array\r\n        AgendaDateFromD string\r\n        AgendaDateFromT string\r\n        AgendaDateUntilD string\r\n        AgendaDateUntilT string\r\n\r\n        Matters string\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n\r\n    func fixDatetimes() {\r\n        $MeetingDateFrom = UnixDateTime(dateAddTime($MeetingDateFromD, $MeetingDateFromT))\r\n        $MeetingDateUntil = UnixDateTime(dateAddTime($MeetingDateUntilD, $MeetingDateUntilT))\r\n        $AgendaDateFrom = UnixDateTime(dateAddTime($AgendaDateFromD, $AgendaDateFromT))\r\n        $AgendaDateUntil = UnixDateTime(dateAddTime($AgendaDateUntilD, $AgendaDateUntilT))\r\n    }\r\n\r\n    conditions {\r\n        $S_MEETING_WAITING = 1\r\n        $S_MEETING = 2\r\n        $S_VOTING_REJECTED = 3\r\n        $S_VOTING_WAITING = 4\r\n        $S_VOTING = 5\r\n        $S_VOTING_FINISHED = 6\r\n\r\n        // access check\r\n        if Int($Id) == 0 {\r\n            if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 6, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n                warning LangRes(\"@1access_denied\", \"en\")\r\n            }\r\n        } else {\r\n            $k_i = IdToAddress($key_id)\r\n            if !DBFind(\"meetings_bd\").Where({\"id\": $Id, \"meeting->initiated\": $k_i}).Row() {\r\n                warning LangRes(\"@1access_denied\", \"en\")\r\n            }\r\n        }\r\n\r\n        fixDatetimes()\r\n    }\r\n    \r\n    action {\r\n        var m map\r\n\r\n        if Int($Id) == 0 {\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"date_created\"] = $block_time\r\n            m[\"status\"] = $S_MEETING_WAITING\r\n        }\r\n\r\n        m[\"matters\"] = $Matters\r\n        \r\n        m[\"meeting->format\"] = $MeetingFormat\r\n        m[\"meeting->agenda\"] = $MeetingAgenda\r\n        m[\"meeting->place\"] = $MeetingPlace\r\n        if Int($Id) == 0 {\r\n            m[\"meeting->initiated\"] = $MeetingInitiated\r\n        }\r\n        m[\"meeting->date_from\"] = $MeetingDateFrom\r\n        m[\"meeting->date_until\"] = $MeetingDateUntil\r\n\r\n        if Int($Id) == 0 {\r\n            m[\"agenda->issuer\"] = $AgendaIssuer\r\n        }\r\n        m[\"agenda->legal_form\"] = $AgendaLegalForm\r\n        m[\"agenda->place_results\"] = $AgendaPlaceResults\r\n        m[\"agenda->quorum\"] = $AgendaQuorum\r\n        m[\"agenda->date_from\"] = $AgendaDateFrom\r\n        m[\"agenda->date_until\"] = $AgendaDateUntil\r\n\r\n        var i int a_arr array\r\n        while i < Len($AgendaArr) {\r\n            var point map\r\n            point[\"agenda\"] = Str($AgendaArr[i])\r\n            point[\"description\"] = Str($AgendaDescriptionArr[i])\r\n            point[\"yes\"] = \"0\"\r\n            point[\"no\"] = \"0\"\r\n            a_arr = Append(a_arr, JSONEncode(point))\r\n            i = i + 1\r\n        }\r\n        var str_arr string\r\n        str_arr = JSONEncode(a_arr)\r\n        str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n        str_arr = Replace(str_arr, `\"{`, `{`)\r\n        str_arr = Replace(str_arr, `}\"`, `}`)\r\n        m[\"points\"] = str_arr\r\n\r\n        if Int($Id) == 0 {\r\n            $new_id = DBInsert(\"meetings_bd\", m)\r\n        } else {\r\n            DBUpdate(\"meetings_bd\", Int($Id), m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDMeetingReject",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDMeetingReject {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    conditions {\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"Meeting is not found\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != 2 {\r\n            warning \"This meeting is not active\"\r\n        }\r\n\r\n        $company_id = Int(meeting[\"company_id\"])\r\n        $k_i = IdToAddress($key_id)\r\n\r\n        $participant_meeting = Int(DBFind(\"meetings_participants_bd\").Where({\"meeting_id\": $MeetingId, \"type\": \"meeting\", \"participant\": $k_i, \"decision\": 0}).One(\"id\"))\r\n        if $participant_meeting == 0 {\r\n            warning \"You are not a member of the meeting\"\r\n        }\r\n\r\n        $participant_role_meeting = Int(DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->member_id\": $key_id, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 6}).One(\"id\"))\r\n        if $participant_role_meeting == 0 {\r\n            warning \"You are not a shareholder of the company\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"decision\"] = -1\r\n        m[\"date_decision\"] = $block_time\r\n        DBUpdate(\"meetings_participants_bd\", Int($participant_meeting), m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDMeetingStart",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDMeetingStart {\n    data {\n        MeetingId int\n    }\n\n    func getPermission() {\n        var array_permissions array result i int prevContract string\n        array_permissions = [\"@1BDMeetingStatusUpdate\"]\n\n        prevContract = $stack[0]\n        if Len($stack) > 2 {\n            prevContract = $stack[Len($stack) - 2]\n        }\n        while i < Len(array_permissions) {\n            var contract_name string\n            contract_name = array_permissions[i]\n            if contract_name==prevContract {\n                result = 1\n            }\n            i = i + 1\n        }\n\n        if result == 0 {\n            warning \"Access is denied. Meeting can not be started\"\n        }\n    }\n\n    conditions {\n        getPermission()\n\n        var meeting map\n        meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Row()\n        if !meeting {\n            warning \"Meeting is not found\"\n        }\n\n        $company_id = Int(meeting[\"company_id\"])\n    }\n\n    action {\n        var participants array i int part map\n        participants = DBFind(\"@1roles_participants\").Columns(\"member->member_id\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $company_id, \"role->type\": 6, \"deleted\": 0})\n\n        while i < Len(participants) {\n            part = participants[i]\n\n            var m map\n            m[\"meeting_id\"] = $MeetingId\n            m[\"participant\"] = IdToAddress(Int(part[\"member.member_id\"]))\n            m[\"type\"] = \"meeting\"\n            DBInsert(\"meetings_participants_bd\", m)\n\n            i = i + 1\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDVotingStop",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDVotingStop {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getSummPoints(k string point_index int) int {\r\n        var summ int\r\n\r\n        var participants array j int participant map\r\n        if k == \"accepted\" {\r\n            participants = DBFind(\"meetings_participants_bd\").Where({\"meeting_id\": $MeetingId, \"decision\": {\"$gt\": 0}, \"point_index\": point_index, \"type\": \"voting\"})\r\n        }\r\n        if k == \"rejected\" {\r\n            participants = DBFind(\"meetings_participants_bd\").Where({\"meeting_id\": $MeetingId, \"decision\": {\"$lt\": 0}, \"point_index\": point_index, \"type\": \"voting\"})\r\n        }\r\n\r\n        while j < Len(participants) {\r\n            participant = participants[j]\r\n            summ = summ + Int(participant[\"decision\"])\r\n            j = j + 1\r\n        }\r\n\r\n        return summ\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1BDMeetingStatusUpdate\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"Access is denied. Voting can not be stopped\"\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        $meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Columns(\"points,agenda->quorum\").Row()\r\n        if !$meeting {\r\n            warning \"Meeting is not found\"\r\n        }\r\n\r\n        $quorum = Int($meeting[\"agenda.quorum\"])\r\n    }\r\n\r\n    action {\r\n        var i int a_arr array\r\n        a_arr = JSONDecode($meeting[\"points\"])\r\n        while i < Len(a_arr) {\r\n            var point map\r\n            point = a_arr[i]\r\n\r\n            var points_accepted points_rejected points_all int\r\n            points_accepted = 1 * getSummPoints(\"accepted\", i)\r\n            points_rejected = -1 * getSummPoints(\"rejected\", i)\r\n            points_all = points_accepted + points_rejected\r\n\r\n            var percent_accepted percent_rejected float\r\n            if points_all > 0 {\r\n                percent_accepted = Float(points_accepted) * Float(100) / Float(points_all)\r\n                percent_rejected = Float(points_rejected) * Float(100) / Float(points_all)\r\n            } else {\r\n                percent_accepted = 0\r\n                percent_rejected = 0\r\n            }\r\n\r\n            point[\"yes\"] = points_accepted\r\n            point[\"no\"] = points_rejected\r\n            point[\"percent_yes\"] = percent_accepted\r\n            point[\"percent_no\"] = percent_rejected\r\n            point[\"decision\"] = \"rejected\"\r\n\r\n            if $quorum == 1  { // 30%\r\n                if percent_accepted > Float(30) {\r\n                    point[\"decision\"] = \"accepted\"\r\n                }\r\n            }\r\n            if $quorum == 2  { // 50%\r\n                if percent_accepted > Float(50) {\r\n                    point[\"decision\"] = \"accepted\"\r\n                }\r\n            }\r\n            if $quorum == 3  { // 75%\r\n                if percent_accepted > Float(75) {\r\n                    point[\"decision\"] = \"accepted\"\r\n                }\r\n            }\r\n\r\n            i = i + 1\r\n        }\r\n\r\n        var str_arr string m map\r\n        str_arr = JSONEncode(a_arr)\r\n        str_arr = Replace(str_arr, `\\\"`, `\"`)\r\n        str_arr = Replace(str_arr, `\"{`, `{`)\r\n        str_arr = Replace(str_arr, `}\"`, `}`)\r\n        m[\"points\"] = str_arr\r\n\r\n        DBUpdate(\"meetings_bd\", $MeetingId, m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDMeetingStop",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDMeetingStop {\n    data {\n        MeetingId int\n    }\n\n    func getPermission() {\n        var array_permissions array result i int prevContract string\n        array_permissions = [\"@1BDMeetingStatusUpdate\"]\n\n        prevContract = $stack[0]\n        if Len($stack) > 2 {\n            prevContract = $stack[Len($stack) - 2]\n        }\n        while i < Len(array_permissions) {\n            var contract_name string\n            contract_name = array_permissions[i]\n            if contract_name==prevContract {\n                result = 1\n            }\n            i = i + 1\n        }\n\n        if result == 0 {\n            warning \"Access is denied. Meeting can not be stopped\"\n        }\n    }\n\n    conditions {\n        getPermission()\n    }\n\n    action {\n        var summ int \n\n        var participants array i int part map\n        participants = DBFind(\"meetings_participants_bd\").Columns(\"decision\").Where({\"meeting_id\": $MeetingId, \"type\": \"meeting\"})\n\n        while i < Len(participants) {\n            part = participants[i]\n            summ = summ + Int(part[\"decision\"])\n            i = i + 1\n        }\n\n        $result = summ\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDVotingAccept",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDVotingAccept {\r\n    data {\r\n        MeetingId int\r\n        PointIndex int\r\n    }\r\n\r\n    conditions {\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"Meeting is not found\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != 5 {\r\n            warning \"This voting is not active\"\r\n        }\r\n\r\n        $company_id = Int(meeting[\"company_id\"])\r\n        $k_i = IdToAddress($key_id)\r\n\r\n        $participant_meeting = Int(DBFind(\"meetings_participants_bd\").Where({\"meeting_id\": $MeetingId, \"type\": \"voting\", \"participant\": $k_i, \"decision\": 0, \"point_index\": $PointIndex}).One(\"id\"))\r\n        if $participant_meeting == 0 {\r\n            warning \"You are not a member of the meeting\"\r\n        }\r\n\r\n        $participant_role_meeting = Int(DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->member_id\": $key_id, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 5}).One(\"id\"))\r\n        if $participant_role_meeting == 0 {\r\n            warning \"You are not a shareholder of the company\"\r\n        }\r\n\r\n        $my_balance = Int(DBFind(\"companies_securities\").Where({\"company_id\": $company_id, \"owner\": $k_i, \"deleted\": 0}).One(\"balance\"))\r\n        if Int($my_balance) <= 0 {\r\n            warning Sprintf(\"Your securities balance: %v. You can not vote\", $my_balance)\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"decision\"] = 1 * $my_balance\r\n        m[\"date_decision\"] = $block_time\r\n        DBUpdate(\"meetings_participants_bd\", Int($participant_meeting), m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDVotingReject",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDVotingReject {\r\n    data {\r\n        MeetingId int\r\n        PointIndex int\r\n    }\r\n\r\n    conditions {\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"Meeting is not found\"\r\n        }\r\n\r\n        if Int(meeting[\"status\"]) != 5 {\r\n            warning \"This voting is not active\"\r\n        }\r\n\r\n        $company_id = Int(meeting[\"company_id\"])\r\n        $k_i = IdToAddress($key_id)\r\n\r\n        $participant_meeting = Int(DBFind(\"meetings_participants_bd\").Where({\"meeting_id\": $MeetingId, \"type\": \"voting\", \"participant\": $k_i, \"decision\": 0, \"point_index\": $PointIndex}).One(\"id\"))\r\n        if $participant_meeting == 0 {\r\n            warning \"You are not a member of the meeting\"\r\n        }\r\n\r\n        $participant_role_meeting = Int(DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"member->member_id\": $key_id, \"deleted\": 0, \"role->company_id\": $company_id, \"role->type\": 5}).One(\"id\"))\r\n        if $participant_role_meeting == 0 {\r\n            warning \"You are not a shareholder of the company\"\r\n        }\r\n\r\n        $my_balance = Int(DBFind(\"companies_securities\").Where({\"company_id\": $company_id, \"owner\": $k_i, \"deleted\": 0}).One(\"balance\"))\r\n        if Int($my_balance) <= 0 {\r\n            warning Sprintf(\"Your securities balance: %v. You can not vote\", $my_balance)\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"decision\"] = -1 * $my_balance\r\n        m[\"date_decision\"] = $block_time\r\n        DBUpdate(\"meetings_participants_bd\", Int($participant_meeting), m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDVotingStart",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDVotingStart {\r\n    data {\r\n        MeetingId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1BDMeetingStatusUpdate\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"Access is denied. Voting can not be started\"\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        getPermission()\r\n\r\n        var meeting map\r\n        meeting = DBFind(\"meetings_bd\").Where({\"id\": $MeetingId}).Row()\r\n        if !meeting {\r\n            warning \"Meeting is not found\"\r\n        }\r\n\r\n        $company_id = Int(meeting[\"company_id\"])\r\n\r\n        var points array\r\n        points = JSONDecode(meeting[\"points\"])\r\n        $number_of_points = Len(points)\r\n    }\r\n\r\n    action {\r\n        var participants array i j int part map\r\n        participants = DBFind(\"@1roles_participants\").Columns(\"member->member_id\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $company_id, \"role->type\": 5, \"deleted\": 0})\r\n\r\n        while i < Len(participants) {\r\n            part = participants[i]\r\n\r\n            j = 0\r\n            while j < $number_of_points {\r\n                var m map\r\n                m[\"point_index\"] = j\r\n                m[\"meeting_id\"] = $MeetingId\r\n                m[\"participant\"] = IdToAddress(Int(part[\"member.member_id\"]))\r\n                m[\"type\"] = \"voting\"\r\n                DBInsert(\"meetings_participants_bd\", m)\r\n                j = j + 1\r\n            }\r\n\r\n            i = i + 1\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BDMeetingStatusUpdate",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BDMeetingStatusUpdate {\n    data {}\n\n    func changeStatus(from, to map) {\n        var requests array i int req map\n        requests = DBFind(\"meetings_bd\").Where(from)\n\n        while i < Len(requests) {\n            req = requests[i]\n\n            var to_new map\n            to_new[\"status\"] = to[\"status\"]\n\n            if to[\"status\"] == $S_MEETING {\n                BDMeetingStart(\"MeetingId\", Int(req[\"id\"]))\n            }\n\n            if to[\"status\"] == $S_VOTING_WAITING {\n                var res int\n                res = BDMeetingStop(\"MeetingId\", Int(req[\"id\"]))\n                if res <= 0 {\n                    to_new[\"status\"] = $S_VOTING_REJECTED\n                }\n            }\n\n            if to[\"status\"] == $S_VOTING {\n                BDVotingStart(\"MeetingId\", Int(req[\"id\"]))\n            }\n\n            if to[\"status\"] == $S_VOTING_FINISHED {\n                BDVotingStop(\"MeetingId\", Int(req[\"id\"]))\n            }\n\n            DBUpdate(\"meetings_bd\", Int(req[\"id\"]), to_new)\n            i = i + 1\n        }\n    }\n\n    conditions {\n        $S_MEETING_WAITING = 1\n        $S_MEETING = 2\n        $S_VOTING_REJECTED = 3\n        $S_VOTING_WAITING = 4\n        $S_VOTING = 5\n        $S_VOTING_FINISHED = 6\n\n        // get the App\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\n        // get the AppParam\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\n        // get the arrays\n        var rids_law_firm_junior rids_law_firm_partner array\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\n\n        // access check\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\n            warning LangRes(\"@1access_denied\", \"en\")\n        }\n    }\n\n    action {\n        var t map\n        t[\"date_created\"] = BlockTime()\n        DBInsert(\"timer_test\", t)\n\n        //setting status VOTING_FINISHED\n        changeStatus({\"status\": $S_VOTING, \"agenda->date_until\": {\"$lte\": $block_time}}, {\"status\": $S_VOTING_FINISHED})\n\n        //setting status VOTING\n        changeStatus({\"status\": $S_VOTING_WAITING, \"agenda->date_from\": {\"$lte\": $block_time}}, {\"status\": $S_VOTING})\n\n        //setting status VOTING_WAITING\n        changeStatus({\"status\": $S_MEETING, \"meeting->date_until\": {\"$lte\": $block_time}}, {\"status\": $S_VOTING_WAITING})\n\n        //setting status MEETING\n        changeStatus({\"status\": $S_MEETING_WAITING, \"meeting->date_from\": {\"$lte\": $block_time}}, {\"status\": $S_MEETING})\n\n        $result = BlockTime()\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "BufferManager",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BufferManager {\r\n    data {\r\n        Action string\r\n        Key string\r\n        Val string \"optional\"\r\n    }\r\n\r\n    func decodeArray(s string) array {\r\n        var ar array\r\n        if HasPrefix($buf[\"value\"], \"[\") {\r\n            ar = JSONDecode($buf[\"value\"])\r\n        }\r\n        return ar\r\n    }\r\n\r\n    action {\r\n        $emptyVal = JSONEncode(\"\")\r\n        $buf = DBFind(\"@1buffer_data\").Where({\"ecosystem\": $ecosystem_id, \"key\": $Key, \"member_id\": $key_id}).Row()\r\n        if !$buf {\r\n            var buf map, id int\r\n            id = DBInsert(\"@1buffer_data\", {ecosystem:$ecosystem_id, key:$Key, value:$emptyVal, member_id:$key_id})\r\n            buf[\"id\"] = Str(id)\r\n            buf[\"value\"] = \"\"\r\n            buf[\"member_id\"] = Str($key_id)\r\n            buf[\"key\"] = Str($Key)\r\n            $buf = buf\r\n        }\r\n        var id int\r\n        id = Int($buf[\"id\"])\r\n        if $Action == \"clean\" {\r\n            DBUpdate(\"@1buffer_data\", id, {value:$emptyVal})\r\n        }\r\n        if $Action == \"set\" {\r\n            DBUpdate(\"@1buffer_data\", id, {value:$Val})\r\n        }\r\n        if $Action == \"array_add_value\" {\r\n            var ar array enc string\r\n            ar = decodeArray($buf[\"value\"])\r\n            ar = Append(ar, $Val)\r\n            enc = JSONEncode(ar)\r\n            DBUpdate(\"@1buffer_data\", id, {value:enc})\r\n        }\r\n        if $Action == \"array_remove_value\" {\r\n            var ar arNew array i int enc string\r\n            ar = decodeArray($buf[\"value\"])\r\n            while i < Len(ar){\r\n                if ar[i] != $Val{\r\n                    arNew = Append(arNew, ar[i])\r\n                }\r\n                i = i + 1\r\n            }\r\n            enc = JSONEncode(arNew)\r\n            DBUpdate(\"@1buffer_data\", id, {value:enc})\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "BufferFileUpload",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BufferFileUpload {\r\n    data {\r\n        AppId int\r\n        BufferKey string\r\n        FileName string \"optional\"\r\n        FileData file\r\n    }\r\n\r\n    conditions {\r\n        var app_id int\r\n        app_id = DBFind(\"@1applications\").Where({\"id\": $AppId, \"deleted\": 0}).One(\"id\")\r\n        if !app_id {\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n        if $BufferKey == \"\" {\r\n            warning LangRes(\"@1buffer_key_empty\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var buffer_data map\r\n        if $FileName != \"\" {\r\n            buffer_data[\"binary_id\"] = @1UploadFile(\"Name,Data,ApplicationId\", $FileName, $FileData, Int($AppId))\r\n        } else {\r\n            buffer_data[\"binary_id\"] = @1UploadFile(\"Data,ApplicationId\", $FileData, Int($AppId))\r\n        }\r\n        @1BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "BufferOrders",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract BufferOrders {\r\n    data {\r\n        PreviousOwner int \"optional\"\r\n        NewOwner int \"optional\"\r\n        CompanyId int \"optional\"\r\n    }\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n\r\n        if $PreviousOwner {\r\n            $PreviousOwnerAddress = IdToAddress($PreviousOwner)\r\n            if !DBFind(\"@1companies_list\").Where({\"id\":$CompanyId,\"deleted\":0}) {\r\n                warning \"Company not found\"\r\n            }\r\n            if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->member_id\": $PreviousOwner, \"deleted\": 0}).Row() {\r\n                warning \"The previous owner of the securities was not found in the company\"\r\n            }\r\n            if !DBFind(\"@1companies_securities\").Where({\"company_id\": $CompanyId,\"owner\":$PreviousOwnerAddress}).Row() {\r\n                warning \"Securities ID previous owner not found\"\r\n            }\r\n        }\r\n\r\n        if $NewOwner {\r\n            $NewOwnerAddress = IdToAddress($NewOwner)\r\n            if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->member_id\": $NewOwner, \"deleted\": 0}).Row() {\r\n                warning \"The new owner of the securities was not found in the company\"\r\n            }\r\n            if !DBFind(\"@1companies_securities\").Where({\"company_id\": $CompanyId,\"owner\":$NewOwnerAddress}).Row() {\r\n                warning \"Securities ID new owner not found\"\r\n            }\r\n        }\r\n    }\r\n    action {\r\n        var buffer_data map\r\n        $BufferKey = \"orders_info\"\r\n        if $PreviousOwner {\r\n            buffer_data[\"previous_owner\"] = $PreviousOwner\r\n            @1BufferManager(\"Action,Key\", \"clean\", $BufferKey)\r\n            @1BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        } elif $NewOwner {\r\n            $buf = DBFind(\"@1buffer_data\").Columns(\"id,ecosystem,key,member_id,value->previous_owner\").Where({\"ecosystem\": $ecosystem_id, \"key\": $BufferKey, \"member_id\": $key_id}).Row()\r\n            buffer_data[\"previous_owner\"] = $buf[\"value.previous_owner\"]\r\n            buffer_data[\"new_owner\"] = $NewOwner\r\n            @1BufferManager(\"Action,Key,Val\", \"set\", $BufferKey, JSONEncode(buffer_data))\r\n        } else {\r\n            @1BufferManager(\"Action,Key\", \"clean\", $BufferKey)\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "CompaniesRegistrySettingsRoles",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CompaniesRegistrySettingsRoles {\n    data {\n        RoleLawFirmJunior int\n        RoleLawFirmPartner int\n    }\n\n    conditions {\n        AdminCondition()\n    }\n\n    func updateParam(name string, value int) {\n        if value > 0 {\n            var param paramsNew map\n            if $app_id > 0 {\n                param = DBFind(\"@1app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app_id, \"name\": name}).Row()\n                if param {\n                    paramsNew[\"Id\"] = Int(param[\"id\"])\n                    paramsNew[\"Value\"] = Str(value)\n                    paramsNew[\"Conditions\"] = param[\"conditions\"]\n                    CallContract(\"@1EditAppParam\", paramsNew)\n                } else {\n                    paramsNew[\"ApplicationId\"] = $app_id\n                    paramsNew[\"Name\"] = name\n                    paramsNew[\"Value\"] = Str(value)\n                    paramsNew[\"Conditions\"] = \"ContractConditions(\\\"AdminCondition\\\")\"\n                    CallContract(\"@1NewAppParam\", paramsNew)\n                }\n            } else {\n                warning LangRes(\"@1app_not_found\", \"en\")\n            }\n        }\n    }\n\n    action {\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\n        updateParam(\"role_law_firm_junior\", $RoleLawFirmJunior)\n        updateParam(\"role_law_firm_partner\", $RoleLawFirmPartner)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "CompanyApprov",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CompanyApprov {\n    data {\n        Id int\n        Step int\n    }\n\n    conditions {\n        // get the App\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\n        // get the AppParam\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\n        // get the arrays\n        var rids_law_firm_junior rids_law_firm_partner array\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\n\n        // access check\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\n            warning LangRes(\"@1access_denied\", \"en\")\n        }\n    }\n\n    action {\n        var m map\n        if Int($Step) == 1 {\n            m[\"approval_flags->name\"] = 1\n        }\n        if Int($Step) == 2 {\n            m[\"approval_flags->legal\"] = 1\n        }\n        if Int($Step) == 3 {\n            m[\"approval_flags->address\"] = 1\n        }\n        if Int($Step) == 4 {\n            m[\"approval_flags->registration\"] = 1\n        }\n        if Int($Step) == 5 {\n            m[\"approval_flags->license\"] = 1\n        }\n        DBUpdate(\"companies_list\", Int($Id), m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesCreate",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract RolesCreate {\r\n    data {\r\n        Name string\r\n        Type int\r\n        CompanyId int \"optional\"\r\n    }\r\n\r\n    func getMemberInfo(kid int) map {\r\n        var res member map\r\n        member = DBFind(\"@1members\").Where({\"ecosystem\": $ecosystem_id, \"id\": kid}).Row()\r\n        if member {\r\n            res[\"member_id\"] = member[\"id\"]\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            member = DBFind(\"@1keys\").Where({\"ecosystem\": $ecosystem_id, \"id\": kid}).Row()\r\n            if member {\r\n                res[\"member_id\"] = member[\"id\"]\r\n                res[\"member_name\"] = IdToAddress(Int(member[\"id\"]))\r\n                res[\"image_id\"] = 0\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    conditions {\r\n        $system_app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"System\"}).One(\"id\")\r\n        // system role\r\n        if $Type == 3 {\r\n            warning LangRes(\"@1system_role_can_not_create\", \"en\")\r\n        }\r\n\r\n        // check role_creates_roles\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->type\": 3, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n        \r\n        if $Name == DBFind(\"@1roles\").Where({\"ecosystem\": $ecosystem_id, \"role_name\": $Name}).One(\"role_name\") {\r\n            warning LangRes(\"@1role_exists\", \"en\")\r\n        }\r\n        if Size($Name) < 3 || Size($Name) > 30 {\r\n            warning LangRes(\"@1name\", \"en\") + \" \" + LangRes(\"@1validate_role_name\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var roles_access_arr array, buffer map\r\n        buffer = DBFind(\"@1buffer_data\").Where({\"ecosystem\": $ecosystem_id, \"member_id\": $key_id, \"key\": \"roles_access\"}).Columns(\"id,value,value->roles_access\").Row()\r\n        if buffer {\r\n            roles_access_arr = JSONDecode(buffer[\"value.roles_access\"])\r\n            var filled map\r\n            filled[\"roles_access\"] = []\r\n            filled[\"role_name\"] = \"\"\r\n            filled[\"role_type\"] = \"\"\r\n            DBUpdate(\"@1buffer_data\", Int(buffer[\"id\"]), {\"value\": filled})\r\n        }\r\n        var m map\r\n        m[\"creator\"] = getMemberInfo($key_id)\r\n        m[\"role_name\"] = $Name\r\n        m[\"role_type\"] = $Type\r\n        m[\"date_created\"] = $block_time\r\n        m[\"roles_access\"] = JSONEncode(roles_access_arr)\r\n        m[\"ecosystem\"] = $ecosystem_id\r\n        m[\"company_id\"] = $CompanyId\r\n        $result = DBInsert(\"@1roles\", m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "ExcelParse",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract ExcelParse {\r\n    data {\r\n        CompanyId int\r\n        ApplicationId int\r\n        SecuritiesId int\r\n    }\r\n\r\n    func parseName(rows array) map {\r\n        var i int row array line_name sharholder_wallet string\r\n\r\n        i = 0\r\n        while true {\r\n            row = rows[i]\r\n            line_name = Str(row[0])\r\n            if line_name == \"Wallet\" {\r\n                sharholder_wallet = Str(row[1])\r\n                return sharholder_wallet\r\n                break\r\n            } else {\r\n                if i > 50 {\r\n                    warning LangRes(\"@1column_wallet_not_found\", \"en\")\r\n                } else {\r\n                    i = i + 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    func parseColumns(rows array) map {\r\n        var i l int row row_col line_value array line_name col_name string columns_info map\r\n\r\n        i = 0\r\n        while true {\r\n            row = rows[i]\r\n            line_name = Str(row[0])\r\n            if line_name == \"Date\" {\r\n                columns_info[\"column_date\"] = 0\r\n                columns_info[\"line_date\"] = i\r\n                $columnCount = Len(rows[i])\r\n                line_value = rows[i]\r\n                l = 0\r\n                while l < Int($columnCount) {\r\n                    row_col = line_value[l]\r\n                    if row_col == \"Amount\" {\r\n                        columns_info[\"column_amount\"] = l\r\n                    }\r\n\r\n                    if row_col == \"Comments\" {\r\n                        columns_info[\"column_comments\"] = l\r\n                    }\r\n                    l = l + 1\r\n                }\r\n                if Str(columns_info[\"column_amount\"]) == \"\" {\r\n                    warning LangRes(\"@1column_amount_not_found\", \"en\")\r\n                }\r\n                if Str(columns_info[\"column_comments\"]) == \"\" {\r\n                    warning LangRes(\"@1column_comments_not_found\", \"en\")\r\n                }\r\n                return columns_info\r\n            } else {\r\n                if i > 50 {\r\n                    if Str(columns_info[\"line_date\"]) == \"\" {\r\n                        warning LangRes(\"@1column_date_not_found\", \"en\")\r\n                    }\r\n                    break\r\n                } else {\r\n                    i = i + 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    func parseData(rows array, count int, columns_info map, sharholder_wallet string) map {\r\n        var i line_amount int row array line_date map\r\n        $start_data_line = Int(columns_info[\"line_date\"]) + 1\r\n        i = Int($start_data_line)\r\n        while i < count {\r\n            row = rows[i]\r\n            line_date[\"date\"] = Str(row[Int(columns_info[\"column_date\"])])\r\n            line_date[\"date\"] = Int((line_date[\"date\"] - 25569) * 86400)\r\n            line_amount = Str(row[Int(columns_info[\"column_amount\"])])\r\n            line_amount = Int(Str(Replace(line_amount, \".\", \"\")))\r\n            line_date[\"amount\"] = line_amount\r\n            line_date[\"comments\"] = Str(row[Int(columns_info[\"column_comments\"])])\r\n            line_date[\"owner\"] = sharholder_wallet\r\n            line_date[\"company_id\"] = $CompanyId\r\n            line_date[\"manager\"] = IdToAddress($key_id)\r\n            line_date[\"securities_id\"] = $SecuritiesId\r\n            DBInsert(\"@1security_intermediate_data\",line_date)\r\n            i = i + 1\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        $check_binary = Int(DBFind(\"@1binaries\").Where({\"name\":\"security_sharholders_excel\",\"member_id\":$key_id,\"ecosystem\":$ecosystem_id,\"app_id\":$ApplicationId}).One(\"id\"))\r\n        if $check_binary == 0 {\r\n            warning LangRes(\"@1file\", \"en\") + \" \" + LangRes(\"@1not_found\", \"en\")\r\n        }\r\n        $BinId = $check_binary\r\n    }\r\n\r\n    action {\r\n        var line count sheet sharholder_id int rows array sharholder_wallet string columns_info map\r\n        sheet = 1\r\n        count = Int(Str(GetRowsCountXLSX($BinId, sheet)))\r\n        rows = GetDataFromXLSX($BinId, line, count, sheet)\r\n        sharholder_wallet = parseName(rows)\r\n        sharholder_id = AddressToId(sharholder_wallet)\r\n        $check_member = DBFind(\"@1keys\").WhereId(sharholder_id)\r\n        if $check_member {\r\n            $check_security_owner = Int(AddressToId(DBFind(\"@1companies_securities\").WhereId($SecuritiesId).One(\"owner\")))\r\n            if Int($check_security_owner) != Int(sharholder_id) {\r\n                warning LangRes(\"@1sharholdes_different_address\", \"en\")\r\n            }\r\n            columns_info = parseColumns(rows)\r\n            $st = parseData(rows,count,columns_info,sharholder_wallet)\r\n        } else{\r\n            warning LangRes(\"@1member_not_found\", \"en\")\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesHistoryRecount",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesHistoryRecount {\r\n    data {\r\n        SecuritiesId int\r\n    }\r\n\r\n    func getPermission() {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1SecuritiesHistoryEdit\",\"@1SecuritiesTransfer\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning \"Balance recount cannot be performed\"\r\n        }\r\n    }\r\n\r\n\r\n    conditions {\r\n        getPermission()\r\n    }\r\n\r\n    action {\r\n        var securities array\r\n        securities = DBFind(\"companies_securities_history\").Where({\"security_id\": $SecuritiesId}).Columns(\"id,order_amount,order_type\").Order(\"id\")\r\n\r\n        var i history_balance int\r\n        while i < Len(securities) {\r\n            var security map\r\n            security = securities[i]\r\n\r\n            if Int(security[\"order_type\"]) == 1 {\r\n                history_balance = history_balance + Int(security[\"order_amount\"])\r\n            } else {\r\n                history_balance = history_balance - Int(security[\"order_amount\"])\r\n            }\r\n\r\n            DBUpdate(\"companies_securities_history\", Int(security[\"id\"]), {\"history_balance\": history_balance})\r\n            i = i + 1\r\n        }\r\n\r\n        DBUpdate(\"companies_securities\", $SecuritiesId, {\"balance\": history_balance})\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "FormStateSave",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract FormStateSave {\r\n    data {\r\n        FormName string\r\n        ParamNames string\r\n        Param1 string \"optional\"\r\n        Param2 string \"optional\"\r\n        Param3 string \"optional\"\r\n        Param4 string \"optional\"\r\n        Param5 string \"optional\"\r\n        Param6 string \"optional\"\r\n        Param7 string \"optional\"\r\n        Param8 string \"optional\"\r\n        Param9 string \"optional\"\r\n        Param10 string \"optional\"\r\n        Param11 string \"optional\"\r\n        Param12 string \"optional\"\r\n        Param13 string \"optional\"\r\n        Param14 string \"optional\"\r\n        Param15 string \"optional\"\r\n        Param16 string \"optional\"\r\n        Param17 string \"optional\"\r\n        Param18 string \"optional\"\r\n        Param19 string \"optional\"\r\n        Param20 string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        if $FormName == \"\" {\r\n            warning LangRes(\"@1form_state_name_needed\", \"en\")\r\n        }\r\n        if $ParamNames == \"\" {\r\n            warning LangRes(\"@1form_state_param_names_needed\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var values string\r\n        values = $Param1+\";\"+$Param2+\";\"+ $Param3+\";\"+ $Param4+\";\"+ $Param5+\";\"+ $Param6+\";\"+$Param7+\";\"+$Param8+\";\"+$Param9+\";\"+$Param10+\";\"+$Param11+\";\"+$Param12+\";\"+$Param13+\";\"+ $Param14+\";\"+ $Param15+\";\"+ $Param16+\";\"+$Param17+\";\"+$Param18+\";\"+$Param19+\";\"+$Param20\r\n        $ParamValue = Split(values, \";\")\r\n        $ParamName = Split($ParamNames, \";\")\r\n        var buffer_data map, i int\r\n        i = 0\r\n        while i < Len($ParamName) {\r\n            buffer_data[$ParamName[i]] = $ParamValue[i]\r\n            i = i + 1\r\n        }\r\n        @1BufferManager(\"Action,Key,Val\", \"set\", $FormName, JSONEncode(buffer_data))\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "UploadBinary",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract UploadBinary {\r\n    data {\r\n        ApplicationId int\r\n        Name string\r\n        Data bytes\r\n        DataMimeType string \"optional\"\r\n        MemberId int \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        if $MemberId != 0 {\r\n            $UserID = Int($MemberId)\r\n        } else {\r\n            $UserID = $key_id\r\n        }\r\n\r\n        $Id = Int(DBFind(\"@1binaries\").Columns(\"id\").Where({\"app_id\": $ApplicationId, \"member_id\": $UserID, \"name\": $Name, \"ecosystem\": $ecosystem_id}).One(\"id\"))\r\n\r\n        if $Id == 0 {\r\n            if $ApplicationId == 0 {\r\n                warning LangRes(\"@1aid_cannot_zero\", \"en\")\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var hash string\r\n        hash = Hash($Data)\r\n\r\n        if $DataMimeType == \"\" {\r\n            $DataMimeType = \"application/octet-stream\"\r\n        }\r\n\r\n        if $Id != 0 {\r\n            DBUpdate(\"@1binaries\", $Id, {\"data\": $Data, \"hash\": hash, \"mime_type\": $DataMimeType})\r\n        } else {\r\n            $Id = DBInsert(\"@1binaries\", {\"app_id\": $ApplicationId, \"member_id\": $UserID, \"name\": $Name, \"data\": $Data, \"hash\": hash, \"mime_type\": $DataMimeType, \"ecosystem\": $ecosystem_id})\r\n        }\r\n\r\n        $result = $Id\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsProcess",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract NotificationsProcess {\r\n    data {\r\n        NotificId int\r\n    }\r\n\r\n    func getMemberInfo(kid int) map {\r\n        var res member map\r\n        member = DBFind(\"@1members\").Where({\"ecosystem\": $ecosystem_id, \"id\": kid}).Row()\r\n        if member {\r\n            res[\"member_id\"] = member[\"id\"]\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            member = DBFind(\"@1keys\").Where({\"ecosystem\": $ecosystem_id, \"id\": kid}).Row()\r\n            if member {\r\n                res[\"member_id\"] = member[\"id\"]\r\n                res[\"member_name\"] = IdToAddress(Int(member[\"id\"]))\r\n                res[\"image_id\"] = 0\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    conditions {\r\n        $notify = DBFind(\"@1notifications\").Where({\"ecosystem\": $ecosystem_id, \"id\": $NotificId}).Columns(\"recipient->role_id,sender->type,date_start_processing\").Row()\r\n        if !$notify {\r\n            warning LangRes(\"@1notification_not_found\", \"en\")\r\n        }\r\n\r\n        if $notify[\"sender.type\"] == 2 {\r\n            if Int($notify[\"date_start_processing\"]) != 0 {\r\n                warning LangRes(\"@1notification_processing_started_already\", \"en\")\r\n            }\r\n            var rid string\r\n            rid = Int($notify[\"recipient.role_id\"])\r\n            if rid > 0{\r\n                if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": rid, \"member->member_id\": $key_id, \"deleted\": 0}).One(\"id\") {\r\n                    warning LangRes(\"@1notification_not_part_of_role\", \"en\")\r\n                }\r\n            }\r\n        } else {\r\n            if $notify[\"sender.type\"] != 1 {\r\n                warning LangRes(\"@1notification_type_not_found\", \"en\")\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        var model map\r\n        model[\"processing_info\"] = getMemberInfo($key_id)\r\n        model[\"date_start_processing\"] = $block_time\r\n        DBUpdate(\"@1notifications\", $NotificId, model)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsClose",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract NotificationsClose {\r\n    data {\r\n        NotificId int\r\n    }\r\n\r\n    func getPermission() int {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1TokensRefundAccept\", \"@1TokensRefundReject\", \"@1VotingDecisionCheck\", \"@1VotingDelete\", \"@1QAnswer\", \"@1QOperations\", \"@1ErrandDelete\", \"@1GroupRequestDecide\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n        return result\r\n    }\r\n\r\n    conditions {\r\n        $notify = DBFind(\"@1notifications\").Where({\"ecosystem\": $ecosystem_id, \"id\": $NotificId}).Columns(\"id,date_start_processing,processing_info->member_id,closed,notification->type,recipient->member_id,recipient->role_id\").Row()\r\n        if !$notify {\r\n            warning LangRes(\"@1notification_not_found\", \"en\")\r\n        }\r\n\r\n        // checking the type of notification\r\n        if $notify[\"notification.type\"] != 1 && $notify[\"notification.type\"] != 2 {\r\n            warning LangRes(\"@1notification_type_not_found\", \"en\")\r\n        }\r\n\r\n        // getting permission\r\n        var flag_permission int\r\n        flag_permission = getPermission()\r\n\r\n        // checking personal notification\r\n        if $notify[\"notification.type\"] == 1 && flag_permission == 0 {\r\n            if $notify[\"recipient.member_id\"] != $key_id {\r\n                warning LangRes(\"@1notification_another_member\", \"en\")\r\n            }\r\n        }\r\n\r\n        // checking role notification\r\n        if $notify[\"notification.type\"] == 2 && flag_permission == 0 {\r\n            if $notify[\"date_start_processing\"] == 0 {\r\n                warning LangRes(\"@1notification_processing_not_started\", \"en\")\r\n            }\r\n\r\n            if $notify[\"processing_info.member_id\"] != $key_id {\r\n                warning LangRes(\"@1notice_processing_started_another_member\", \"en\")\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $notify[\"closed\"] > 0 {\r\n            return\r\n        }\r\n        if $notify[\"notification.type\"] == 1 {\r\n            @1NotificationsProcess(\"NotificId\", $NotificId)\r\n        }\r\n        var m map\r\n        m[\"date_closed\"] = $block_time\r\n        m[\"closed\"] = 1\r\n        DBUpdate(\"@1notifications\", $NotificId, m)\r\n\r\n        if $notify[\"notification.type\"] == 1 {\r\n            UpdateNotifications($ecosystem_id, Int($notify[\"recipient.member_id\"]))\r\n        } else {\r\n            UpdateRolesNotifications($ecosystem_id, Int($notify[\"recipient.role_id\"]))\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "NotificationsSend",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract NotificationsSend {\r\n    data {\r\n        MemberId int \"optional\"\r\n        Rid int \"optional\"\r\n        GroupId int \"optional\"\r\n        Closure int \"optional\"\r\n        Sender int\r\n        Icon string \"optional\"\r\n        Header string\r\n        Body string \"optional\"\r\n        Page string\r\n        Params string // json encoded expected\r\n        CurrentRid int \"optional\"\r\n        EcosystemId int \"optional\"\r\n        Popup string \"optional\"\r\n    }\r\n\r\n    func getMemberInfo(kid, ecoId int) map {\r\n        var res member map\r\n        member = DBFind(\"@1members\").Where({\"ecosystem\": ecoId, \"id\": kid}).Row()\r\n        if member {\r\n            res[\"member_id\"] = member[\"id\"]\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            if DBFind(\"@1keys\").Where({\"ecosystem\": ecoId, \"id\": kid}).Columns(\"id\").Row() {\r\n                res[\"member_id\"] = Str(kid)\r\n                res[\"member_name\"] = IdToAddress(kid)\r\n                res[\"image_id\"] = \"0\"\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    func sendNotify(recipient map) {\r\n        var notification map\r\n        notification[\"header\"] = $Header\r\n        notification[\"type\"] = $notify_type\r\n        notification[\"icon\"] = $Icon\r\n        notification[\"body\"] = $Body\r\n        if $Popup == \"true\" || $Popup == \"1\" {\r\n            notification[\"popup\"] = 1\r\n        } else {\r\n            notification[\"popup\"] = 0\r\n        }\r\n        var sender map\r\n        if $Sender == 1 && $senderMember {\r\n            // send from member\r\n            sender[\"type\"] = $Sender\r\n            sender[\"member_id\"] = $senderMember[\"member_id\"]\r\n            sender[\"member_name\"] = $senderMember[\"member_name\"]\r\n            sender[\"image_id\"] = $senderMember[\"image_id\"]\r\n        } else {\r\n            if $Sender == 2 && $senderRole {\r\n                // send from role\r\n                sender[\"type\"] = $Sender\r\n                sender[\"role_id\"] = $senderRole[\"id\"]\r\n                sender[\"role_name\"] = $senderRole[\"role_name\"]\r\n                sender[\"image_id\"] = $senderRole[\"image_id\"]\r\n            }\r\n        }\r\n        var model map\r\n        model[\"recipient\"] = recipient\r\n        model[\"sender\"] = sender\r\n        model[\"notification\"] = notification\r\n        model[\"page_name\"] = $Page\r\n        model[\"page_params\"] = $Params\r\n        model[\"date_created\"] = $block_time\r\n        model[\"ecosystem\"] = $EcosystemId\r\n        DBInsert(\"@1notifications\", model)\r\n    }\r\n\r\n    func sendToRole(roleId, ecoId int) {\r\n        var role recipient map\r\n        role = DBFind(\"@1roles\").Where({\"ecosystem\": ecoId, \"id\": roleId}).Row()\r\n        recipient[\"role_id\"] = role[\"id\"]\r\n        recipient[\"role_name\"] = role[\"role_name\"]\r\n        recipient[\"image_id\"] = role[\"image_id\"]\r\n        sendNotify(recipient)\r\n    }\r\n\r\n    conditions {\r\n        if $EcosystemId == 0 {\r\n            $EcosystemId = $ecosystem_id\r\n        }\r\n        $MemberId = Int($MemberId)\r\n        if Size($Icon) < 1 {\r\n            $Icon = \"icon-envelope\"\r\n        }\r\n        if $MemberId != 0 {\r\n            if !DBFind(\"@1keys\").Where({\"ecosystem\": $EcosystemId, \"id\": $MemberId}).Row() {\r\n                warning LangRes(\"@1key_not_found\", \"en\")\r\n            }\r\n            $notify_type = 1\r\n        } elif $Rid > 0 {\r\n            $notify_type = 2\r\n            if !DBFind(\"@1roles\").Where({\"ecosystem\": $EcosystemId, \"id\": $Rid}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"@1recipient_role_not_found\", \"en\")\r\n            }\r\n            if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $EcosystemId, \"role->id\": $Rid, \"deleted\": 0}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"@1recipient_role_no_members\", \"en\")\r\n            }\r\n        } elif $GroupId > 0 {\r\n            $notify_type = 1\r\n            if !DBFind(\"@1groups\").Where({\"ecosystem\": $EcosystemId, \"id\": $GroupId}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"@1recipient_group_not_found\", \"en\")\r\n            }\r\n            if !DBFind(\"@1groups_participants\").Where({\"ecosystem\": $EcosystemId, \"groups_info->id\": $GroupId, \"deleted\": 0}).One(\"id\") {\r\n                warning $this_contract + \": \" + LangRes(\"@1recipient_group_no_members\", \"en\")\r\n            }\r\n        } else {\r\n            warning $this_contract + \": \" + LangRes(\"@1notification_type_not_defined\", \"en\")\r\n        }\r\n        $senderMember = nil\r\n        $senderRole = nil\r\n        if $Sender == 1 {\r\n            $senderMember = getMemberInfo($key_id, $ecosystem_id)\r\n        } elif $Sender == 2 {\r\n            $senderRole = DBFind(\"@1roles\").Where({\"ecosystem\": $ecosystem_id, \"id\": $CurrentRid}).Row()\r\n            if !$senderRole {\r\n                warning $this_contract + \": \" + LangRes(\"@1sender_role_not_found\", \"en\")\r\n            }\r\n        } else {\r\n            warning $this_contract + \": \" + LangRes(\"@1sender_invalid\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $MemberId != 0 {\r\n            sendNotify(getMemberInfo($MemberId, $EcosystemId))\r\n            UpdateNotifications($EcosystemId, Int($MemberId))\r\n        } elif $Rid > 0 {\r\n            if $Closure == 1 {\r\n                // Single closure: one begins the process - the others do not see\r\n                sendToRole($Rid, $EcosystemId)\r\n                UpdateRolesNotifications($EcosystemId, Int($Rid))\r\n            } else {\r\n                // Multiple closure: to each his own notification\r\n                $notify_type = 1\r\n                var participants array\r\n                participants = DBFind(\"@1roles_participants\").Where({\"ecosystem\": $EcosystemId, \"role->id\": $Rid, \"deleted\": 0}).Columns(\"member->member_id\")\r\n                var i int\r\n                while i < Len(participants) {\r\n                    var p map\r\n                    p = participants[i]\r\n                    sendNotify(getMemberInfo(Int(p[\"member.member_id\"]), $EcosystemId))\r\n                    UpdateNotifications($EcosystemId, Int(p[\"member.member_id\"]))\r\n                    i = i + 1\r\n                }\r\n            }\r\n        } elif $GroupId > 0 {\r\n            var participants array\r\n            participants = DBFind(\"@1groups_participants\").Where({\"ecosystem\": $EcosystemId, \"groups_info->id\": $GroupId, \"deleted\": 0}).Columns(\"member->member_id\")\r\n            var i int\r\n            while i < Len(participants) {\r\n                var p map\r\n                p = participants[i]\r\n                sendNotify(getMemberInfo(Int(p[\"member.member_id\"]), $EcosystemId))\r\n                UpdateNotifications($EcosystemId, Int(p[\"member.member_id\"]))\r\n                i = i + 1\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "ProfileEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract ProfileEdit {\r\n    data {\r\n        MemberId string \"optional\"\r\n        PublicKey string \"optional\"\r\n        ImageId string \"optional\"\r\n\r\n        ApprovalFlag int \"optional\"\r\n\r\n        KYCFlag int \"optional\"\r\n        KYCBinaryId int \"optional\"\r\n\r\n        Phone string \"optional\"\r\n        Email string \"optional\"\r\n        IsCompany string \"optional\"\r\n        CompanyName string \"optional\"\r\n        CompanyTradeName string \"optional\"\r\n        CompanyRegNumber string \"optional\"\r\n        CompanyAddress string \"optional\"\r\n        PersonalName string \"optional\"\r\n        PersonalAddress string \"optional\"\r\n        PersonalID string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\", \"deleted\": 0}).One(\"id\")\r\n        $ImageId = Int($ImageId)\r\n\r\n        if $PublicKey == \"\" && $MemberId == \"\" {\r\n            warning \"The public key is empty\"\r\n        }\r\n\r\n        if $MemberId != \"\" {\r\n            $UserID = Int($MemberId)\r\n        } else {\r\n            $PublicKey = Replace($PublicKey, \" \", \"\")\r\n            if Size($PublicKey) < 128 {\r\n                warning \"The public key is too short\"\r\n            }\r\n            if Size($PublicKey) > 130 {\r\n                warning \"The public key is too long\"\r\n            }\r\n            $UserID = PubToID($PublicKey)\r\n        }\r\n        $member = DBFind(\"@1members\").Where({\"ecosystem\": $ecosystem_id, \"id\": $UserID}).Row()\r\n    }\r\n\r\n    action {\r\n        var m map\r\n\r\n        if $ImageId > 0 {\r\n            $Data = DBFind(\"@1binaries\").Where({\"ecosystem\": $ecosystem_id, \"id\": $ImageId}).One(\"data\")\r\n            $ImageId = @1UploadBinary(\"Name,Data,ApplicationId,MemberId\", \"avatar\", $Data, Int($app_id), $UserID)\r\n            m[\"image_id\"] = $ImageId\r\n        }\r\n\r\n        if $member {\r\n            if $ApprovalFlag == 1 {\r\n                m[\"member_info->approval_flag\"] = 1\r\n            } elif $KYCFlag == 1 {\r\n                $Data = DBFind(\"@1binaries\").Where({\"ecosystem\": $ecosystem_id, \"id\": $KYCBinaryId}).One(\"data\")\r\n                $kyc_id = @1UploadBinary(\"Name,Data,ApplicationId,MemberId\", \"kyc_doc\", $Data, Int($app_id), $UserID)\r\n                m[\"member_info->kyc_binary_id\"] = $kyc_id\r\n                m[\"member_info->approval_flag\"] = 0\r\n            } else {\r\n                if $IsCompany == \"true\" {\r\n                    m[\"member_info->is_company\"] = \"true\"\r\n                    m[\"member_info->company_name\"] = $CompanyName\r\n                    m[\"member_info->trade_name\"] = $CompanyTradeName\r\n                    m[\"member_info->reg_number\"] = $CompanyRegNumber\r\n                    m[\"member_info->company_address\"] = $CompanyAddress\r\n                    m[\"member_info->personal_name\"] = \"\"\r\n                    m[\"member_info->personal_address\"] = \"\"\r\n                    m[\"member_info->personal_id\"] = \"\"\r\n                } else {\r\n                    m[\"member_info->is_company\"] = \"\"\r\n                    m[\"member_info->company_name\"] = \"\"\r\n                    m[\"member_info->trade_name\"] = \"\"\r\n                    m[\"member_info->reg_number\"] = \"\"\r\n                    m[\"member_info->company_address\"] = \"\"\r\n                    m[\"member_info->personal_name\"] = $PersonalName\r\n                    m[\"member_info->personal_address\"] = $PersonalAddress\r\n                    m[\"member_info->personal_id\"] = $PersonalID\r\n                }\r\n                m[\"member_info->phone\"] = $Phone\r\n                m[\"member_info->email\"] = $Email\r\n\r\n                m[\"member_info->approval_flag\"] = 0\r\n            }\r\n            DBUpdateExt(\"@1members\", {\"ecosystem\": $ecosystem_id, \"id\": $UserID}, m)\r\n        } else {\r\n            m[\"id\"] = $UserID\r\n            m[\"member_info->pub\"] = $PublicKey\r\n            m[\"member_name\"] = IdToAddress($UserID)\r\n            m[\"ecosystem\"] = $ecosystem_id\r\n\r\n            if $IsCompany == \"true\" {\r\n                m[\"member_info->is_company\"] = \"true\"\r\n                m[\"member_info->company_name\"] = $CompanyName\r\n                m[\"member_info->trade_name\"] = $CompanyTradeName\r\n                m[\"member_info->reg_number\"] = $CompanyRegNumber\r\n                m[\"member_info->company_address\"] = $CompanyAddress\r\n                m[\"member_info->personal_name\"] = \"\"\r\n                m[\"member_info->personal_address\"] = \"\"\r\n                m[\"member_info->personal_id\"] = \"\"\r\n            } else {\r\n                m[\"member_info->is_company\"] = \"\"\r\n                m[\"member_info->company_name\"] = \"\"\r\n                m[\"member_info->trade_name\"] = \"\"\r\n                m[\"member_info->reg_number\"] = \"\"\r\n                m[\"member_info->company_address\"] = \"\"\r\n                m[\"member_info->personal_name\"] = $PersonalName\r\n                m[\"member_info->personal_address\"] = $PersonalAddress\r\n                m[\"member_info->personal_id\"] = $PersonalID\r\n            }\r\n            m[\"member_info->phone\"] = $Phone\r\n            m[\"member_info->email\"] = $Email\r\n\r\n            m[\"member_info->approval_flag\"] = 0\r\n            DBInsert(\"@1members\", m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesAccessCheck",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract RolesAccessCheck {\r\n    data {\r\n        Rid int\r\n    }\r\n\r\n    conditions {\r\n        var role map\r\n        role = DBFind(\"@1roles\").Where({\"ecosystem\": $ecosystem_id, \"id\": $Rid}).Columns(\"id,role_name,deleted,roles_access,role_type,creator->member_id\").Row()\r\n        if !role {\r\n            warning Sprintf(\"%v: \" + LangRes(\"@1role_not_found\", \"en\"), $this_contract)\r\n        }\r\n\r\n        if role[\"creator.member_id\"] == $key_id {\r\n            return\r\n        }\r\n\r\n        var rids array\r\n        rids = JSONDecode(role[\"roles_access\"])\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning Sprintf(LangRes(\"@1role_change_no_permission\", \"en\"), role[\"role_name\"])\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesAccessManager",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract RolesAccessManager {\r\n    data {\r\n        Action string\r\n        Rid int\r\n        ManagerRid string \"optional\"\r\n        Name string \"optional\"\r\n        Type int \"optional\"\r\n    }\r\n\r\n    func updateAccess(ra array) {\r\n        var roles_access string\r\n        roles_access = JSONEncode(ra)\r\n        DBUpdate(\"@1roles\", $Rid, {\"roles_access\": roles_access})\r\n    }\r\n\r\n    func updateBufferAccess(ra array) {\r\n        var roles_access string\r\n        roles_access = JSONEncode(ra)\r\n        var filled map\r\n        filled[\"roles_access\"] = roles_access\r\n        filled[\"role_name\"] = $Name\r\n        filled[\"role_type\"] = $Type\r\n\r\n        if !$buffer_id {\r\n            DBInsert(\"@1buffer_data\", {ecosystem:$ecosystem_id, \"member_id\": $key_id, \"key\": \"roles_access\", \"value\": filled})\r\n        } else {\r\n            DBUpdate(\"@1buffer_data\", Int($buffer_id), {\"value\": filled})\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        $ManagerRid = Int($ManagerRid)\r\n        if $Rid > 0 {\r\n            @1RolesAccessCheck(\"Rid\", $Rid)\r\n\r\n            $role = DBFind(\"@1roles\").Where({\"ecosystem\": $ecosystem_id, \"id\": $Rid}).Columns(\"id,roles_access\").Row()\r\n            if !$role {\r\n                warning LangRes(\"@1role_not_found\", \"en\")\r\n            }\r\n            if $ManagerRid > 0 {\r\n                if !DBFind(\"@1roles\").Where({\"ecosystem\": $ecosystem_id, \"id\": $ManagerRid}).One(\"id\") {\r\n                    warning LangRes(\"@1role_not_found\", \"en\")\r\n                }\r\n            }\r\n            var ids array, i int\r\n            $ids = ids\r\n            ids = JSONDecode($role[\"roles_access\"])\r\n            while i < Len(ids){\r\n                if ids[i] > 0 {\r\n                    $ids = Append($ids, ids[i])\r\n                }\r\n                i = i + 1\r\n            }\r\n        } else {\r\n            $buffer_managers = 0\r\n            $buffer_id = 0\r\n            $ids = []\r\n            var buffer map\r\n            buffer = DBFind(\"@1buffer_data\").Where({\"ecosystem\": $ecosystem_id, \"member_id\": $key_id, \"key\": \"roles_access\"}).Columns(\"id,value,value->roles_access\").Row()\r\n            if buffer {\r\n                $buffer_managers = buffer[\"value.roles_access\"]\r\n                $buffer_id = buffer[\"id\"]\r\n            }\r\n        }\r\n    }\r\n\r\n    action {\r\n        if $Rid == 0 {\r\n            if $buffer_managers {\r\n                $ids = JSONDecode($buffer_managers)\r\n            }\r\n        }\r\n        if $Action == \"clean\" {\r\n            updateAccess([])\r\n        }\r\n        if $ManagerRid > 0 {\r\n            var i int, idsNew array\r\n            if $Action == \"remove\" {\r\n                while i < Len($ids) {\r\n                    if $ids[i] != $ManagerRid {\r\n                        idsNew = Append(idsNew, $ids[i])\r\n                    }\r\n                    i = i + 1\r\n                }\r\n                if $Rid == 0 {\r\n                    updateBufferAccess(idsNew)\r\n                } else {\r\n                    updateAccess(idsNew)\r\n                }\r\n            }\r\n            if $Action == \"add\" {\r\n                var double bool\r\n                while i < Len($ids) {\r\n                    if $ids[i] == $ManagerRid {\r\n                        double = true\r\n                    }\r\n                    i = i + 1\r\n                }\r\n                if !double {\r\n                    $ids = Append($ids, $ManagerRid)\r\n                }\r\n                if $Rid == 0 {\r\n                    updateBufferAccess($ids)\r\n                } else {\r\n                    updateAccess($ids)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesAssign",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract RolesAssign {\r\n    data {\r\n        Rid int\r\n        MemberId int\r\n    }\r\n\r\n    func getMemberInfo(kid int) map {\r\n        var res member map\r\n        member = DBFind(\"@1members\").Where({\"ecosystem\": $ecosystem_id, \"id\": kid}).Row()\r\n        if member {\r\n            res[\"member_id\"] = member[\"id\"]\r\n            res[\"member_name\"] = member[\"member_name\"]\r\n            res[\"image_id\"] = member[\"image_id\"]\r\n        } else {\r\n            member = DBFind(\"@1keys\").Where({\"ecosystem\": $ecosystem_id, \"id\": kid}).Row()\r\n            if member {\r\n                res[\"member_id\"] = member[\"id\"]\r\n                res[\"member_name\"] = IdToAddress(Int(member[\"id\"]))\r\n                res[\"image_id\"] = 0\r\n            }\r\n        }\r\n        return res\r\n    }\r\n\r\n    conditions {\r\n        $role = DBFind(\"@1roles\").Where({\"id\": $Rid}).Columns(\"id,deleted,role_type,role_name,image_id,creator->member_id,company_id\").Row()\r\n        if Int($role[\"role_type\"]) == 2 {\r\n            warning LangRes(\"@1elective_role_voting_only\", \"en\")\r\n        }\r\n        if !$role {\r\n            warning LangRes(\"@1role_not_found\", \"en\")\r\n        }\r\n\r\n        if !DBFind(\"@1keys\").Where({\"ecosystem\": $ecosystem_id, \"id\": $MemberId}).Row() {\r\n            warning LangRes(\"@1key_not_found\", \"en\")\r\n        }\r\n\r\n        if $role[\"deleted\"] == 1 {\r\n            warning LangRes(\"@1role_deleted_request_impossible\", \"en\")\r\n        }\r\n\r\n        var specRules map prev_contract string\r\n        prev_contract = $stack[0]\r\n        if Len($stack) > 2{\r\n            prev_contract = $stack[Len($stack) - 2]\r\n        }\r\n        specRules[\"@1VotingValidatorAccept\"] = 1\r\n        specRules[\"@1DelegateRefresh\"] = 1\r\n        specRules[\"@1ValidatorRequest\"] = 1\r\n        specRules[\"@1InvestorRefresh\"] = 1\r\n\r\n        if specRules[prev_contract] != 1 {\r\n            @1RolesAccessCheck(\"Rid\", $Rid)\r\n        }\r\n    }\r\n\r\n    action {\r\n        if DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": $Rid, \"member->member_id\": $MemberId, \"deleted\": 0}).One(\"id\") {\r\n            // do not re-assign and do not warning because this contract may be called for other\r\n            return\r\n        }\r\n        var role member appointer map\r\n        role[\"id\"] = $role[\"id\"]\r\n        role[\"type\"] = $role[\"role_type\"]\r\n        role[\"name\"] = $role[\"role_name\"]\r\n        role[\"image_id\"] = $role[\"image_id\"]\r\n        role[\"company_id\"] = $role[\"company_id\"]\r\n\r\n        member = getMemberInfo($MemberId)\r\n        appointer = getMemberInfo($key_id)\r\n        var m map\r\n        m[\"role\"] = role\r\n        m[\"member\"] = member\r\n        m[\"appointed\"] = appointer\r\n        m[\"date_created\"] = $block_time\r\n        m[\"ecosystem\"] = $ecosystem_id\r\n        DBInsert(\"@1roles_participants\", m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "CompanyEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CompanyEdit {\r\n    data {\r\n        Step int\r\n        Id int \"optional\"\r\n\r\n        Name string \"optional\"\r\n        TraderName string \"optional\"\r\n\r\n        LegalForm string \"optional\"\r\n        \r\n        AddressCountry string \"optional\"\r\n        AddressStreet string \"optional\"\r\n        AddressHouseNumber string \"optional\"\r\n        AddressCity string \"optional\"\r\n        AddressPostalCode string \"optional\"\r\n\r\n        RegistrationAuthority string \"optional\"\r\n        RegistrationNumber string \"optional\"\r\n        RegistrationDate string \"optional\"\r\n        RegistrationDuration string \"optional\"\r\n        FlagUnlimited string \"optional\"\r\n\r\n        FlagLicense string \"optional\"\r\n        LicenseNumber string \"optional\"\r\n        LicenseAuthority string \"optional\"\r\n        LicenseActivity string \"optional\"\r\n        LicenseIssueDate string \"optional\"\r\n        LicenseValidUntil string \"optional\"\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n\r\n    func fixDatetimes() {\r\n        $registration_date = UnixDateTime(dateAddTime($RegistrationDate, \"00:00\"))\r\n        $registration_duration = UnixDateTime(dateAddTime($RegistrationDuration, \"00:00\"))\r\n        $license_issue_date = UnixDateTime(dateAddTime($LicenseIssueDate, \"00:00\"))\r\n        $license_valid_until = UnixDateTime(dateAddTime($LicenseValidUntil, \"00:00\"))\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n\r\n        fixDatetimes()\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time\r\n            m[\"approval_flags->name\"] = 0\r\n            m[\"approval_flags->legal\"] = 0\r\n            m[\"approval_flags->address\"] = 0\r\n            m[\"approval_flags->registration\"] = 0\r\n            m[\"approval_flags->license\"] = 0\r\n        }\r\n\r\n        if Int($Step) == 1 {\r\n            m[\"name\"] = $Name\r\n            m[\"trader_name\"] = $TraderName\r\n            m[\"approval_flags->name\"] = 0\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"legal_form\"] = $LegalForm\r\n            m[\"approval_flags->legal\"] = 0\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"address->country\"] = $AddressCountry\r\n            m[\"address->street\"] = $AddressStreet\r\n            m[\"address->house_number\"] = $AddressHouseNumber\r\n            m[\"address->city\"] = $AddressCity\r\n            m[\"address->postal_code\"] = $AddressPostalCode\r\n            m[\"approval_flags->address\"] = 0\r\n        }\r\n        if Int($Step) == 4 {\r\n            m[\"registration->authority\"] = $RegistrationAuthority\r\n            m[\"registration->number\"] = $RegistrationNumber\r\n            m[\"registration->date\"] = $registration_date\r\n            if $FlagUnlimited == \"true\" {\r\n                m[\"registration->duration\"] = 0\r\n            } else {\r\n                m[\"registration->duration\"] = $registration_duration\r\n            }\r\n            m[\"approval_flags->registration\"] = 0\r\n        }\r\n        if Int($Step) == 5 {\r\n            if $FlagLicense == \"true\" {\r\n                m[\"license->number\"] = $LicenseNumber\r\n                m[\"license->authority\"] = $LicenseAuthority\r\n                m[\"license->activity\"] = $LicenseActivity\r\n                m[\"license->issue_date\"] = $license_issue_date\r\n                m[\"license->valid_until\"] = $license_valid_until\r\n            } else {\r\n                m[\"license->number\"] = \"\"\r\n                m[\"license->authority\"] = \"\"\r\n                m[\"license->activity\"] = \"\"\r\n                m[\"license->issue_date\"] = 0\r\n                m[\"license->valid_until\"] = 0\r\n            }\r\n            m[\"approval_flags->license\"] = 0\r\n        }\r\n\r\n        if Int($Id) == 0 {\r\n            $new_id = DBInsert(\"companies_list\", m)\r\n\r\n            $role_client = \"Issuer (\" + $Name + \")\"\r\n            $role_shareholder = \"Shareholder (\" + $Name + \")\"\r\n            $role_board_member = \"Board Member (\" + $Name + \")\"\r\n\t\t\t$role_board_directors = \"Board of Directors (\" + $Name + \")\"\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_client, 4, $new_id)\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_shareholder, 5, $new_id)\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_board_member, 6, $new_id)\r\n            RolesCreate(\"Name,Type,CompanyId\", $role_board_directors, 7, $new_id)\r\n        } else {\r\n            DBUpdate(\"companies_list\", Int($Id), m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesInstall",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract RolesInstall {\r\n\r\n    func updateParam(name string, value int) {\r\n        var app_param map\r\n        app_param = DBFind(\"@1app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app_id, \"name\": name}).Row()\r\n        if app_param {\r\n            var params map\r\n            params[\"Id\"] = Int(app_param[\"id\"])\r\n            params[\"Value\"] = value\r\n            params[\"Conditions\"] = \"ContractConditions(\\\"MainCondition\\\")\"\r\n            CallContract(\"@1EditAppParam\", params)\r\n        } else {\r\n            var params map\r\n            params[\"ApplicationId\"] = $app_id\r\n            params[\"Name\"] = name\r\n            params[\"Value\"] = value\r\n            params[\"Conditions\"] = \"ContractConditions(\\\"MainCondition\\\")\"\r\n            CallContract(\"@1NewAppParam\", params)\r\n        }\r\n    }\r\n\r\n    func addRole(name string, withParticipant bool, managerId int) int{\r\n        var m map paramName string id int\r\n        m[\"role_name\"] = name\r\n        m[\"role_type\"] = 3\r\n        m[\"ecosystem\"] = $ecosystem_id\r\n        id = Int(DBFind(\"@1roles\").Where(m).One(\"id\"))\r\n        if id == 0 {\r\n            m[\"default_page\"] = \"\"\r\n            m[\"deleted\"] = 0\r\n            m[\"creator->image_id\"] = 0\r\n            m[\"creator->member_name\"] = \"founder\"\r\n            m[\"creator->member_id\"] = Str($key_id)\r\n            m[\"date_created\"] = $block_time\r\n            if managerId > 0 {\r\n                m[\"roles_access\"] = Sprintf(\"[%v]\", managerId)\r\n            } else {\r\n                m[\"roles_access\"] = \"[]\"\r\n            }\r\n            id = DBInsert(\"@1roles\", m)\r\n        }\r\n        paramName = \"role_\" + Replace(ToLower(name), \" \", \"_\")\r\n        updateParam(paramName, id)\r\n\r\n        if withParticipant {\r\n            var participant map\r\n            participant[\"role->id\"] = id\r\n            participant[\"role->type\"] = m[\"role_type\"]\r\n            participant[\"role->name\"] = m[\"role_name\"]\r\n            participant[\"role->image_id\"] = 0\r\n            participant[\"member->member_id\"] = Str($key_id)\r\n            participant[\"member->member_name\"] = \"founder\"\r\n            participant[\"member->image_id\"] = 0\r\n            participant[\"ecosystem\"] = $ecosystem_id\r\n\r\n            if !DBFind(\"@1roles_participants\").Where(participant).One(\"id\") {\r\n                participant[\"date_created\"] = $block_time\r\n                DBInsert(\"@1roles_participants\", participant)\r\n            }\r\n        }\r\n        return id\r\n    }\r\n\r\n    conditions {\r\n        MainCondition()\r\n    }\r\n\r\n    action {\r\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"System\"}).One(\"id\")\r\n        var managerId int\r\n        managerId = addRole(\"Admin\", true, 0)\r\n        @1RolesAccessManager(\"Action,Rid,ManagerRid\", \"add\", managerId, managerId)\r\n        updateParam(\"role_creates_roles\", managerId)\r\n\r\n        addRole(\"Developer\", true, managerId)\t\t\r\n        addRole(\"Law Firm: Junior Lawyer\", true, managerId)\r\n        addRole(\"Law Firm: Partner\", true, managerId)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "RolesUnassign",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract RolesUnassign {\r\n    data {\r\n        RowId int\r\n    }\r\n\r\n    conditions {\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->type\": 3, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n\r\n        var assigned map\r\n        assigned = DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"id\": $RowId, \"deleted\": 0}).Columns(\"id,role->id\").Row()\r\n        if !assigned {\r\n            warning \"The role participant is not found\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        m[\"deleted\"] = $block_time\r\n        m[\"date_deleted\"] = $block_time\r\n        DBUpdate(\"@1roles_participants\", $RowId, m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesApprov",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesApprov {\n    data {\n        Id int\n        Step int\n    }\n\n    conditions {\n        // get the App\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\n        // get the AppParam\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\n        // get the arrays\n        var rids_law_firm_junior rids_law_firm_partner array\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\n\n        // access check\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\n            warning LangRes(\"@1access_denied\", \"en\")\n        }\n    }\n\n    action {\n        var m map\n        if Int($Step) == 1 {\n            m[\"approval_flags->distribution\"] = 1\n        }\n        if Int($Step) == 2 {\n            m[\"approval_flags->details\"] = 1\n        }\n        if Int($Step) == 3 {\n            m[\"approval_flags->information\"] = 1\n        }\n        DBUpdate(\"companies_securities\", Int($Id), m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesEdit {\r\n    data {\r\n        Step int\r\n        Id int \"optional\"\r\n        CompanyId int \"optional\"\r\n\r\n        Owner string \"optional\"\r\n\r\n        SecType string \"optional\"\r\n        Nominal string \"optional\"\r\n        Other string \"optional\"\r\n\r\n        Info string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time\r\n            m[\"company_id\"] = $CompanyId\r\n            m[\"approval_flags->details\"] = 0\r\n            m[\"approval_flags->information\"] = 0\r\n        }\r\n\r\n        if Int($Step) == 1 {\r\n            m[\"owner\"] = $Owner\r\n            m[\"balance\"] = 0\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"details->type\"] = $SecType\r\n            m[\"details->nominal\"] = $Nominal\r\n            m[\"details->other\"] = $Other\r\n            m[\"approval_flags->details\"] = 0\r\n        }\r\n        if Int($Step) == 3 {\r\n            m[\"info\"] = $Info\r\n            m[\"approval_flags->information\"] = 0\r\n        }\r\n\r\n        if Int($Id) == 0 {\r\n            DBInsert(\"companies_securities\", m)\r\n        } else {\r\n            DBUpdate(\"companies_securities\", Int($Id), m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesHistoryApprov",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesHistoryApprov {\r\n    data {\r\n        Id int\r\n        Step int\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Step) == 1 {\r\n            m[\"approval_flags->order\"] = 1\r\n        }\r\n        if Int($Step) == 2 {\r\n            m[\"approval_flags->comment\"] = 1\r\n        }\r\n        DBUpdate(\"companies_securities_history\", Int($Id), m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesHistoryEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesHistoryEdit {\r\n    data {\r\n        Id int \"optional\"\r\n        SecuritiesId int \"optional\"\r\n\r\n        OrderType int\r\n        OrderDate string\r\n        Amount int\r\n        Comments string\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n        if $OrderType == -1 {\r\n            $check_balance = DBFind(\"@1companies_securities\").WhereId($SecuritiesId).One(\"balance\")\r\n            if Int($Amount) > Int($check_balance) {\r\n                warning (\"Sale amount is greater than current balance\")\r\n            }\r\n        }\r\n        if Int($Id) == 0 {\r\n            $securities = DBFind(\"companies_securities\").Where({\"id\": $SecuritiesId}).Columns(\"company_id,owner,balance\").Row()\r\n            if !$securities {\r\n                warning \"Securities is not found\"\r\n            }\r\n        } else {\r\n            $securities_history = DBFind(\"companies_securities_history\").Where({\"id\": $Id}).One(\"security_id\")\r\n            if !$securities_history {\r\n                warning \"Securities history is not found\"\r\n            }\r\n        }\r\n\r\n        if $original_contract == \"ExcelParseConfirm\"{\r\n            $order_date = UnixDateTime($OrderDate)\r\n        } else{\r\n            $order_date = UnixDateTime(dateAddTime($OrderDate, \"00:00\"))\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"company_id\"] = $securities[\"company_id\"]\r\n            m[\"date_created\"] = $block_time\r\n            m[\"owner\"] = $securities[\"owner\"]\r\n            m[\"security_id\"] = $SecuritiesId\r\n        }\r\n\r\n        m[\"approval_flags->order\"] = 0\r\n        m[\"approval_flags->comment\"] = 0\r\n        m[\"order_type\"] = $OrderType\r\n        m[\"order_date\"] = $order_date\r\n        m[\"order_amount\"] = $Amount\r\n        m[\"order_comments\"] = $Comments\r\n\r\n        if Int($Id) == 0 {\r\n            DBInsert(\"companies_securities_history\", m)\r\n            SecuritiesHistoryRecount(\"SecuritiesId\", $SecuritiesId)\r\n        } else {\r\n            DBUpdate(\"companies_securities_history\", Int($Id), m)\r\n            SecuritiesHistoryRecount(\"SecuritiesId\", Int($securities_history))\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "ExcelParseConfirm",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract ExcelParseConfirm {\r\n    data {\r\n        MemberWallet string\r\n        CompanyId int\r\n        SecuritiesId int\r\n    }\r\n\r\n    conditions {}\r\n\r\n    action {\r\n        var requests array i line_amount int req map\r\n        $manager = IdToAddress($key_id)\r\n        requests = DBFind(\"@1security_intermediate_data\").Where({\"owner\":$MemberWallet,\"company_id\":$CompanyId,\"manager\":$manager,\"securities_id\":$SecuritiesId,\"deleted\":0})\r\n        if Len(requests) > 0 {\r\n            i = 0\r\n            while i < Len(requests) {\r\n                req = requests[i]\r\n                $Secdate = DateTime(Int(req[\"date\"]))\r\n                if Int(req[\"amount\"]) > 0 {\r\n                    SecuritiesHistoryEdit(\"OrderType,OrderDate,SecuritiesId,Amount,Comments\",1,$Secdate,$SecuritiesId,Int(req[\"amount\"]),req[\"comments\"])\r\n                } else {\r\n                    line_amount = Int(Str(Replace(req[\"amount\"], \"-\", \"\")))\r\n                    SecuritiesHistoryEdit(\"OrderType,OrderDate,SecuritiesId,Amount,Comments\",-1,$Secdate,$SecuritiesId,line_amount,req[\"comments\"])\r\n                }\r\n                i = i + 1\r\n            }\r\n        } else {\r\n            warning LangRes(\"@1security_not_found\",\"en\")\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesTransfer",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesTransfer {\r\n    data {\r\n        OrderId int\r\n    }\r\n\r\n    func getPermission() int {\r\n        var array_permissions array result i int prevContract string\r\n        array_permissions = [\"@1SecuritiesOrderSign\"]\r\n\r\n        prevContract = $stack[0]\r\n        if Len($stack) > 2 {\r\n            prevContract = $stack[Len($stack) - 2]\r\n        }\r\n        while i < Len(array_permissions) {\r\n            var contract_name string\r\n            contract_name = array_permissions[i]\r\n            if contract_name==prevContract {\r\n                result = 1\r\n            }\r\n            i = i + 1\r\n        }\r\n\r\n        if result == 0 {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n    }\r\n\r\n    conditions {\r\n       getPermission()   //getting permission to run\r\n    }\r\n\r\n    action {\r\n        var order m map securities_previous_owner securities_new_owner int\r\n        order = DBFind(\"@1companies_orders_securities\").WhereId($OrderId).Row()\r\n        $comp_id = Int(order[\"company_id\"])\r\n        $prev_owner = Str(order[\"previous_owner\"])\r\n        $new_owner = Str(order[\"new_owner\"])\r\n        securities_previous_owner = Int(DBFind(\"@1companies_securities\").Where({\"company_id\":$comp_id,\"deleted\":0,\"owner\":$prev_owner}).One(\"id\"))\r\n        securities_new_owner = Int(DBFind(\"@1companies_securities\").Where({\"company_id\":$comp_id,\"deleted\":0,\"owner\":$new_owner}).One(\"id\"))\r\n        $comment = \"Sale and Purchase Agreement (shares transferred to \"+$new_owner+\")\"\r\n        m[\"company_id\"] = $comp_id\r\n        m[\"date_created\"] = $block_time\r\n        m[\"owner\"] = $prev_owner\r\n        m[\"order_comments\"] = $comment\r\n        m[\"security_id\"] = securities_previous_owner\r\n        m[\"approval_flags->order\"] = 1\r\n        m[\"approval_flags->comment\"] = 1\r\n        m[\"order_type\"] = -1\r\n        m[\"order_date\"] = Int(order[\"order_date\"])\r\n        m[\"order_amount\"] = Int(order[\"order_amount\"])\r\n        m[\"transaction_type\"] = 1\r\n\r\n        DBInsert(\"@1companies_securities_history\", m) // - amount previous owner\r\n        SecuritiesHistoryRecount(\"SecuritiesId\", securities_previous_owner)\r\n\r\n        $comment = \"Sale and Purchase Agreement (shares obtained from \"+$prev_owner+\")\"\r\n        m[\"order_comments\"] = $comment\r\n        m[\"owner\"] = $new_owner\r\n        m[\"security_id\"] = securities_new_owner\r\n        m[\"order_type\"] = 1\r\n        m[\"transaction_type\"] = 1\r\n\r\n        DBInsert(\"@1companies_securities_history\", m) // + amount new owner\r\n        SecuritiesHistoryRecount(\"SecuritiesId\", securities_new_owner)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesOrderTransfer",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesOrderTransfer {\r\n    data {\r\n        PreviousOwner int\r\n        NewOwner int\r\n        Amount int\r\n        OrderDate string\r\n        CompanyId int \r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n    \r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n\r\n        // access check\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n            warning LangRes(\"@1access_denied\", \"en\")\r\n        }\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->member_id\": $PreviousOwner, \"deleted\": 0}).Row() {\r\n            warning \"The previous owner of the securities was not found in the company\"\r\n        }\r\n        if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->member_id\": $NewOwner, \"deleted\": 0}).Row() {\r\n            warning \"The new owner of the securities was not found in the company\"\r\n        }\r\n        $PreviousOwnerAddress = IdToAddress($PreviousOwner)\r\n        $securities = DBFind(\"@1companies_securities\").Where({\"company_id\": $CompanyId,\"owner\":$PreviousOwnerAddress}).Columns(\"id,company_id,owner,balance\").Row()\r\n        if !$securities {\r\n            warning \"Securities is not found\"\r\n        }\r\n        if $Amount > Int($securities[\"balance\"]){\r\n            warning \"Previous owner balance less than the amount\"\r\n        }\r\n        \r\n        $order_date = UnixDateTime(dateAddTime($OrderDate, \"00:00\")) \r\n    }\r\n    action {\r\n        var m map\r\n        m[\"order_signs->previous_owner_sign\"] = \"\"\r\n        m[\"order_signs->previous_owner_sign_time\"] = \"\"\r\n        m[\"order_signs->new_owner_sign\"] = \"\"\r\n        m[\"order_signs->new_owner_sign_time\"] = \"\"\r\n        m[\"order_signs->issuer_sign\"] = \"\"\r\n        m[\"order_signs->issuer_sign_time\"] = \"\"\r\n        m[\"order_signs->comments\"] = \"\"\r\n        m[\"order_signs->reject_step\"] = \"\"\r\n        m[\"company_id\"] = $CompanyId\r\n        m[\"date_created\"] = $block_time\r\n        m[\"order_amount\"] = $Amount\r\n        m[\"order_date\"] = $order_date\r\n        m[\"new_owner\"] = IdToAddress($NewOwner)\r\n        m[\"previous_owner\"] = $PreviousOwnerAddress\r\n        m[\"security_id\"] = $securities[\"id\"]\r\n        DBInsert(\"@1companies_orders_securities\", m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesOrderTransferEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesOrderTransferEdit {\r\n    data {\r\n        OrderId int\r\n        PreviousOwner int \"optional\"\r\n        NewOwner int \"optional\"\r\n        Amount int \"optional\"\r\n        OrderDate string \"optional\"\r\n        DOCBinaryId int \"optional\"\r\n        ApprovalFlag int \"optional\"\r\n        CompanyId int \"optional\"\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n\r\n    conditions {\r\n        // get the App\r\n        $app = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Companies Registry\"}).One(\"id\")\r\n        // get the AppParam\r\n        $role_law_firm_junior = AppParam(Int($app), \"role_law_firm_junior\", $ecosystem_id)\r\n        $role_law_firm_partner = AppParam(Int($app), \"role_law_firm_partner\", $ecosystem_id)\r\n        // get the arrays\r\n        var rids_law_firm_junior rids_law_firm_partner array\r\n        rids_law_firm_junior = JSONDecode(\"[\"+$role_law_firm_junior+\"]\")\r\n        rids_law_firm_partner = JSONDecode(\"[\"+$role_law_firm_partner+\"]\")\r\n\r\n        // access check\r\n        if $ApprovalFlag {\r\n            $check_access = Int(DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_partner}, \"member->member_id\": $key_id, \"deleted\": 0}).One(\"id\"))\r\n            if $check_access == 0 {\r\n                warning LangRes(\"@1access_denied\", \"en\")\r\n            }\r\n        } else {\r\n            if DBFind(\"@1companies_orders_securities\").Where({\"id\": $OrderId,\"approval_flags\": 1}).Row() {\r\n                warning \"Data has been verified. Editing is not possible\"\r\n            }\r\n            if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->id\": {\"$in\": rids_law_firm_junior}, \"member->member_id\": $key_id, \"deleted\": 0}).Row() {\r\n                warning LangRes(\"@1access_denied\", \"en\")\r\n            }\r\n            if $Amount {\r\n                $PreviousOwnerId = DBFind(\"@1companies_orders_securities\").WhereId($OrderId).One(\"previous_owner\")\r\n                $securities = DBFind(\"@1companies_securities\").Where({\"company_id\": $CompanyId,\"owner\":$PreviousOwnerId}).Columns(\"id,company_id,owner,balance\").Row()\r\n                if $Amount > Int($securities[\"balance\"]){\r\n                    warning \"Previous owner balance less than the amount\"\r\n                }\r\n                $order_date = UnixDateTime(dateAddTime($OrderDate, \"00:00\"))\r\n            } else {\r\n                $PreviousOwnerAddress = IdToAddress($PreviousOwner)\r\n                $NewOwnerAddress = IdToAddress($NewOwner)\r\n                if $PreviousOwner {\r\n                    if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->member_id\": $PreviousOwner, \"deleted\": 0}).Row() {\r\n                        warning \"The previous owner of the securities was not found in the company\"\r\n                    }\r\n                    if !DBFind(\"@1companies_securities\").Where({\"company_id\": $CompanyId,\"owner\":$PreviousOwnerAddress}).Row() {\r\n                        warning \"Securities ID not found\"\r\n                    }\r\n                }\r\n                if $NewOwner {\r\n                    if !DBFind(\"@1roles_participants\").Where({\"ecosystem\": $ecosystem_id, \"role->company_id\": $CompanyId, \"role->type\": 5, \"member->member_id\": $NewOwner, \"deleted\": 0}).Row() {\r\n                        warning \"The new owner of the securities was not found in the company\"\r\n                    }\r\n                    if !DBFind(\"@1companies_securities\").Where({\"company_id\": $CompanyId,\"owner\":$NewOwnerAddress}).Row() {\r\n                        warning \"Securities ID not found\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    action {\r\n        var m map\r\n        if $DOCBinaryId > 0 {\r\n            m[\"file_id\"] = $DOCBinaryId\r\n        }\r\n        if $ApprovalFlag {\r\n            var param map\r\n            m[\"approval_flags\"] = 1\r\n            m[\"status\"] = 1\r\n            param[\"order_id\"] = $OrderId\r\n            param[\"step\"] = 1\r\n            $order_info = DBFind(\"@1companies_orders_securities\").WhereId($OrderId).Row()\r\n            $PreviousOwnerId = AddressToId($order_info[\"previous_owner\"])\r\n            @1NotificationsSend(\"CurrentRid,MemberId,Sender,Icon,Header,Body,Page,Rid,Closure,EcosystemId,Params\", $role_law_firm_partner, $PreviousOwnerId, 2, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"@1details_view\", \"en\"), \"@1co_se_order_sign\", 0, 0, $ecosystem_id,param)\r\n        }\r\n        if $PreviousOwner {\r\n            m[\"previous_owner\"] = $PreviousOwnerAddress\r\n        }\r\n        if $NewOwner {\r\n            m[\"new_owner\"] = $NewOwnerAddress\r\n        }\r\n        if $Amount {\r\n            m[\"order_amount\"] = $Amount\r\n            m[\"order_date\"] = $order_date\r\n        }\r\n        DBUpdate(\"@1companies_orders_securities\",$OrderId,m)\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SecuritiesOrderSign",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SecuritiesOrderSign {\r\n    data {\r\n        OrderId int\r\n        Action string\r\n        Comments string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        $check = DBFind(\"@1companies_orders_securities\").Columns(\"id,new_owner,company_id,previous_owner,status,order_signs,order_signs->previous_owner_sign,order_signs->new_owner_sign,order_signs->issuer_sign\").WhereId($OrderId).Row()\r\n        if Int($check[\"status\"]) > 0 && Str($check[\"order_signs.previous_owner_sign\"]) == \"\" {\r\n            if AddressToId($check[\"previous_owner\"]) != $key_id {\r\n                warning \"You are not the previous owner of the securities\"\r\n            }\r\n            $step = 1\r\n        } elif Int($check[\"status\"]) > 0 && Str($check[\"order_signs.previous_owner_sign\"]) != \"\" && Str($check[\"order_signs.new_owner_sign\"]) == \"\" {\r\n            if AddressToId($check[\"new_owner\"]) != $key_id {\r\n                warning \"You are not the new owner of the securities\"\r\n            }\r\n            $step = 2\r\n        } elif Int($check[\"status\"]) > 0 && Str($check[\"order_signs.previous_owner_sign\"]) != \"\" && Str($check[\"order_signs.new_owner_sign\"]) != \"\" && Str($check[\"order_signs.issuer_sign\"]) == \"\" {\r\n            $c_id = Int($check[\"company_id\"])\r\n            $issuer_check = DBFind(\"@1roles_participants\").Columns(\"id,role,role->id,role->company_id,role->type,member,member->member_id,deleted,ecosystem\").Where({\"role->type\":4,\"member->member_id\":$key_id,\"role->company_id\":$c_id,\"deleted\":0,\"ecosystem\":$ecosystem_id}).Row()\r\n            if !$issuer_check[\"id\"] {\r\n                warning \"You are not the Issuer of the this company\"\r\n            }\r\n            $step = 3\r\n        } else {\r\n            warning \"Transaction Closed\"\r\n        }\r\n    }\r\n\r\n    action {\r\n        var m param map\r\n        $pub = DBFind(\"@1keys\").Columns(\"id,pub,ecosystem\").Where({\"id\":$key_id,\"ecosystem\":$ecosystem_id}).One(\"pub\")\r\n        $pub_sign = Sha256($pub)\r\n        if $step == 1 {\r\n            if $Action == \"accept\" {\r\n                m[\"order_signs->previous_owner_sign\"] = $pub_sign\r\n                m[\"order_signs->previous_owner_sign_time\"] = $block_time\r\n                param[\"order_id\"] = Int($check[\"id\"])\r\n                $NewOwnerId = AddressToId($check[\"new_owner\"])\r\n                @1NotificationsSend(\"MemberId,Sender,Icon,Header,Body,Page,Rid,Closure,EcosystemId,Params\",$NewOwnerId, 1, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"@1details_view\", \"en\"), \"@1co_se_order_sign\", 0, 0,$ecosystem_id,param)\r\n            } else {\r\n                if !$Comments {\r\n                    warning \"You must specify the reason for the refusal\"\r\n                }\r\n                m[\"status\"] = -1\r\n                m[\"order_signs->comments\"] = $Comments\r\n                m[\"order_signs->reject_step\"] = 1\r\n            }\r\n            \r\n            $NotificId = DBFind(\"@1notifications\").Where({\"recipient->member_id\":$key_id,\"page_params->order_id\":$OrderId,\"closed\":0}).One(\"id\")\r\n        }\r\n        if $step == 2 {\r\n            if $Action == \"accept\" {\r\n                $c_id = Int($check[\"company_id\"])\r\n                $issuer_id = Int(DBFind(\"@1roles\").Where({\"role_type\":4,\"company_id\":$c_id,\"deleted\":0,\"ecosystem\":$ecosystem_id}).One(\"id\"))\r\n                m[\"order_signs->new_owner_sign\"] = $pub_sign\r\n                m[\"order_signs->new_owner_sign_time\"] = $block_time\r\n                param[\"order_id\"] = Int($check[\"id\"])\r\n                m[\"status\"] = 2\r\n                @1NotificationsSend(\"Rid,Sender,Icon,Header,Body,Page,Params,Closure,EcosystemId\",$issuer_id, 1, \"icon icon-envelope-open\", \"Transaction confirmation\", LangRes(\"@1details_view\", \"en\"), \"@1co_se_order_sign\",param,1,$ecosystem_id)\r\n            } else {\r\n                if !$Comments {\r\n                    warning \"You must specify the reason for the refusal\"\r\n                }\r\n                m[\"status\"] = -1\r\n                m[\"order_signs->comments\"] = $Comments\r\n                m[\"order_signs->reject_step\"] = 2\r\n            }\r\n            $NotificId = DBFind(\"@1notifications\").Where({\"recipient->member_id\":$key_id,\"page_params->order_id\":$OrderId,\"closed\":0}).One(\"id\")\r\n        }\r\n        if $step == 3 {\r\n            if $Action == \"accept\" {\r\n                m[\"order_signs->issuer_sign\"] = $pub_sign\r\n                m[\"order_signs->issuer_sign_time\"] = $block_time\r\n                m[\"status\"] = 3\r\n            } else {\r\n                if !$Comments {\r\n                    warning \"You must specify the reason for the refusal\"\r\n                }\r\n                m[\"status\"] = -1\r\n                m[\"order_signs->comments\"] = $Comments\r\n                m[\"order_signs->reject_step\"] = 3\r\n            }\r\n            $role_issuer_id = Int($issuer_check[\"role.id\"])\r\n            $NotificIdMap = DBFind(\"@1notifications\").Where({\"recipient->role_id\":$role_issuer_id,\"page_params->order_id\":$OrderId,\"closed\":0}).Row()\r\n            $NotificId = Int($NotificIdMap[\"id\"])\r\n            if Int($NotificIdMap[\"date_start_processing\"]) == 0 {\r\n                @1NotificationsProcess(\"NotificId\",Int($NotificId))\r\n            }\r\n        }\r\n        DBUpdate(\"@1companies_orders_securities\",Int($check[\"id\"]),m)\r\n         if $step == 3 {\r\n            if $Action == \"accept\" {\r\n                @1SecuritiesTransfer(\"OrderId\",Int($check[\"id\"]))\r\n            }\r\n        }\r\n        if Int($NotificId) > 0 {\r\n            @1NotificationsClose(\"NotificId\",Int($NotificId))\r\n        }\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "SettingSupportMessSend",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SettingSupportMessSend {\r\n    data {\r\n        InquiryId int\r\n        Details string \"optional\"\r\n        Rid int \"optional\"\r\n        Action string \"optional\"\r\n        RoleForwarding int \"optional\"\r\n    }\r\n    conditions {\r\n        $check_owner = DBFind(\"@1settings_support\").Columns(\"id,sender,role_recipient,processing_info,processing_info->account_id,status\").WhereId($InquiryId).Row()\r\n        $check_account_id = IdToAddress($key_id)\r\n\r\n        if Int($check_owner[\"role_recipient\"]) != Int($Rid) && Str($check_owner[\"sender\"]) != $check_account_id {\r\n            warning \"Not enough rights to access the inquiry\"\r\n        }\r\n        if Str($check_owner[\"sender\"]) != $check_account_id && $check_owner[\"processing_info\"] != \"\" && Str($check_owner[\"processing_info.account_id\"]) != $check_account_id {\r\n            warning \"Not enough rights to access the inquiry\"\r\n        }\r\n        if Int($check_owner[\"status\"]) == 2 {\r\n            warning \"Inquiry closed by creator\"\r\n        }\r\n        if $Action == \"\" {\r\n            if $Details == \"\" {\r\n                warning \"Message is empty\"\r\n            }\r\n        }\r\n    }\r\n    action {\r\n        if $Action == \"close\" {\r\n            if Str($check_owner[\"sender\"]) == $check_account_id {\r\n                var k map\r\n                k[\"status\"] = 2\r\n                k[\"date_closed\"] =$block_time\r\n                DBUpdate(\"@1settings_support\",$InquiryId,k)\r\n            } else {\r\n                warning \"You are not a inquiry creator\"\r\n            }\r\n        } elif $Action == \"forwarding\"{\r\n            if Int($check_owner[\"role_recipient\"]) == Int($Rid) && Int($check_owner[\"status\"]) == 0 {\r\n                  DBUpdate(\"@1settings_support\",$InquiryId,{\"role_recipient\":$RoleForwarding})\r\n            } else {\r\n                 warning \"Cannot redirect inquiry\"\r\n            }\r\n        } else {\r\n            if Str($check_owner[\"sender\"]) != $check_account_id && $check_owner[\"processing_info\"] == \"\" && Int($check_owner[\"role_recipient\"]) == $Rid {\r\n                var l map\r\n                l[\"processing_info->account_id\"] = $check_account_id\r\n                l[\"processing_info->date_start\"] = $block_time\r\n                l[\"status\"] = 1\r\n                DBUpdate(\"@1settings_support\",$InquiryId, l)\r\n            }\r\n            var m map\r\n            m[\"id_inquiry\"] = $InquiryId\r\n            m[\"sender\"] = $check_account_id\r\n            m[\"messange_text\"] = $Details\r\n            m[\"messange_date\"] = $block_time\r\n            DBInsert(\"@1settings_support_messanges\",m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "SettingSupportSend",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract SettingSupportSend {\r\n    data {\r\n        Subject string\r\n        Details string\r\n    }\r\n    conditions {\r\n        if $Subject == \"\" {\r\n            warning \"Subject is empty\"\r\n        }\r\n        if $Details == \"\" {\r\n            warning \"Details is empty\"\r\n        }\r\n    }\r\n    action {\r\n        $role_rec = Int(DBFind(\"@1roles\").Where({\"role_name\":\"Admin\",\"ecosystem\":$ecosystem_id,\"deleted\":0}).One(\"id\"))\r\n\r\n        $address = IdToAddress($key_id)\r\n        if Int($role_rec) == 0 {\r\n            warning \"Role recipient not found\"\r\n        }\r\n        var m l inquire_info map\r\n        inquire_info[\"subject\"] = $Subject\r\n        inquire_info[\"details\"] = $Details\r\n\r\n        m[\"inquiry_info\"] = inquire_info\r\n        m[\"date_created\"] = $block_time\r\n        m[\"role_recipient\"] = Int($role_rec)\r\n        m[\"sender\"] = $address\r\n\r\n        $id_inq = DBInsert(\"@1settings_support\",m)\r\n\r\n        l[\"id_inquiry\"] = Int($id_inq)\r\n        l[\"sender\"] = $address\r\n        l[\"messange_text\"] = Str($Details)\r\n        l[\"messange_date\"] = $block_time\r\n        DBInsert(\"@1settings_support_messanges\",l)\r\n    }\r\n}\r\n",
            "Type": "contracts"
        },
        {
            "Name": "UpdateSysParam",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract UpdateSysParam {\r\n    data {\r\n        Name string\r\n        Value string\r\n        Conditions string \"optional\"\r\n    }\r\n\r\n    conditions {\r\n        @1AdminCondition()\r\n        if GetContractByName($Name) == 0 {\r\n            warning LangRes(\"@1system_parameter_not_found\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        var params map\r\n        params[\"Value\"] = $Value\r\n        CallContract($Name, params)\r\n        DBUpdateSysParam($Name, $Value, $Conditions)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "NewUser",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract NewUser {\r\n    data {\r\n        NewPubkey string\r\n    }\r\n\r\n    conditions {\r\n        $newId = PubToID($NewPubkey)\r\n        if $newId == 0 {\r\n            warning LangRes(\"@1wrong_pub\", \"en\")\r\n        }\r\n        if DBFind(\"@1keys\").Columns(\"id\").Where({\"id\": $newId, \"ecosystem\": $ecosystem_id}).One(\"id\") != nil {\r\n            warning LangRes(\"@1template_user_exists\", \"en\")\r\n        }\r\n\r\n        $amount = Money(1000) * Money(1000000000000000000)\r\n    }\r\n\r\n    action {\r\n        NewMoney($newId, Str($amount), \"New user deposit\")\r\n        SetPubKey($newId, StringToBytes($NewPubkey))\r\n        @1ProfileEdit(\"PublicKey\", $NewPubkey)\r\n        $result = $newId \r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "UploadFileExcel",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract UploadFileExcel {\r\n    data {\r\n        ApplicationId int\r\n        Data file\r\n        CompanyId int\r\n    }\r\n\r\n    conditions {\r\n        $Name = \"security_sharholders_excel\"\r\n        $Body = $Data[\"Body\"]\r\n        $DataMimeType = $Data[\"MimeType\"]\r\n    }\r\n\r\n    action {\r\n        var requests array i int req map\r\n        $account_id = IdToAddress($key_id)\r\n        requests = DBFind(\"@1security_intermediate_data\").Where({\"manager\":$account_id,\"deleted\":0})\r\n        if Len(requests) > 0 {\r\n            DBUpdateExt(\"@1security_intermediate_data\", {manager: $account_id, deleted: 0}, {deleted: 1})\r\n        }\r\n\r\n        $Id = @1UploadBinary(\"ApplicationId,Name,Data,DataMimeType\", $ApplicationId, $Name, $Body, $DataMimeType)\r\n        $result = $Id\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "full_nodes",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract full_nodes {\r\n    data {\r\n        Value string\r\n    }\r\n\r\n    conditions {\r\n        if Size($Value) == 0 {\r\n            warning \"Value was not received\"\r\n        }\r\n\r\n        var full_nodes_arr array\r\n        full_nodes_arr = JSONDecode($Value)\r\n\r\n        var len_arr int\r\n        len_arr = Len(full_nodes_arr)\r\n\r\n        if len_arr == 0 {\r\n            warning \"Wrong array structure\"\r\n        }\r\n\r\n        var i int\r\n        while(i < len_arr){\r\n            var node_map map\r\n            node_map = full_nodes_arr[i]\r\n\r\n            var public_key string\r\n            var tcp_address string\r\n            var api_address string\r\n            var key_id string\r\n\r\n            public_key = node_map[\"public_key\"]\r\n            tcp_address = node_map[\"tcp_address\"]\r\n            api_address = node_map[\"api_address\"]\r\n            key_id = node_map[\"key_id\"]\r\n\r\n            if Size(public_key) == 0 {\r\n                warning \"Public key was not received\"\r\n            }\r\n            if Size(tcp_address) == 0 {\r\n                warning \"TCP address was not received\"\r\n            }\r\n            if Size(api_address) == 0 {\r\n                warning \"API address was not received\"\r\n            }\r\n            if Size(key_id) == 0 {\r\n                warning \"Key ID was not received\"\r\n            }\r\n\r\n            i = i + 1\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}